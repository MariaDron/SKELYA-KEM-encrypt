//
// Created by Maria_Dron on 3/18/2019.
//

#ifndef SKELYA_KEM_ENCRYPT_CONST_H
#define SKELYA_KEM_ENCRYPT_CONST_H

typedef unsigned char byte;

//input
static byte n = 881;
static byte t = 159;
static byte q = 7673;
static byte EncMsgLenBytes = 1432;
static byte maxMsgLenBytes = 132;
static byte db = 256;
static byte bufferLenBytes = 165;
static byte octL = 1;
static byte OID[3] = {0x00, 0x00, 0x01};

//output
static byte mLenBytes = 131;
static unsigned int a[] = {0X14, 0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                           0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,	0X27,	0X28,	0X29,
                           0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,	0X32,	0X33,	0X34,
                           0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,	0X3D,	0X3E,	0X3F,
                           0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,	0X48,	0X49,	0X4A,
                           0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,	0X53,	0X54,	0X55,
                           0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,	0X5E,	0X5F,	0X60,
                           0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,	0X69,	0X6A,	0X6B,
                           0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,	0X74,	0X75,	0X76,
                           0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,	0X7F,	0X80,	0X81,
                           0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,	0X8A,	0X8B,	0X8C,
                           0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,	0X95,	0X96};

static unsigned int b[] = {0X00,	0X01,	0X02,	0X03,	0X04,	0X05,	0X06,	0X07,	0X08,	0X09,	0X0A,
                           0X0B,	0X0C,	0X0D,	0X0E,	0X0F,	0X10,	0X11,	0X12,	0X13,	0X14,	0X15,
                           0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,	0X1F};

//M = b || l || m || p0
static unsigned int M[] = {0X00,	0X01,	0X02,	0X03,	0X04,	0X05,	0X06,	0X07,	0X08,	0X09,	0X0A,
                           0X0B,	0X0C,	0X0D,	0X0E,	0X0F,	0X10,	0X11,	0X12,	0X13,	0X14,	0X15,
                           0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,	0X1F,	0X83,
                           0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                           0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,	0X27,	0X28,	0X29,
                           0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,	0X32,	0X33,	0X34,
                           0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,	0X3D,	0X3E,	0X3F,
                           0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,	0X48,	0X49,	0X4A,
                           0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,	0X53,	0X54,	0X55,
                           0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,	0X5E,	0X5F,	0X60,
                           0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,	0X69,	0X6A,	0X6B,
                           0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,	0X74,	0X75,	0X76,
                           0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,	0X7F,	0X80,	0X81,
                           0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,	0X8A,	0X8B,	0X8C,
                           0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,	0X95,	0X96,	0X00};

//Mtrin = Tabl 7.1_convert  (b || l || m || p0)
static int Mtrin[] = {0, 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 0,
                0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 1,	 0,
                0,	 1,	 0,	 1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,  0,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 0,	 0,
                0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 1,	 1,	 0,	 1, -1,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 0,
                0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	 1,  0,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	 0,	 0,	 1,	-1,	 0,
                -1,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	-1,	-1,	 1,	 0,	 0, -1,	 0,	 0,	 0,	 0,	 1,	 1,	 1,	 1,	 1,	 1,	 0,	 0,
                -1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,  1,	 0,	 1,	-1,	 0,	 0,	-1,	 1,	 1,	 1,	 0,	 1,	-1,
                1,	-1,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 1,	-1,	 0,	 0,  0,	 1,	 0,	-1,	 1,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,
                -1,	-1,	 0,	 0,	 1,	 1,	 1,	 0,	 0,	 1,	 0,	 0,	 1,  0,	 0,	-1,	 0,	 1,	 1,	 0,	 1,	 1,	-1,	 1,	 1,	 1,
                0,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	-1,	 0,	 1,	-1,	 1,  0,	 0,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,
                -1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	-1,	 0,	 1,	 0,	 0, -1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	 1,	 1,	-1,	 0,
                1,	 0,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 1,	 1,	-1,  0,	 0,	 0,	 1,	 0,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	 0,
                0,	 1,	-1,	 1,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 1,	 1,	 1,	-1,	-1,	 0,	 0,	 1,	 1,	 0,	-1,
                0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 1,  1,	 1,	 1,	 1,	 1,	 0,	 0,	 1,	 1,	 1,	-1,	 0,	 1,
                1,	 0,	 1,	 1,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0, -1,	 0,	-1,	 1,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,
                1,	 1,	 1,	-1,	 1,	 0,	-1,	 0,	 1,	-1,	 0,	-1,	 0,  1,	 0,	-1,	 0,	 0,	 0,	-1,	 1,	 1,	-1,	 0,	 1,	-1,
                1,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	-1,	 0,	 0,	 0,	 0,  0,	-1,	 0,	 0,	 0,	-1,	 1,	 1,	 0,	 1,	 0,	 1,	 0,
                0,	 1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	-1,  1,	-1,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	-1,	 0,	 1,
                1,	 1,	 1,	 0,	 1,	 0,	 1,	 0,	 1,	 0,	-1,	 0,	-1,  1,	 1,	 1,	 1,	 1,	-1,	 1,	-1,	 0,	 1,	 1,	 1,	 0,
                -1,	 1,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	 0,	 1,	 0,	 1, -1,	 1,	 0,	-1,	 1,	 1,	 0,	 0,	 1,	-1,	 0,	 0,	 1,
                -1,	 0,	-1,	 0,	-1,	 0,	-1,	 1,	 1,	-1,	 0,	 1,	-1,  0,	-1,	 0,	 1,	 0,	-1,	 1,	-1,	 0,	-1,	 1,	-1,	 1,
                1,	 1,	-1,	 1,	 0,	 1,	-1,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 0,	-1,	 1,	-1,	 1,	-1,	 0,	 1,	 1,	 0,	 1,
                0,	 0,	-1,	-1,	 1,	 0,	 0,	 1,	-1,	-1,	 0,	 1,	-1,  1,	 0,	-1,	 0,	 0,	-1,	-1,	 1,	-1,	 0,	-1,	 0,	 0,
                0,	 0,	 1,	 1,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	 1,	 1, -1,	 0,	 0,	 1,	 1,	-1,	 1,	 1,	 1,	 1,	 1,	 0,	 0,
                1,	 0,	-1,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 1,	-1,	 1,  1,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 1,	 1,	-1,	 1,
                -1,	 0,	-1,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	 0,  0,	 1,	 1,	-1,	 1,	-1,	 1,	 0,	 1,	 0,	 1,	 1,	-1,
                0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,	 1,  0,	-1,	-1,	 1,	 0,	 1,	 0,	 1,	-1,	 0,	 1,	 0,	 1,
                0,	 1,	-1,	 0,	 0,	-1,	 1,	 0,	-1,	 1,	-1,	-1,	 0, -1,	 0,	 1,	 0,	 1,	-1,	-1,	 0,	-1,	 1,	 1,	 1,	 0,
                1,	-1,	 1,	 0,	 1,	 1,	 0,	-1,	 0,	 1,	 1,	-1,	 1,  1,	-1,	 1,	-1,	-1,	 1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,
                -1,	-1,	 1,	-1,	 1,	 0,	 1,	-1,	 1,	-1,	 1,	 1,	 1,  0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,
                -1,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,  0,	 0,	 1,	-1,	 1,	 1,	 0,	 1,	 1,	-1,	 0,	 0,	 1,
                0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	-1,	 1,	 0,  0,	 0,	 1,	-1,	 0,	-1,	 0,	 1,	 1,	 0,	 1,	 1,	 1,
                0,	 0,	 1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	-1,	 0,  1,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 0,
                -1,	 0,	 1,	 1,	 1,	 1,	 1,	 1,	-1,	 0,	 1,	 0,	 1, -1,	 0,	 0,	-1,	 1,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 0,
                1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

//sData = oid||m||b||Trunc(h)
static unsigned int sData[] = {0X00,	0X00,	0X01,	0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,
                               0X1C,	0X1D,	0X1E,	0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,
                               0X27,	0X28,	0X29,	0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,
                               0X32,	0X33,	0X34,	0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,
                               0X3D,	0X3E,	0X3F,	0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,
                               0X48,	0X49,	0X4A,	0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,
                               0X53,	0X54,	0X55,	0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,
                               0X5E,	0X5F,	0X60,	0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,
                               0X69,	0X6A,	0X6B,	0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,
                               0X74,	0X75,	0X76,	0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,
                               0X7F,	0X80,	0X81,	0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,
                               0X8A,	0X8B,	0X8C,	0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,
                               0X95,	0X96,	0X00,	0X01,	0X02,	0X03,	0X04,	0X05,	0X06,	0X07,	0X08,
                               0X09,	0X0A,	0X0B,	0X0C,	0X0D,	0X0E,	0X0F,	0X10,	0X11,	0X12,	0X13,
                               0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                               0X1F,	0X52,	0X4B,	0X8A,	0X07,	0X04,	0X00,	0X33,	0X59,	0X57,	0XB8,
                               0X67,	0X82,	0XB1,	0X93,	0X35,	0X20,	0XAF,	0X0F,	0X26,	0X49,	0XB6,
                               0X8D,	0X70,	0XC0,	0XB9,	0X01,	0XCC,	0XC2,	0X3C,	0X68,	0X10,	0XAF};

static int r[] = {0, 1,	-1,	-1,	 0,	-1,	 0,	 1,	-1,	 1,	 0,	 0,	 1,
                0,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	 1,  0,	 0,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,	 0,
                0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,  0,	 0,	-1,	 0,	-1,	 1,	 1,	 0,	-1,	 0,	 1,	-1,	 0,
                -1,	 1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 0,  0,	 0,	 0,	 1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	-1,	-1,	-1,	-1,	 0,	 0,	 1,	 0,	 0,	 0, -1,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,
                1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,  0,	 0,	-1,	 0,	 0,	 0,	 0,	 1,	 0,	 1,	 0,	 1,	 0,
                0,	 0,	 0,	-1,	 0,	-1,	 1,	-1,	 0,	 1,	 0,	 0,	 1,  0,	 0,	-1,	 0,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,
                0,	-1,	 0,	 1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	 1,  0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 1,	 1,
                -1,	-1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,	-1,	 1,	 0,  0,	 0,	 0,	 1,	 0,	-1,	 0,	-1,	 1,	 0,	 0,	-1,	 1,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,  0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 1,	 1,	 0,	-1,	-1,
                0,	-1,	-1,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,  0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	-1,	-1,	 0,	 0,
                0,	 0,	 1,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	 0,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 1,
                -1,	 0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	-1,	 1, -1,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	 0,	 1,
                0,	 0,	 0,	 0,	-1,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,  0,	-1,	-1,	 0,	 1,	 1,	 0,	 0,	 1,	 0,	 1,	-1,	-1,
                0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,  0,	 1,	-1,	 0,	-1,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,
                0,	-1,	-1,	 0,	 1,	 1,	-1,	 0,	 0,	-1,	 1,	 0,	 0,  0,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,
                1,	 1,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,  0,	 1,	 1,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,
                0,	 0,	 1,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,  1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	-1,
                1,	 0,	 0,	-1,	 0,	 0,	 1,	-1,	 1,	 0,	 0,	 1,	 0,  0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	-1,
                -1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0, -1,	-1,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	-1,	 0,
                0,	 0,	-1,	 0,	 1,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0, -1,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	-1,	-1,	 0,	 0,	 1,
                1,	-1,	 0,	 1,	 1,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,  0,	 0,	 0,	 0,	-1,	-1,	 1,	 1,	-1,	 0,	-1,	 1,	 0,
                1,	 1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,  0,	-1,	 1,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	-1,	-1,	 0,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 0,  0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 0,
                0,	 1,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 0,	 0,  0,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 0,
                1,	-1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	 0,	 0,	 1,	 0,  0,	 0,	 1,	 0,	 1,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	 0,
                1,	 0,	-1,	 0,	 0,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 1,  0,	 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,
                0,	 0,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 1,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 0,	 0,	 0,  0,	-1,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 0,	-1,	-1,	 1,	 1,	 0,	-1,	 0,	 0,	 0,	-1,
                0,	 0,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	-1,	 0,	 0,	-1,  1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 1,	 0,	 1,	-1,
                0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 1,	-1,	 0,	 1,	-1,  0,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,
                1,	 0,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 1,	 0,	 0,	 0,  0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	-1,
                0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	-1};

//R = r*h mod q
static unsigned int R[] = {0x0AD1,	0xF7E6,	0x01E1,	0x0DB0,	0x0134,	0xF513,	0xFAF8,
        0x03CD,	0x0C82,	0x0DDE,	0x0680,	0xF1AA,	0x0E8F,	0x0338, 0x03F2,	0xFE76,	0x083A,	0x074A,	0xFA9A,	0x0096,	0x086F,
        0x081D,	0x0C88,	0xF2D7,	0xF83D,	0x02BE,	0xF3BE,	0x04E1, 0x036F,	0xFC86,	0xF3E8,	0x00A5,	0x0D94,	0x096D,	0xF978,
        0x0303,	0x0E72,	0xFB1E,	0xFB70,	0xFC64,	0x0B7B,	0xFBE7, 0x0CD0,	0xF6C1,	0x0D26,	0xF8B7,	0x05E0,	0xFD7B,	0xF4F3,
        0x046E,	0x0B86,	0xF673,	0x07FF,	0x0693,	0x060D,	0xFCDE, 0x0B3F,	0x00E7,	0xF953,	0xF9B5,	0xF6A6,	0x0179,	0xFF2A,
        0x0E17,	0x0103,	0xF1DB,	0xF202,	0xFA7B,	0xF2C8,	0xF957, 0x07AA,	0xF534,	0xF420,	0x0788,	0xF7D7,	0xFCD7,	0x0C1B,
        0xFAEB,	0x0CD1,	0x0867,	0x0A78,	0xF999,	0x0EB7,	0xFBF8, 0xF31F,	0xFE2F,	0x0913,	0xFF42,	0xFA13,	0xF73B,	0x07AE,
        0xF4C5,	0xF866,	0xF3BE,	0x0314,	0xF2C8,	0x01AC,	0xF4F4,0xF876,	0xF930,	0x08F9,	0x082C,	0x0027,	0x0600,	0x0566,
        0xF96E,	0x0AAD,	0x0327,	0xFA8F,	0x0D68,	0xF55B,	0x03D8, 0x0CFC,	0xF4AB,	0xF63D,	0xFC58,	0xF3D7,	0x0EB5,	0x08E6,
        0x0E08,	0x0D33,	0x0058,	0x0840,	0xF1DF,	0x085C,	0xFE40, 0x06EB,	0x0EA8,	0x00E8,	0x055A,	0x0E67,	0xFAE6,	0x0196,
        0x0470,	0x0D94,	0xF2C2,	0xF2BE,	0xF6DC,	0xF7A6,	0xF79E, 0xF116,	0xF5F7,	0xF5C8,	0x0D28,	0x0C1D,	0x09F3,	0xF7C6,
        0x05D5,	0xFDE5,	0xF285,	0xF97B,	0x098A,	0xFAD3,	0xFBA3, 0x0106,	0x08B9,	0xF2EE,	0xFA19,	0x0C8A,	0xFC5D,	0xF938,
        0x002F,	0xF9BC,	0xF461,	0xF536,	0xF713,	0x090E,	0x08FD, 0xF786,	0x003A,	0x0C50,	0x021A,	0xF676,	0x01C7,	0x09BB,
        0xF4F7,	0xF1E6,	0x0E9E,	0x089A,	0x02FB,	0x01EE,	0xF39F, 0xF15B,	0xFA11,	0x061D,	0x077A,	0xF49D,	0xFB30,	0x01F5,
        0x05F4,	0x0CDE,	0x01BE,	0xF9C1,	0x0A66,	0x0181,	0x055A, 0xF948,	0xF50C,	0xF42E,	0xFB3B,	0x0E24,	0xF88D,	0x0456,
        0x0EA0,	0x01E1,	0x06B7,	0xFCB3,	0x0690,	0xFEF0,	0x00F6, 0x0696,	0xF411,	0xFA1E,	0x041B,	0x08BD,	0x0454,	0x09FA,
        0xF750,	0xF5FD,	0x04F7,	0x0133,	0xF2D0,	0xFC9A,	0xFBF3, 0x0158,	0xFF22,	0xF315,	0xF430,	0x0EAC,	0xF60A,	0x0D6A,
        0xF863,	0xF7DF,	0x0461,	0xF67E,	0x0B4F,	0x0809,	0x00A3, 0xF7F7,	0xF205,	0xF254,	0xF8A3,	0x0C40,	0xFA79,	0xF54E,
        0x0244,	0xFFF9,	0xFEF5,	0xFC96,	0xFABD,	0x0C9A,	0xF5B3, 0x04ED,	0xF7D4,	0xFC7B,	0x04A9,	0x00A0,	0xFD17,	0x0AE4,
        0x03EE,	0x0E55,	0x0D25,	0x0E34,	0x0EC3,	0x0431,	0xF386, 0xFEF0,	0xF2F9,	0xFCB0,	0xF18F,	0x049A,	0x0782,	0xF7B5,
        0xFE93,	0xF44C,	0x054E,	0xF6DE,	0xF6B6,	0xFBA5,	0x0E3C, 0xFDDD,	0x00AF,	0x02B3,	0xF4FD,	0xFC63,	0xF70C,	0xFD53,
        0xF2A7,	0xFB2C,	0xFE4C,	0x0434,	0x0E08,	0xFE3D,	0x0DAD, 0xFC9D,	0xF842,	0xF3F6,	0x004B,	0x0C51,	0xF7C4,	0xFE8E,
        0xFD51,	0x0748,	0xF47E,	0xF910,	0x05D1,	0xF9C0,	0x01DB, 0xFAA0,	0x088B,	0x09C8,	0xFE56,	0x0DCD,	0x053F,	0xFB13,
        0xF7A3,	0x0A38,	0xFF7B,	0x0323,	0xFF64,	0x0625,	0x0892, 0x036A,	0x0567,	0xFD00,	0x037D,	0x017E,	0xF9C5,	0x0295,
        0x0DBD,	0xF122,	0x0EB6,	0x0E8C,	0x04EF,	0xF593,	0xF334, 0xFFE3,	0x061D,	0xF23D,	0x01A4,	0xF5C1,	0x081D,	0x0C24,
        0x0A5B,	0xF969,	0x0066,	0x0B77,	0xFED6,	0xF932,	0x060D, 0xFEA7,	0x0B17,	0xFF1F,	0xF9AE,	0xF844,	0x0CA0,	0x0CCC,
        0x05EF,	0xFFA4,	0xF450,	0x00E9,	0xF403,	0xF307,	0xFCB3, 0x0B84,	0xFF94,	0xF145,	0xF517,	0xF537,	0x07D3,	0x0A49,
        0x0B82,	0x08C5,	0xFCA4,	0xF29C,	0xF6C2,	0xF31B,	0xF177, 0xFDD5,	0x0801,	0xFB97,	0xFA4A,	0x0557,	0x0BF6,	0x019C,
        0x03E2,	0x043C,	0xF64A,	0x0AEE,	0x0B6F,	0x0E34,	0x048F, 0xFFD0,	0xF432,	0x0C7B,	0x0E30,	0x0274,	0xF70E,	0x00E9,
        0xF67E,	0x0AFF,	0x0CF7,	0xFCE3,	0xFB85,	0xF861,	0x06D3, 0x089A,	0xF6E8,	0xF31D,	0xFC93,	0x0971,	0x089B,	0xF7CB,
        0xFAD6,	0x097B,	0x0379,	0x09C1,	0x0940,	0x0011,	0x068C, 0xF8B5,	0xF9AA,	0xF29C,	0x04FC,	0xFB56,	0xFA0A,	0x05D5,
        0xFA60,	0x0CD3,	0xF5DA,	0xF3EF,	0xF95E,	0x06E1,	0xFE12, 0x0157,	0x0845,	0xFBC4,	0xF3BA,	0xF494,	0x0387,	0x0902,
        0xF72B,	0x0BBF,	0xFED4,	0x0247,	0xFECA,	0xF4BF,	0x0458, 0x0EB1,	0x097E,	0xF826,	0x0018,	0x07FC,	0x0A9C,	0xFC70,
        0x010E,	0xFE10,	0x04CA,	0xF561,	0x0D64,	0xFDC9,	0xF958, 0x02A1,	0x0DBF,	0x0380,	0xF946,	0xF5EA,	0x03C3,	0x0790,
        0xFEB4,	0x0384,	0x0190,	0xF909,	0xF57B,	0xFD7D,	0xF275, 0x04C5,	0xF4C1,	0x0B4D,	0x05A4,	0xF6F3,	0x01E4,	0x099A,
        0x0CAF,	0x0D0F,	0xFBBC,	0x01C9,	0xF43B,	0xF565,	0xF78E, 0xFAA7,	0x06C9,	0x02E3,	0xF2E4,	0x0C3C,	0xFC84,	0xFAD4,
        0x029F,	0x0292,	0x0077,	0x0DB0,	0x0871,	0x0E3A,	0xF9B2, 0xF3B3,	0x0D29,	0x04C7,	0xF8E9,	0xFB4E,	0xF91F,	0x0320,
        0x06A5,	0x0312,	0xF132,	0xF277,	0xFAB1,	0x02AB,	0xFE37, 0x0909,	0xF111,	0xFDCD,	0xF355,	0x0D23,	0xFA2A,	0xF4AB,
        0x027B,	0x047D,	0x069A,	0x0DCA,	0xF19F,	0x0A53,	0x00CC, 0xF11B,	0x046A,	0x0E78,	0x0BF9,	0xF3AE,	0x0935,	0xFE4B,
        0xFC1F,	0xF70B,	0x06DF,	0xF6A0,	0x0CE2,	0x012B,	0xFB47, 0xFE96,	0x0347,	0x0CFC,	0xF7D4,	0x09F6,	0x0560,	0xF39C,
        0x0DE1,	0xFFC8,	0x01BF,	0x0D10,	0xFD23,	0x0472,	0x094B, 0x082D,	0xF75A,	0x09DA,	0xF93D,	0x0E56,	0x0708,	0x0DDF,
        0x0E81,	0x043B,	0xF97E,	0xF785,	0x0871,	0xF592,	0xFA20, 0xFD33,	0x08B3,	0xF6FE,	0x0D69,	0x0D11,	0xF1A3,	0x0638,
        0x023D,	0xF27E,	0x096A,	0xF3DD,	0x031C,	0xF494,	0x0B7F, 0xF609,	0x0358,	0xFE4D,	0x0366,	0xF869,	0x0312,	0x07F7,
        0x0468,	0x01F8,	0x0469,	0xFF2B,	0xFD29,	0x08AF,	0x029E, 0xF863,	0xF21B,	0xF888,	0xF292,	0x06C3,	0xF446,	0x0157,
        0xFEF3,	0xF903,	0xF608,	0xF757,	0x08AE,	0xF495,	0x08F4, 0x0D59,	0x0AE2,	0x0D4D,	0x0520,	0xFD24,	0x0D21,	0x0C6E,
        0x0520,	0xF9FC,	0x0531,	0xF65F,	0x0653,	0x03C4,	0xF6AD, 0x0A78,	0xFBAD,	0xFBD3,	0x0AD4,	0x06BE,	0xF49B,	0x0974,
        0xF69C,	0x0E9D,	0xFD1A,	0xFA51,	0x0DE2,	0x047D,	0x0716, 0x07E3,	0xFBCA,	0xFE6F,	0x0EA9,	0xFD2E,	0xF3A1,	0xF144,
        0xFCA8,	0x0A8A,	0xFBB4,	0xF239,	0x0C88,	0xF47D,	0x0DCC, 0x0E83,	0xF6A8,	0xFE37,	0x05AB,	0x0E75,	0xF99A,	0x0594,
        0x0BA2,	0xFBF9,	0x00C2,	0x00A9,	0x0D10,	0x045E,	0xFECF, 0xF9D3,	0xF983,	0x0101,	0xFBD5,	0xF9BC,	0x0288,	0x0CBF,
        0x074B,	0x0AF9,	0x0277,	0x0683,	0xF331,	0xF77B,	0xFDD0, 0xFAE9,	0x011B,	0x08A6,	0xF71F,	0x0939,	0x0AC3,	0xFA7D,
        0x0EB2,	0x0862,	0xF22B,	0x00E1,	0xFD6D,	0x0101,	0x0747, 0x0A55,	0x02E0,	0xFC4F,	0xFA61,	0x0553,	0x0E4C,	0x0D33,
        0x065A,	0x028C,	0xFB53,	0xF7A9,	0xF47F,	0x030F,	0x03C0, 0x08E5,	0x00B9,	0xF4FF,	0x0697,	0xF615,	0xFCE4,	0xF33F,
        0x0769,	0xF1D6,	0xF63F,	0xFB00,	0xF622,	0xFFC5,	0xF63D, 0xF9A0,	0xF77E,	0x0374,	0xF9CE,	0x0925,	0x053E,	0xF90A,
        0x07E8,	0x06E1,	0xF1FE,	0xFBCE,	0xFF01,	0xF941,	0xF695, 0xF35E,	0xFD1C,	0xF9C4,	0xF6C6,	0xF3F7,	0x08F5,	0xF2B4,
        0x0CC1,	0xFF57,	0x0E71,	0x0A6B,	0x0B64,	0xFE87,	0xF241, 0xFFD9,	0x0948,	0x093F,	0x0E95,	0xF482,	0x0079,	0xFAEC,
        0xFD77,	0x090B,	0x0E75,	0x0A8F,	0xF1B1,	0x07FA,	0xF285, 0xFB93,	0x01BD,	0x063C,	0x04E4,	0xFCB6,	0x0CEB,	0x0715,
        0xF736,	0x0BE7,	0xFDF7,	0x0570,	0x0B13,	0x0729,	0xF623, 0x05B9,	0xF4DE,	0xFCB9,	0x0796,	0xFCE5,	0x08DB,	0xF19E,
        0x018A,	0x0B19,	0xF436,	0xF188,	0xF8E5,	0xF3DB,	0xF40F, 0xF85B,	0x0373,	0x0878,	0xF306,	0xF974,	0x0A1F,	0xF3D9,
        0xFCDD,	0xFAA6,	0xF729,	0xF653,	0xF5AC,	0x02AC,	0x0CF3, 0x0D2C,	0xF4CB,	0xF9E5,	0x0CB9,	0xF3FA,	0xFFE0,	0xF3FC,
        0x08ED,	0xF674,	0x03C8,	0x0EBE,	0x064E,	0xF89E,	0xF111, 0xF226,	0xFDD4,	0xFE0C,	0xF305,	0xFBFC,	0x04D4,	0x0732,
        0x04D6,	0xF8F8,	0xFED5,	0x07F2,	0xF7A4,	0xF636,	0xFFEA, 0xF344,	0xFA2C,	0xFA4E,	0x0937,	0xFF55,	0xF857,	0x0892,
        0x0C8F,	0xFC68,	0xF251,	0xF31A,	0x0EBE,	0xF32D,	0xF78E, 0x03CB,	0x02AE,	0x0465,	0xF39C,	0x073D,	0xF361,	0xF9B5,
        0x0044,	0x0E20,	0x0ED7,	0x00FC,	0x0700,	0xFE7F,	0xFFE9, 0x072A,	0x078B,	0x0652,	0x0EEC,	0xF14C,	0xF261,	0x0CC9,
        0xF7A5,	0x0CA3,	0x08C3,	0x0C00,	0x0BE5,	0x03A0};

//oR4 = R mod 4 – oktets
static unsigned int oR4[] = {0X64,	0X31,	0XA2,	0XCA,	0XAA,	0XD3,	0X69,	0XE1,	0X13,	0XA0,	0XF1,
                             0XB3,	0XEB,	0XF6,	0XFD,	0X9B,	0XFB,	0X38,	0X0F,	0XF7,	0X1C,	0XFE,
                             0XF9,	0XA0,	0X08,	0X4C,	0XA7,	0XCC,	0X34,	0XD8,	0XC3,	0X0C,	0X2E,
                             0X82,	0X8A,	0XB0,	0X79,	0X5E,	0XF9,	0X99,	0X31,	0XB9,	0XA2,	0XBF,
                             0XAB,	0XBD,	0X64,	0X4A,	0X66,	0X0B,	0X18,	0X7C,	0X29,	0XB4,	0X87,
                             0XCB,	0X24,	0X2B,	0XDB,	0X7D,	0X31,	0X85,	0X9B,	0X4D,	0X32,	0X53,
                             0X61,	0X3A,	0X72,	0XA4,	0X7D,	0XCF,	0X00,	0X56,	0XB4,	0X92,	0X13,
                             0X32,	0X7F,	0X3C,	0X6B,	0X19,	0X5A,	0X3C,	0XD4,	0X53,	0X6E,	0X9F,
                             0XE0,	0X30,	0X7F,	0X07,	0XF6,	0X42,	0XF5,	0XEE,	0X22,	0XB3,	0X2C,
                             0X26,	0XFD,	0X78,	0X77,	0XED,	0X44,	0X60,	0XA4,	0XEE,	0X6D,	0X23,
                             0XBC,	0XEC,	0X68,	0X02,	0X24,	0X47,	0X2B,	0X00,	0X75,	0X54,	0XCB,
                             0XC7,	0X6D,	0XC0,	0X3B,	0X1A,	0XDD,	0XB1,	0XAD,	0XF5,	0X5E,	0XF6,
                             0XBC,	0XE1,	0X9F,	0XF2,	0XFB,	0X08,	0X13,	0X3B,	0X69,	0X8D,	0XE5,
                             0X8F,	0X97,	0X1A,	0X43,	0X46,	0X6C,	0X1D,	0XEF,	0X2E,	0XFC,	0XE4,
                             0X64,	0X18,	0X1F,	0X11,	0XCB,	0X06,	0X66,	0XED,	0X90,	0X84,	0X4C,
                             0XF6,	0X26,	0X4B,	0XF5,	0X0F,	0X7D,	0XC7,	0XB7,	0X6B,	0X57,	0X4D,
                             0XCE,	0X37,	0XC5,	0XF4,	0XDB,	0X25,	0X22,	0X68,	0X69,	0X58,	0X2D,
                             0X1D,	0XCD,	0X4D,	0X93,	0XDD,	0X9D,	0X0B,	0X6F,	0X37,	0X66,	0X7A,
                             0X61,	0XFF,	0X23,	0X59,	0XC3,	0X35,	0X81,	0X0A,	0X98,	0X10,	0XA1,
                             0X8A,	0X0B,	0X7B,	0X1A,	0X6E,	0X45,	0X43,	0X0D,	0XB8,	0X15,	0XF1, 0X00};

//maska = MGF(r*h mod 4)
static int maska[] = {-1,  1, -1, 0, 0,	 0,	 1,	 1,	 1,	-1,	 0,	-1,	-1,
                -1,	-1,	-1,	-1,	 1,	-1,	 1,	 0,	 0,	 0,	 1,	 0,	 0,  1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,
                1,	 1,	-1,	-1,	-1,	 0,	 0,	 1,	-1,	 1,	-1,	 0,	 1,  1,	 0,	 0,	-1,	-1,	 0,	 1,	-1,	-1,	 1,	 0,	 0,	-1,
                1,	-1,	 0,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	 1,	-1, -1,	 0,	 0,	-1,	 1,	 0,	 1,	 1,	 0,	 1,	 1,	 1,	 0,
                -1,	-1,	-1,	 1,	 1,	 0,	 0,	 0,	 1,	 0,	 1,	 1,	 1, -1,	 0,	-1,	 1,	-1,	 0,	 0,	-1,	 1,	-1,	-1,	 1,	 0,
                -1,	 0,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 1,	-1,	-1,	-1, -1,	 0,	-1,	-1,	 0,	 0,	 0,	 0,	 1,	 1,	 1,	 0,	 0,
                -1,	 1,	 1,	 0,	 1,	 1,	 1,	 1,	 0,	 1,	-1,	 1,	 0,  0,	 1,	-1,	-1,	-1,	 1,	-1,	-1,	 1,	 1,	 0,	 1,	-1,
                0,	 0,	-1,	 0,	-1,	 1,	 0,	 1,	-1,	 0,	-1,	 1,	-1,  1,	-1,	 0,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,
                0,	-1,	-1,	 0,	-1,	 1,	 1,	 0,	-1,	 1,	-1,	 0,	 0,  1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	-1,	 0,	-1,	 0,	 0,
                -1,	-1,	 0,	 1,	 0,	 1,	-1,	-1,	 1,	 1,	-1,	-1,	 1, -1,	-1,	 0,	 1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	 1,	 1,
                0,	 1,	 1,	 0,	 1,	-1,	 1,	-1,	-1,	 0,	 1,	 1,	 0, -1,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	 1,	 1,	 0,	 1,	-1,
                1,	 0,	 0,	 0,	-1,	 1,	-1,	 1,	-1,	 0,	 0,	 0,	-1,  1,	-1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	 0,
                -1,	 1,	-1,	-1,	 1,	 0,	 0,	 0,	 1,	 0,	-1,	 1,	 1,  0,	-1,	-1,	 0,	 1,	 0,	 1,	 1,	-1,	 1,	-1,	 0,	-1,
                1,	-1,	-1,	 1,	-1,	 0,	-1,	 1,	 1,	 1,	-1,	-1,	 1,  0,	-1,	 1,	 0,	 1,	-1,	 1,	 0,	-1,	 0,	 1,	 0,	 0,
                1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 0,	-1,	 1,  1,	-1,	 0,	 1,	-1,	-1,	 0,	-1,	 0,	 1,	-1,	 1,	-1,
                0,	-1,	 1,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 1,  0,	 1,	 1,	 1,	-1,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	-1,
                -1,	 0,	-1,	-1,	 1,	-1,	 1,	-1,	-1,	-1,	-1,	 0,	 1,  1,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	 1,	 1,	 0,	-1,	 0,
                -1,	 1,	 0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	 1,	 0,  1,	 0,	 0,	 1,	 0,	-1,	-1,	-1,	 0,	-1,	 1,	 1,	 0,
                -1,	 0,	-1,	 0,	-1,	 1,	 0,	-1,	-1,	 1,	-1,	 0,	-1,  0,	 0,	-1,	 1,	-1,	 1,	 1,	 1,	 1,	-1,	-1,	 0,	-1,
                -1,	-1,	 1,	 1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 1,	 0, -1,	 1,	-1,	 0,	 1,	 1,	 0,	-1,	-1,	-1,	 1,	 1,	 1,
                0,	 0,	-1,	 1,	 1,	 1,	 1,	 0,	-1,	-1,	 0,	-1,	 0,  1,	 1,	 0,	 0,	 1,	-1,	-1,	-1,	-1,	 0,	-1,	-1,	-1,
                -1,	 1,	-1,	 0,	-1,	 1,	 1,	-1,	 0,	-1,	 0,	 1,	 0, -1,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	-1,	 1,	-1,	 1,	-1,
                -1,	 1,	 0,	 1,	 1,	-1,	 1,	-1,	 1,	 1,	 1,	 1,	-1,  1,	-1,	-1,	-1,	 1,	 1,	-1,	-1,	-1,	 1,	 1,	-1,	 0,
                -1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	-1,	 0,	-1,  1,	 1,	 1,	-1,	-1,	-1,	-1,	 1,	 1,	 0,	 1,	 1,	 1,
                -1,	 0,	-1,	 0,	-1,	 1,	 1,	 1,	-1,	 1,	-1,	-1,	 0, -1,	 0,	 0,	-1,	-1,	 0,	-1,	 1,	 1,	 0,	 1,	-1,	 0,
                1,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	-1,	-1,	 0,	 1, -1,	-1,	 1,	-1,	 0,	-1,	 0,	-1,	-1,	 0,	 0,	 0,	-1,
                -1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	-1,	-1,	 1,	 0,	 0,  0,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	-1,	-1,	-1,
                1,	 1,	-1,	-1,	 0,	 0,	 1,	 0,	-1,	-1,	 1,	 1,	-1,  1,	 0,	-1,	 1,	 0,	 0,	-1,	 1,	 0,	 1,	-1,	-1,	 1,
                1,	 1,	 0,	-1,	 1,	 1,	 0,	-1,	 1,	-1,	 1,	 1,	-1,  1,	 0,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	-1,	-1,	 0,
                1,	 0,	 0,	 1,	 1,	 0,	 1,	 1,	 1,	 0,	 0,	-1,	 1,  0,	-1,	-1,	-1,	 1,	 0,	 0,	-1,	 0,	-1,	 1,	 1,	 1,
                1,	-1,	-1,	 0,	-1,	-1,	-1,	 0,	 0,	 0,	 0,	 1,	 0,  0,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	-1,	 0,	-1,	-1,	 1,
                -1,	-1,	 0,	 1,	 1,	-1,	-1,	 0,	 0,	-1,	 1,	-1,	 1,  1,	-1,	-1,	-1,	 0,	-1,	 0,	-1,	 0,	 1,	 1,	-1,	 0,
                1,	-1,	 1,	 1,	 1,	 1,	 0,	 0,	 1,	 0,	-1,	-1,	-1, -1,	 0,	 1,	 1,	 1,	 0,	 0,	-1,	 0,	-1,	 1,	 0,	 0,
                0,	-1,	 1,	 0,	-1,	 1,	 1,	-1,	 1,	-1,	 1,	 0,	 1, -1,	 0,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 1,	-1,
                0,	 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

//e = (R + (maska + Mtrin)mod 3)) mod q
static unsigned int e[] = {0x0AD0,	0xF7E7,	0x01E0,	0x0DB0,	0x0134,	0xF513,	0xFAF9,
        0x03CE,	0x0C83,	0x0DDD,	0x0681,	0xF1AA,	0x0E8E,	0x0337, 0x03F1,	0xFE77,	0x0839,	0x074B,	0xFA99,	0x0097,	0x086E,
        0x081D,	0x0C88,	0xF2D8,	0xF83D,	0x02BD,	0xF3BF,	0x04E2,0x0370,	0xFC86,	0xF3E9,	0x00A4,	0x0D93,	0x096D,	0xF978,
        0x0302,	0x0E73,	0xFB1F,	0xFB71,	0xFC65,	0x0B7A,	0xFBE6, 0x0CD0,	0xF6C1,	0x0D26,	0xF8B8,	0x05E1,	0xFD7A,	0xF4F4,
        0x046D,	0x0B86,	0xF673,	0x0800,	0x0692,	0x060D,	0xFCDD, 0x0B3F,	0x00E6,	0xF954,	0xF9B4,	0xF6A5,	0x0178,	0xFF2B,
        0x0E17,	0x0102,	0xF1DC,	0xF202,	0xFA7B,	0xF2C9,	0xF957, 0x07AA,	0xF533,	0xF421,	0x0788,	0xF7D7,	0xFCD8,	0x0C1C,
        0xFAEB,	0x0CD2,	0x0867,	0x0A78,	0xF998,	0x0EB6,	0xFBF8, 0xF31F,	0xFE30,	0x0913,	0xFF41,	0xFA14,	0xF73C,	0x07AE,
        0xF4C4,	0xF865,	0xF3BF,	0x0315,	0xF2C7,	0x01AC,	0xF4F4, 0xF877,	0xF92F,	0x08FA,	0x082B,	0x0028,	0x05FF,	0x0565,
        0xF96F,	0x0AAD,	0x0326,	0xFA8E,	0x0D67,	0xF55C,	0x03D8, 0x0CFD,	0xF4AA,	0xF63D,	0xFC58,	0xF3D7,	0x0EB6,	0x08E6,
        0x0E07,	0x0D32,	0x0059,	0x0841,	0xF1DE,	0x085D,	0xFE3F, 0x06EB,	0x0EA8,	0x00E7,	0x0559,	0x0E68,	0xFAE6,	0x0195,
        0x046F,	0x0D94,	0xF2C3,	0xF2BF,	0xF6DD,	0xF7A5,	0xF79D, 0xF115,	0xF5F7,	0xF5C8,	0x0D29,	0x0C1E,	0x09F4,	0xF7C5,
        0x05D6,	0xFDE5,	0xF286,	0xF97C,	0x098B,	0xFAD3,	0xFBA2, 0x0107,	0x08B9,	0xF2EF,	0xFA1A,	0x0C8A,	0xFC5E,	0xF937,
        0x0030,	0xF9BD,	0xF461,	0xF535,	0xF712,	0x090E,	0x08FC, 0xF787,	0x003B,	0x0C4F,	0x0219,	0xF676,	0x01C6,	0x09BA,
        0xF4F7,	0xF1E7,	0x0E9D,	0x089B,	0x02FC,	0x01EF,	0xF39E, 0xF15C,	0xFA11,	0x061D,	0x077A,	0xF49E,	0xFB2F,	0x01F6,
        0x05F3,	0x0CDD,	0x01BE,	0xF9C0,	0x0A66,	0x0181,	0x0559, 0xF949,	0xF50B,	0xF42E,	0xFB3B,	0x0E23,	0xF88C,	0x0456,
        0x0E9F,	0x01E0,	0x06B6,	0xFCB3,	0x0691,	0xFEF1,	0x00F7, 0x0696,	0xF412,	0xFA1F,	0x041B,	0x08BE,	0x0455,	0x09FA,
        0xF74F,	0xF5FD,	0x04F8,	0x0134,	0xF2CF,	0xFC9A,	0xFBF4, 0x0159,	0xFF22,	0xF315,	0xF430,	0x0EAB,	0xF60A,	0x0D6B,
        0xF863,	0xF7E0,	0x0460,	0xF67D,	0x0B4E,	0x080A,	0x00A4, 0xF7F7,	0xF204,	0xF254,	0xF8A4,	0x0C40,	0xFA78,	0xF54E,
        0x0245,	0xFFFA,	0xFEF4,	0xFC97,	0xFABE,	0x0C9B,	0xF5B2, 0x04ED,	0xF7D3,	0xFC7A,	0x04AA,	0x00A0,	0xFD16,	0x0AE5,
        0x03EE,	0x0E56,	0x0D24,	0x0E34,	0x0EC4,	0x0431,	0xF387, 0xFEF1,	0xF2F8,	0xFCAF,	0xF18E,	0x049B,	0x0782,	0xF7B4,
        0xFE92,	0xF44C,	0x054F,	0xF6DF,	0xF6B6,	0xFBA6,	0x0E3D, 0xFDDC,	0x00AE,	0x02B4,	0xF4FE,	0xFC64,	0xF70D,	0xFD54,
        0xF2A6,	0xFB2C,	0xFE4D,	0x0435,	0x0E08,	0xFE3E,	0x0DAD, 0xFC9D,	0xF843,	0xF3F5,	0x004B,	0x0C51,	0xF7C3,	0xFE8D,
        0xFD52,	0x0748,	0xF47F,	0xF910,	0x05D2,	0xF9C1,	0x01DC, 0xFAA0,	0x088A,	0x09C9,	0xFE56,	0x0DCC,	0x053E,	0xFB13,
        0xF7A4,	0x0A37,	0xFF7A,	0x0323,	0xFF65,	0x0624,	0x0891, 0x036A,	0x0567,	0xFD01,	0x037E,	0x017E,	0xF9C4,	0x0296,
        0x0DBC,	0xF122,	0x0EB5,	0x0E8C,	0x04F0,	0xF594,	0xF334, 0xFFE2,	0x061C,	0xF23E,	0x01A4,	0xF5C0,	0x081E,	0x0C23,
        0x0A5A,	0xF96A,	0x0067,	0x0B77,	0xFED7,	0xF932,	0x060D, 0xFEA8,	0x0B16,	0xFF1F,	0xF9AF,	0xF845,	0x0CA1,	0x0CCC,
        0x05EE,	0xFFA4,	0xF450,	0x00E8,	0xF403,	0xF306,	0xFCB4, 0x0B84,	0xFF93,	0xF144,	0xF516,	0xF536,	0x07D3,	0x0A48,
        0x0B81,	0x08C5,	0xFCA5,	0xF29C,	0xF6C3,	0xF31B,	0xF178, 0xFDD5,	0x0800,	0xFB98,	0xFA4B,	0x0558,	0x0BF5,	0x019C,
        0x03E3,	0x043B,	0xF64A,	0x0AEF,	0x0B70,	0x0E35,	0x0490, 0xFFD0,	0xF433,	0x0C7A,	0x0E30,	0x0275,	0xF70E,	0x00EA,
        0xF67F,	0x0AFF,	0x0CF7,	0xFCE4,	0xFB85,	0xF862,	0x06D3, 0x089A,	0xF6E9,	0xF31E,	0xFC92,	0x0971,	0x089C,	0xF7CA,
        0xFAD5,	0x097B,	0x037A,	0x09C2,	0x0940,	0x0011,	0x068D, 0xF8B6,	0xF9A9,	0xF29D,	0x04FD,	0xFB57,	0xFA09,	0x05D5,
        0xFA60,	0x0CD3,	0xF5D9,	0xF3EE,	0xF95E,	0x06E0,	0xFE12, 0x0158,	0x0845,	0xFBC3,	0xF3BA,	0xF495,	0x0388,	0x0903,
        0xF72A,	0x0BBE,	0xFED3,	0x0247,	0xFECB,	0xF4BE,	0x0457, 0x0EB0,	0x097F,	0xF826,	0x0018,	0x07FC,	0x0A9D,	0xFC71,
        0x010E,	0xFE11,	0x04CA,	0xF561,	0x0D64,	0xFDCA,	0xF959, 0x02A0,	0x0DBF,	0x0381,	0xF947,	0xF5EA,	0x03C4,	0x0791,
        0xFEB5,	0x0384,	0x018F,	0xF909,	0xF57B,	0xFD7C,	0xF275, 0x04C6,	0xF4C1,	0x0B4D,	0x05A5,	0xF6F2,	0x01E5,	0x099A,
        0x0CB0,	0x0D10,	0xFBBB,	0x01CA,	0xF43C,	0xF564,	0xF78E, 0xFAA8,	0x06CA,	0x02E4,	0xF2E5,	0x0C3D,	0xFC83,	0xFAD3,
        0x029E,	0x0291,	0x0076,	0x0DB0,	0x0870,	0x0E3A,	0xF9B3, 0xF3B4,	0x0D2A,	0x04C6,	0xF8E8,	0xFB4E,	0xF920,	0x0321,
        0x06A5,	0x0313,	0xF132,	0xF278,	0xFAB1,	0x02AC,	0xFE37, 0x0909,	0xF110,	0xFDCE,	0xF355,	0x0D23,	0xFA2B,	0xF4AC,
        0x027C,	0x047D,	0x069B,	0x0DC9,	0xF19E,	0x0A53,	0x00CD, 0xF11B,	0x046A,	0x0E77,	0x0BFA,	0xF3AF,	0x0934,	0xFE4A,
        0xFC1F,	0xF70B,	0x06DF,	0xF69F,	0x0CE2,	0x012C,	0xFB46, 0xFE97,	0x0346,	0x0CFC,	0xF7D3,	0x09F5,	0x0561,	0xF39D,
        0x0DE0,	0xFFC7,	0x01BE,	0x0D10,	0xFD24,	0x0472,	0x094A, 0x082E,	0xF759,	0x09DA,	0xF93C,	0x0E55,	0x0709,	0x0DDF,
        0x0E81,	0x043B,	0xF97F,	0xF784,	0x0872,	0xF591,	0xFA1F, 0xFD34,	0x08B2,	0xF6FF,	0x0D69,	0x0D12,	0xF1A3,	0x0639,
        0x023E,	0xF27E,	0x0969,	0xF3DD,	0x031B,	0xF495,	0x0B80, 0xF60A,	0x0359,	0xFE4C,	0x0367,	0xF86A,	0x0311,	0x07F7,
        0x0467,	0x01F9,	0x0469,	0xFF2B,	0xFD2A,	0x08B0,	0x029E, 0xF863,	0xF21C,	0xF888,	0xF291,	0x06C2,	0xF447,	0x0156,
        0xFEF4,	0xF904,	0xF608,	0xF757,	0x08AF,	0xF494,	0x08F3, 0x0D58,	0x0AE3,	0x0D4E,	0x0520,	0xFD23,	0x0D21,	0x0C6F,
        0x0521,	0xF9FC,	0x0531,	0xF65F,	0x0654,	0x03C3,	0xF6AD, 0x0A79,	0xFBAE,	0xFBD2,	0x0AD5,	0x06BD,	0xF49C,	0x0975,
        0xF69C,	0x0E9E,	0xFD19,	0xFA51,	0x0DE1,	0x047D,	0x0715, 0x07E2,	0xFBCB,	0xFE70,	0x0EA8,	0xFD2D,	0xF3A2,	0xF143,
        0xFCA8,	0x0A89,	0xFBB5,	0xF23A,	0x0C89,	0xF47E,	0x0DCB, 0x0E83,	0xF6A8,	0xFE38,	0x05AC,	0x0E76,	0xF999,	0x0593,
        0x0BA2,	0xFBF9,	0x00C1,	0x00A8,	0x0D10,	0x045F,	0xFECE, 0xF9D3,	0xF984,	0x0102,	0xFBD6,	0xF9BC,	0x0288,	0x0CBE,
        0x074C,	0x0AF8,	0x0277,	0x0683,	0xF331,	0xF77A,	0xFDCF, 0xFAE9,	0x011A,	0x08A6,	0xF720,	0x0938,	0x0AC4,	0xFA7C,
        0x0EB2,	0x0861,	0xF22A,	0x00E1,	0xFD6E,	0x0101,	0x0747, 0x0A55,	0x02DF,	0xFC4F,	0xFA61,	0x0553,	0x0E4D,	0x0D34,
        0x0659,	0x028D,	0xFB54,	0xF7A8,	0xF47E,	0x030F,	0x03C0, 0x08E6,	0x00B8,	0xF4FF,	0x0698,	0xF614,	0xFCE3,	0xF33E,
        0x0769,	0xF1D7,	0xF640,	0xFB00,	0xF621,	0xFFC5,	0xF63D, 0xF99F,	0xF77D,	0x0374,	0xF9CD,	0x0925,	0x053F,	0xF90B,
        0x07E9,	0x06E2,	0xF1FD,	0xFBCF,	0xFF01,	0xF941,	0xF695, 0xF35D,	0xFD1D,	0xF9C4,	0xF6C5,	0xF3F7,	0x08F4,	0xF2B4,
        0x0CC0,	0xFF56,	0x0E72,	0x0A6B,	0x0B63,	0xFE87,	0xF240, 0xFFD8,	0x0948,	0x0940,	0x0E95,	0xF482,	0x0078,	0xFAEB,
        0xFD76,	0x090C,	0x0E76,	0x0A90,	0xF1B1,	0x07FA,	0xF285, 0xFB93,	0x01BC,	0x063D,	0x04E4,	0xFCB6,	0x0CEB,	0x0715,
        0xF735,	0x0BE8,	0xFDF6,	0x0570,	0x0B13,	0x072A,	0xF624, 0x05B8,	0xF4DD,	0xFCB8,	0x0795,	0xFCE5,	0x08DA,	0xF19D,
        0x0189,	0x0B18,	0xF435,	0xF189,	0xF8E5,	0xF3DC,	0xF40E, 0xF85A,	0x0372,	0x0879,	0xF307,	0xF973,	0x0A1F,	0xF3D9,
        0xFCDE,	0xFAA7,	0xF728,	0xF653,	0xF5AD,	0x02AC,	0x0CF4, 0x0D2C,	0xF4CB,	0xF9E6,	0x0CBA,	0xF3F9,	0xFFE0,	0xF3FD,
        0x08EE,	0xF673,	0x03C7,	0x0EBF,	0x064F,	0xF89E,	0xF111, 0xF225,	0xFDD5,	0xFE0C,	0xF305,	0xFBFD,	0x04D3,	0x0732,
        0x04D7,	0xF8F7,	0xFED6,	0x07F2,	0xF7A5,	0xF636,	0xFFEA, 0xF344,	0xFA2B,	0xFA4F,	0x0936,	0xFF55,	0xF856,	0x0891,
        0x0C8E,	0xFC69,	0xF251,	0xF319,	0x0EBD,	0xF32D,	0xF78E, 0x03CA,	0x02AD,	0x0465,	0xF39B,	0x073E,	0xF361,	0xF9B6,
        0x0044,	0x0E21,	0x0ED7,	0x00FB,	0x0701,	0xFE7E,	0xFFE8, 0x072B,	0x078C,	0x0651,	0x0EED,	0xF14B,	0xF260,	0x0CC9,
                           0xF7A5,	0x0CA3,	0x08C3,	0x0C00,	0x0BE5,	0x03A0};

static unsigned int e_[] = {0X56,	0X85,	0X78,	0X03,	0XC0,	0XDB,	0X00,	0X9A,	0X4C,	0X33,	0X1E,
                            0X43,	0XCE,	0X64,	0X1B,	0X77,	0X4D,	0X02,	0XFA,	0X37,	0X47,	0X0C,
                            0XDC,	0X7E,	0X3C,	0X70,	0X41,	0XC9,	0XD2,	0XF1,	0X24,	0X09,	0X74,
                            0X37,	0X20,	0X75,	0X91,	0X10,	0XD1,	0XB1,	0XB0,	0XAF,	0X63,	0X70,
                            0X4E,	0X21,	0XB8,	0X69,	0XFE,	0X3C,	0X40,	0XA4,	0X6C,	0X9A,	0X5B,
                            0X6E,	0XE2,	0X30,	0X27,	0X39,	0XE4,	0X63,	0X2D,	0X5A,	0X5E,	0X5B,
                            0XD6,	0X77,	0XD9,	0XA1,	0X4B,	0XA6,	0X93,	0X5A,	0XC4,	0XBC,	0X3B,
                            0X73,	0X97,	0X69,	0X1B,	0X57,	0X0D,	0X46,	0XC4,	0X00,	0X1A,	0X48,
                            0XC1,	0XBA,	0XD6,	0X59,	0XF8,	0X39,	0XAE,	0X9B,	0X7A,	0XDA,	0X4F,
                            0X05,	0XE3,	0XA4,	0X8E,	0X17,	0X08,	0X13,	0XF5,	0X5F,	0XF7,	0X87,
                            0X48,	0X61,	0X5D,	0X40,	0XF5,	0X53,	0X2C,	0X90,	0XD1,	0XE2,	0X2B,
                            0XA1,	0XAD,	0X16,	0X0E,	0X63,	0X91,	0X9A,	0X48,	0X67,	0X53,	0XC5,
                            0XE4,	0X5D,	0X6D,	0X9F,	0X18,	0X8C,	0X70,	0XA5,	0X22,	0X7D,	0X3A,
                            0XC0,	0X6D,	0X4D,	0X4F,	0X5D,	0X2B,	0XDB,	0X2F,	0X46,	0XE0,	0X62,
                            0XB0,	0XC0,	0X0D,	0X64,	0XBB,	0X6C,	0XE1,	0X72,	0X84,	0X7D,	0X20,
                            0XAC,	0X05,	0X05,	0XFF,	0X2B,	0X2D,	0XDA,	0X15,	0X5A,	0X32,	0X6C,
                            0X43,	0XB5,	0X9E,	0X6A,	0XA3,	0XD8,	0X67,	0XEC,	0XA8,	0XE8,	0X6D,
                            0XA5,	0X18,	0XE8,	0X3A,	0XD9,	0X1C,	0XCE,	0X07,	0X69,	0X90,	0X16,
                            0X50,	0X82,	0XFD,	0X74,	0X2E,	0XF0,	0XE0,	0XDD,	0X6E,	0XA8,	0X07,
                            0X39,	0X56,	0X5C,	0XD1,	0X8D,	0XF0,	0XCA,	0X91,	0XBD,	0XB2,	0X90,
                            0XBC,	0X85,	0XC5,	0X35,	0XAB,	0X3D,	0X59,	0X67,	0X87,	0X4F,	0XC2,
                            0X78,	0X2D,	0X29,	0X60,	0XF2,	0X7D,	0X2B,	0X7C,	0X5D,	0X6D,	0XEF,
                            0X41,	0XFE,	0XEE,	0XA9,	0X8B,	0XC6,	0X66,	0X66,	0XC2,	0X0E,	0X8B,
                            0X98,	0X74,	0X60,	0X4D,	0X91,	0X5A,	0X57,	0XB9,	0X80,	0X0C,	0X2F,
                            0X6D,	0X25,	0XA9,	0X97,	0X54,	0X2D,	0X21,	0XC8,	0XFC,	0XAC,	0X00,
                            0X0E,	0XD8,	0X9E,	0X21,	0X9A,	0X37,	0X87,	0X19,	0X37,	0X52,	0XF0,
                            0X7F,	0X03,	0XA7,	0X51,	0X36,	0X2F,	0XC0,	0XF7,	0XC6,	0X5D,	0XEA,
                            0XB8,	0X0A,	0X30,	0XE9,	0XDE,	0XA5,	0X2F,	0X92,	0X80,	0XFB,	0X17,
                            0XCD,	0X9B,	0XA1,	0XBE,	0XBD,	0XCA,	0X99,	0X83,	0X02,	0X55,	0X9B,
                            0XA1,	0X4C,	0X12,	0X44,	0XF9,	0X34,	0X71,	0X1D,	0XA1,	0X48,	0XAC,
                            0XE9,	0XF0,	0XF0,	0X1A,	0XDB,	0X55,	0X86,	0X91,	0XE7,	0X50,	0X3D,
                            0XCD,	0X2D,	0X20,	0XBC,	0X0C,	0X10,	0X6D,	0X17,	0XC4,	0X55,	0X4F,
                            0XD5,	0X52,	0X27,	0XEC,	0X4F,	0X80,	0X9A,	0X43,	0X23,	0X52,	0X79,
                            0XED,	0X0A,	0XCF,	0X46,	0XE2,	0X1D,	0X22,	0X97,	0X55,	0XD0,	0X0D,
                            0XAD,	0X76,	0X5C,	0XAE,	0XC9,	0X18,	0X28,	0XEC,	0XB4,	0XE4,	0X05,
                            0X02,	0X92,	0XBE,	0X0F,	0XFD,	0X82,	0X6D,	0XA7,	0X58,	0X81,	0X87,
                            0X19,	0XA3,	0X89,	0X17,	0XBE,	0X7C,	0XED,	0XD4,	0X86,	0X2D,	0XD9,
                            0X37,	0X3A,	0XB2,	0X76,	0XD7,	0X33,	0X4E,	0X64,	0XAA,	0X05,	0X06,
                            0XC3,	0XD5,	0XCA,	0X3E,	0XE7,	0X2B,	0X34,	0X91,	0XC6,	0X8E,	0XC4,
                            0X21,	0X8C,	0X60,	0X39,	0XD5,	0X0F,	0X1D,	0X54,	0X3E,	0X1C,	0X93,
                            0X67,	0X82,	0XAD,	0X6F,	0X22,	0XE4,	0X8A,	0X54,	0XFA,	0X6C,	0X52,
                            0XBF,	0X33,	0XEE,	0X3D,	0XDE,	0XA8,	0X2B,	0X85,	0X69,	0X2F,	0X7D,
                            0X2E,	0XD4,	0X1B,	0X69,	0XB0,	0X9F,	0XC9,	0X2F,	0X11,	0X88,	0X6A,
                            0XE0,	0X8E,	0X1B,	0XB6,	0XB7,	0X52,	0XD6,	0X3C,	0X8F,	0X70,	0X12,
                            0XD8,	0XA3,	0X5B,	0XCE,	0X43,	0X6D,	0X2C,	0XE9,	0X12,	0X78,	0XB8,
                            0X49,	0X74,	0XAF,	0X74,	0X1D,	0XCC,	0X4C,	0XA2,	0X29,	0X39,	0X3C,
                            0X4F,	0X6E,	0X61,	0X4F,	0XB2,	0X19,	0X59,	0XD5,	0X1B,	0XF5,	0XCC,
                            0X64,	0X7D,	0X5E,	0X31,	0X22,	0X24,	0X46,	0XD4,	0X56,	0X7D,	0X7D,
                            0X0D,	0XF8,	0X2F,	0XD7,	0XBD,	0X14,	0XB3,	0X6F,	0X1E,	0X36,	0XEB,
                            0X57,	0X46,	0X13,	0XC2,	0X71,	0XB1,	0X2D,	0XEE,	0XD9,	0X87,	0X20,
                            0X6E,	0X1A,	0X49,	0XDC,	0XA0,	0X79,	0X84,	0X6A,	0X5A,	0XBB,	0X18,
                            0X19,	0XD6,	0XEF,	0XCD,	0X0B,	0X95,	0X98,	0X37,	0X94,	0X2B,	0X16,
                            0XE8,	0XC5,	0XEA,	0X2C,	0X7C,	0XCA,	0X16,	0X66,	0X17,	0XBB,	0XB3,
                            0XB2,	0X49,	0X07,	0X44,	0X7F,	0X21,	0XFF,	0XAA,	0XD5,	0XC2,	0X76,
                            0X31,	0XE7,	0XB3,	0X0F,	0X99,	0X79,	0XF4,	0XD4,	0X90,	0XB8,	0X14,
                            0X62,	0XEA,	0X7A,	0X12,	0XB4,	0XBC,	0X88,	0XA3,	0XDC,	0X77,	0X9C,
                            0X80,	0X0C,	0XC8,	0XE1,	0X10,	0XAB,	0X0B,	0XF5,	0X0C,	0XE0,	0XF8,
                            0XC8,	0X77,	0X44,	0X35,	0X77,	0XAD,	0XC1,	0XC6,	0XA4,	0X90,	0XEE,
                            0X4C,	0X8B,	0X18,	0XF4,	0XE3,	0X01,	0X3A,	0XD4,	0X1C,	0X1D,	0X54,
                            0X78,	0X57,	0XFB,	0X3D,	0XF5,	0XBB,	0X97,	0XEB,	0X2D,	0X9B,	0X4D,
                            0X13,	0X54,	0XE2,	0X88,	0XBE,	0XA2,	0XD2,	0XE2,	0X89,	0XCA,	0XE1,
                            0XE3,	0X39,	0X2F,	0X63,	0X7A,	0X4E,	0X12,	0X50,	0X00,	0X22,	0X68,
                            0XDB,	0X57,	0XDE,	0X8A,	0X12,	0XC4,	0XFD,	0XCA,	0X86,	0X00,	0X8B,
                            0XAB,	0X85,	0X96,	0X69,	0XCF,	0X4A,	0X3C,	0XF7,	0X57,	0X37,	0X07,
                            0X02,	0XC2,	0XB0,	0X84,	0X5C,	0XDE,	0X46,	0XCE,	0X51,	0XC3,	0X88,
                            0X48,	0X1D,	0X48,	0XD7,	0X7D,	0XCC,	0XC1,	0X23,	0XF3,	0X12,	0X56,
                            0XE4,	0X57,	0X75,	0X82,	0X5F,	0XEC,	0X3E,	0X01,	0X83,	0XFE,	0X2A,
                            0X77,	0X4D,	0X41,	0X0E,	0XE0,	0X51,	0X32,	0XA6,	0XB4,	0XD6,	0X4D,
                            0XE1,	0XDD,	0X48,	0X54,	0X0D,	0XBF,	0X1C,	0X0D,	0XD0,	0X27,	0XC6,
                            0X3C,	0X43,	0XC8,	0XF2,	0XB8,	0X70,	0X81,	0X8F,	0XB8,	0X14,	0XDD,
                            0X36,	0XEB,	0X06,	0XE2,	0X63,	0X4A,	0XE9,	0X69,	0XA5,	0XA5,	0XA7,
                            0X58,	0X79,	0X53,	0X34,	0XCB,	0X06,	0X88,	0X66,	0XD0,	0X39,	0X52,
                            0X35,	0X9A,	0XED,	0X61,	0XF1,	0X42,	0X6C,	0XA1,	0X72,	0X43,	0X79,
                            0X87,	0XBA,	0X7C,	0XC6,	0X60,	0XA7,	0X85,	0X22,	0X07,	0X66,	0XD8,
                            0X21,	0XC1,	0XC7,	0X57,	0XAC,	0X8D,	0X6B,	0X4A,	0X89,	0X8D,	0X6E,
                            0X1C,	0XA3,	0XDC,	0X64,	0X64,	0X26,	0XA5,	0X18,	0X9B,	0XCA,	0XE0,
                            0XE3,	0X8A,	0XA1,	0X56,	0X70,	0XC1,	0X21,	0X2F,	0X09,	0XDE,	0X3C,
                            0X53,	0X9A,	0X47,	0X82,	0X49,	0X52,	0X89,	0XF0,	0X8F,	0XA6,	0X9B,
                            0X6E,	0X4B,	0XE5,	0XD4,	0XA6,	0X0C,	0XD7,	0X8A,	0X11,	0XA9,	0XCE,
                            0XEB,	0XFA,	0X8D,	0X42,	0X4D,	0X38,	0X87,	0XA1,	0X8A,	0X82,	0X1B,
                            0X7E,	0X93,	0X0C,	0XE2,	0X09,	0X66,	0X4F,	0XF9,	0X20,	0X34,	0X66,
                            0X7E,	0X57,	0X31,	0X3E,	0XA5,	0X61,	0X8C,	0XB3,	0X78,	0X3B,	0X80,
                            0X1B,	0XE6,	0X88,	0X6C,	0X74,	0X8E,	0X49,	0X4A,	0X41,	0X75,	0X54,
                            0X93,	0XB5,	0X73,	0X57,	0X2A,	0X9C,	0X25,	0XBB,	0XEE,	0X81,	0X21,
                            0XDD,	0XDE,	0X2A,	0XFA,	0X87,	0X29,	0XC5,	0X60,	0X63,	0X65,	0XA8,
                            0XB2,	0XA7,	0XC3,	0X5A,	0X5A,	0X24,	0XF9,	0XC3,	0X1C,	0X88,	0XFA,
                            0X0E,	0XE9,	0X69,	0X8E,	0XB0,	0XC6,	0XE5,	0X1C,	0XB8,	0X0A,	0X01,
                            0X8D,	0X67,	0X88,	0XA3,	0X67,	0XB3,	0X18,	0XC4,	0X4F,	0XEE,	0X46,
                            0X70,	0XFC,	0X91,	0XA7,	0XA4,	0X9B,	0X23,	0X45,	0X80,	0XA7,	0XAC,
                            0XB9,	0X01,	0X5B,	0X40,	0XC2,	0X28,	0XD8,	0X52,	0X40,	0X0A,	0XB7,
                            0X3B,	0X6D,	0XFB,	0X40,	0X1A,	0XA8,	0X22,	0XBE,	0X51,	0XA8,	0XF3,
                            0X6A,	0XC2,	0XB8,	0XDA,	0X9C,	0X52,	0X0D,	0X8E,	0X34,	0X85,	0X8D,
                            0XE5,	0X21,	0XBF,	0XA9,	0X4C,	0X68,	0XB0,	0X65,	0X41,	0XE1,	0XD2,
                            0X99,	0X4F,	0X39,	0XA7,	0XCE,	0X5A,	0XB5,	0X4D,	0X7B,	0X29,	0X54,
                            0XBA,	0XD2,	0X55,	0XD3,	0XDB,	0X12,	0XC2,	0X53,	0X78,	0X48,	0XFA,
                            0X71,	0X53,	0XF1,	0X67,	0X13,	0X8D,	0X2E,	0XA8,	0XD9,	0X34,	0X66,
                            0XDE,	0X79,	0XAA,	0X15,	0X44,	0XE6,	0XBA,	0X06,	0X6C,	0X89,	0X93,
                            0XBB,	0X72,	0XDD,	0X07,	0X4A,	0X1E,	0X18,	0X96,	0XB1,	0XCE,	0XD7,
                            0X92,	0X2C,	0X9A,	0XE8,	0XB3,	0XE4,	0X0C,	0X10,	0X54,	0X34,	0X40,
                            0X8B,	0XFC,	0XC7,	0XBE,	0X65,	0XDF,	0X42,	0X05,	0X9C,	0XFB,	0XDA,
                            0X8A,	0X21,	0X97,	0XC7,	0X4C,	0X57,	0XC0,	0X9D,	0XCD,	0X07,	0X12,
                            0XAA,	0XB9,	0XEF,	0X23,	0X1C,	0X41,	0X1A,	0X45,	0X35,	0X46,	0X52,
                            0X70,	0XAC,	0X4C,	0X3A,	0XBA,	0XC9,	0X0C,	0X30,	0X23,	0X07,	0X0E,
                            0XD9,	0XC2,	0X02,	0X74,	0X75,	0X2A,	0X8B,	0X7F,	0X49,	0X18,	0X5A,
                            0X2A,	0X9B,	0X93,	0X5A,	0X68,	0X65,	0X91,	0X46,	0XE5,	0X36,	0XB4,
                            0X32,	0X77,	0X18,	0X78,	0XF0,	0X11,	0XCC,	0X0B,	0X89,	0X7C,	0X1A,
                            0X62,	0X81,	0XBA,	0XDC,	0X89,	0XB9,	0XDA,	0X5F,	0XA1,	0X43,	0X9C,
                            0X7C,	0XD0,	0X6B,	0XB7,	0XD4,	0X36,	0XBC,	0XC5,	0X5D,	0X86,	0XE9,
                            0X7C,	0X64,	0X92,	0X94,	0XFE,	0XE0,	0X87,	0XE9,	0X37,	0X13,	0XFD,
                            0XB3,	0X91,	0XCF,	0XAB,	0X9D,	0X52,	0X3A,	0X2A,	0XDB,	0X16,	0XBD,
                            0XED,	0X2F,	0XA3,	0XE0,	0X8F,	0X48,	0X56,	0XB3,	0X03,	0XA9,	0XEE,
                            0X72,	0X53,	0X5A,	0XD8,	0XF9,	0X01,	0X03,	0X9E,	0XE8,	0XA5,	0X21,
                            0X28,	0X0E,	0X95,	0X93,	0XD8,	0X1E,	0X31,	0XC9,	0XB6,	0XF4,	0X86,
                            0X39,	0XD9,	0X52,	0X0F,	0XAA,	0X3F,	0XD4,	0X1F,	0XB3,	0X18,	0X1B,
                            0XC3,	0X1E,	0X93,	0X93,	0X55,	0XEC,	0XEB,	0X38,	0XAD,	0X4B,	0X97,
                            0XD1,	0XBE,	0XF2,	0XB8,	0X2C,	0X4C,	0XE5,	0X54,	0X1D,	0X2D,	0XC4,
                            0XB5,	0XB5,	0X62,	0X79,	0X5D,	0X6F,	0X23,	0X69,	0XF2,	0XC1,	0X89,
                            0X58,	0XC4,	0X8B,	0X9F,	0X05,	0X6D,	0XE8,	0XEA,	0XC8,	0X1E,	0XCA,
                            0X63,	0X72,	0X43,	0XCC,	0X40,	0X2E,	0XD8,	0XA1,	0XF8,	0XE9,	0X6B,
                            0X5F,	0X14,	0X15,	0X21,	0XA2,	0X64,	0XE9,	0X85,	0X58,	0XCF,	0X46,
                            0X96,	0X4B,	0X12,	0XFB,	0XEC,	0XBA,	0X8F,	0X97,	0X76,	0X63,	0XEC,
                            0X8E,	0XEA,	0X36,	0X0F,	0X1D,	0XD7,	0XE6,	0X4F,	0XB4,	0XBB,	0XC2,
                            0XA0,	0X3D,	0XBC,	0XEE,	0X02,	0XC3,	0XFB,	0X3E,	0XC4,	0XD3,	0X39,
                            0X91,	0X35,	0XED,	0XE1,	0XCC,	0XF3,	0XF9,	0X56,	0X7A,	0X85,	0XFD,
                            0XE3,	0X89,	0XEE,	0X09,	0X30,	0X90,	0X93,	0X6E,	0XA7,	0X59,	0X3D,
                            0X12,	0X2C,	0X8E,	0XD3,	0X14,	0X12,	0XA2,	0X24,	0XEB,	0XD8,	0X93,
                            0X56,	0X1C,	0X79,	0X42,	0XAD,	0X23,	0X2C,	0X65,	0X0E,	0X7D,	0X15,
                            0XAB,	0XD7,	0X81,	0X11,	0XC4,	0X2E,	0XD7,	0X07,	0XD9,	0XC0,	0X78,
                            0XEF,	0XDE,	0X13,	0X95,	0X9E,	0X30,	0XCA,	0X2E,	0XED,	0X7A,	0X24,
                            0X16,	0X59,	0X93,	0X59,	0XE6,	0X51,	0XA3,	0X0D,	0X80,	0X0B,	0XE5,
                            0X1D,	0X00};

#endif //SKELYA_KEM_ENCRYPT_CONST_H
