//
// Created by Maria_Dron on 3/18/2019.
//

#ifndef SKELYA_KEM_ENCRYPT_CONST_H
#define SKELYA_KEM_ENCRYPT_CONST_H

typedef unsigned char byte;

//input
static byte n = 881;
static byte t = 159;
static byte q = 7673;
static byte EncMsgLenBytes = 1432;
static byte maxMsgLenBytes = 132;
static byte db = 256;
static byte bufferLenBytes = 165;
static byte octL = 1;
static byte OID[3] = {0x00, 0x00, 0x01};

//output
//a = f*e mod q
static unsigned int a[] = {0xFFF0,	0xFFD7,	0x005F,	0x0075,	0xFF94,	0xFFA3,	0x0031,
        0x0058,	0xFFE3,	0xFF96,	0x000A,	0x002A,	0xFFBD,	0xFFAE, 0xFFED,	0xFFFE,	0x0017,	0x0031,	0xFFF6,	0xFF86,	0xFF6C,
        0xFFF4,	0x0006,	0xFFFB,	0xFFBE,	0xFFDE,	0x0043,	0x0046, 0x001F,	0x0003,	0xFFCB,	0xFFF0,	0x0020,	0x006C,	0x002D,
        0xFF48,	0xFF7D,	0x0028,	0xFFC8,	0xFF92,	0x0008,	0x0062, 0x006C,	0x000C,	0xFFCD,	0xFFA1,	0xFFCB,	0xFFEA,	0x0025,
        0x002C,	0xFF8E,	0xFFA9,	0x0013,	0xFFF9,	0x0030,	0x005F, 0x0051,	0x0020,	0x001F,	0x0062,	0x008F,	0x0023,	0x0043,
        0x0072,	0x006B,	0xFFC8,	0xFF7F,	0xFF52,	0xFFC8,	0xFFFA, 0xFFE8,	0x0017,	0xFFFB,	0x003F,	0x0081,	0x000D,	0xFFF5,
        0xFFFA,	0x0055,	0xFFF7,	0xFF64,	0xFFC6,	0x008C,	0x00BA, 0x0057,	0x0055,	0xFFF4,	0x0008,	0x000A,	0xFF59,	0xFF70,
        0xFFF0,	0xFFB1,	0xFFAD,	0x002B,	0x0077,	0x006C,	0x0048, 0xFFF5,	0x0020,	0xFFAA,	0xFFC3,	0x0079,	0x002F,	0x0053,
        0x0004,	0x0006,	0xFFF6,	0x0014,	0x006E,	0x003D,	0x0048, 0x003A,	0x0053,	0xFFB8,	0xFF91,	0x0075,	0x002B,	0x005D,
        0xFFED,	0xFFFF,	0x0058,	0xFFA1,	0xFF51,	0xFF23,	0xFF63, 0xFFDC,	0x0036,	0x0032,	0x003B,	0x005E,	0xFFF7,	0xFFF6,
        0x0002,	0xFFAC,	0xFF83,	0x0019,	0x009A,	0x009B,	0x0038, 0xFFB1,	0x0024,	0x007E,	0x0034,	0xFFEF,	0xFF8F,	0xFF1E,
        0xFEE7,	0xFF2E,	0x0043,	0x003D,	0xFFC8,	0x0033,	0x004D, 0xFF5C,	0xFF3D,	0xFF5F,	0xFF7A,	0xFFF7,	0xFFF2,	0xFF7E,
        0xFF6B,	0xFFA4,	0x001B,	0xFFF6,	0xFFD5,	0xFF3D,	0xFFDE, 0x0070,	0x004C,	0xFF90,	0xFF57,	0xFFD0,	0x004A,	0xFFC3,
        0xFFC7,	0x0001,	0x0086,	0x00A6,	0xFFDA,	0xFFCB,	0x0014, 0xFFD1,	0xFFA3,	0xFF91,	0x0009,	0x001C,	0x0047,	0xFF92,
        0xFF9F,	0xFFFC,	0xFFFD,	0xFFC9,	0xFF79,	0xFF82,	0xFFEA, 0x007C,	0x002C,	0xFFBE,	0x000F,	0x000B,	0x0020,	0x0006,
        0x0020,	0xFFEA,	0xFFD5,	0xFFB8,	0xFF7D,	0x0031,	0xFFBC, 0xFFAC,	0xFFE3,	0xFFF8,	0x0036,	0x003A,	0xFFCB,	0xFFCD,
        0xFFE1,	0xFF82,	0x0040,	0x0031,	0xFF8D,	0xFFE5,	0xFFF8, 0x0028,	0x00BD,	0x005D,	0x005A,	0x001D,	0x0000,	0xFFF5,
        0x004B,	0x001C,	0x006E,	0x0032,	0xFFA5,	0xFFB6,	0x0004, 0x0042,	0xFF93,	0xFEE9,	0xFFDA,	0x00A8,	0x007D,	0xFFC4,
        0xFFD4,	0x009D,	0x0071,	0xFFA1,	0xFF4A,	0xFFC8,	0xFFCF, 0x0018,	0x004D,	0x0002,	0xFFE3,	0xFFD0,	0xFFF6,	0x0055,
        0x0015,	0x0016,	0x006B,	0x007E,	0xFFAA,	0xFF5E,	0xFF47, 0xFFAD,	0xFF99,	0xFFC6,	0xFF93,	0xFFB3,	0x0048,	0x0035,
        0x0005,	0x004E,	0xFFEF,	0x000D,	0x0036,	0x005E,	0xFFE3, 0xFFED,	0xFF5A,	0xFFAA,	0xFFF2,	0x0025,	0x002E,	0xFFF8,
        0x0008,	0x0087,	0x000D,	0xFFD1,	0x002D,	0x0025,	0x000F, 0xFFFD,	0x006D,	0xFFED,	0xFF64,	0x0030,	0x006E,	0x001D,
        0xFFB6,	0xFF85,	0xFFEF,	0x000F,	0x0004,	0x0070,	0x003A, 0x001B,	0x004A,	0xFFBF,	0xFFFA,	0x0008,	0x001D,	0x0087,
        0x0055,	0x0047,	0x009E,	0x001E,	0x0004,	0xFFD5,	0xFFC3, 0x000F,	0xFFD3,	0xFF80,	0x0040,	0x0057,	0x0008,	0x001C,
        0x0056,	0x0060,	0x003B,	0x003F,	0x002B,	0xFF9E,	0xFFDF, 0xFFFF,	0xFFDE,	0xFFEC,	0xFFC4,	0xFF8D,	0xFF71,	0x002C,
        0x003E,	0xFFE6,	0x003D,	0xFFBB,	0xFFB3,	0xFFF7,	0xFF9D, 0xFF89,	0xFFF9,	0xFFC1,	0x001C,	0x0007,	0xFFD7,	0x000C,
        0x000B,	0xFFB8,	0x0006,	0x0029,	0x0066,	0x0053,	0xFFFE, 0xFFB2,	0xFFDE,	0xFF90,	0xFF96,	0xFFC9,	0xFFBE,	0xFF96,
        0x0017,	0x007B,	0xFFFB,	0xFF5B,	0x0031,	0xFFBE,	0xFFB0, 0x0018,	0x006B,	0xFFEF,	0xFFC2,	0xFFB9,	0xFFE1,	0x0033,
        0x00AF,	0x006B,	0x0039,	0x0031,	0x002E,	0xFFFE,	0x0046, 0x0084,	0x0037,	0xFFEA,	0xFFCA,	0xFF59,	0xFF3D,	0x0013,
        0xFFE6,	0x0030,	0x0021,	0x0043,	0x0012,	0xFFD4,	0xFF82, 0xFFA9,	0xFF77,	0xFFA1,	0xFFBD,	0xFFE2,	0x0007,	0x003E,
        0x0023,	0xFFF4,	0xFFAA,	0xFFB6,	0xFFF1,	0x0003,	0xFFC8, 0xFFEF,	0xFFC9,	0x000D,	0xFFF5,	0x0013,	0x000B,	0x004E,
        0x0063,	0x004B,	0xFFC6,	0xFFEA,	0x001B,	0x0029,	0x0078, 0x005E,	0x0024,	0x0047,	0x002D,	0x001C,	0xFF83,	0x0016,
        0xFFFF,	0xFFD2,	0xFF30,	0xFF97,	0xFFA4,	0x0026,	0x001A, 0x0059,	0x0007,	0x0042,	0x0003,	0xFFD0,	0xFFB3,	0xFF92,
        0x0024,	0x0046,	0x0021,	0x0018,	0x005D,	0x0028,	0x0025, 0x001D,	0xFFFA,	0x005E,	0x001F,	0xFF55,	0xFF95,	0xFFD7,
        0xFF9B,	0xFF9A,	0xFFDE,	0x003F,	0x00CC,	0xFFEA,	0x0018, 0x0028,	0x0060,	0xFFF1,	0x0040,	0x0026,	0x006D,	0x0033,
        0x000A,	0xFFFE,	0x0032,	0x005E,	0x0088,	0x005C,	0xFFD6, 0xFFEF,	0xFF8C,	0xFFE3,	0x0022,	0xFFF2,	0x003B,	0x0044,
        0x0050,	0xFF9F,	0xFF6C,	0xFF9A,	0xFFEA,	0xFF8E,	0xFFC5, 0xFFB0,	0x0052,	0x005F,	0x005F,	0x0003,	0x002E,	0x0037,
        0xFFF1,	0xFF44,	0xFFF4,	0x0079,	0x003C,	0x0022,	0xFF8B, 0xFFC4,	0x0002,	0x0091,	0x0027,	0x0051,	0xFFD4,	0xFFC2,
        0xFFEF,	0xFFA6,	0x004F,	0xFF93,	0x0029,	0x0039,	0x0064, 0x007E,	0x0018,	0xFFD8,	0x0010,	0xFFCE,	0xFFB4,	0xFFC6,
        0xFFA0,	0x0021,	0x0051,	0xFFD2,	0x005D,	0x0064,	0x004A, 0xFFEC,	0xFFAB,	0xFFF1,	0xFFD2,	0xFFF3,	0xFFE6,	0x0031,
        0x0002,	0xFFED,	0xFFDB,	0xFFC7,	0xFFDD,	0x0015,	0xFFF0, 0xFFB0,	0x0002,	0x001E,	0x0044,	0xFFBD,	0xFF7D,	0xFFD3,
        0xFFDF,	0x0009,	0x003D,	0xFFC9,	0x00A0,	0x0008,	0x0044, 0xFFD7,	0xFF99,	0x0067,	0x0012,	0x004F,	0xFFB5,	0xFFF5,
        0x0019,	0x002A,	0xFFF9,	0xFFF1,	0xFFF9,	0x004F,	0x0025, 0x0004,	0x0007,	0x0014,	0xFF92,	0xFFCE,	0xFFB1,	0xFFE5,
        0xFFED,	0x008B,	0xFFE2,	0x0018,	0x0031,	0x0010,	0x0042, 0xFFC1,	0x000A,	0x001B,	0xFFEA,	0x003E,	0xFFD1,	0xFFC6,
        0x0004,	0xFFE9,	0x0021,	0xFFFD,	0x0028,	0x0005,	0x0023, 0xFFCF,	0xFFE9,	0x0031,	0x0051,	0xFFDB,	0xFFBE,	0xFFFB,
        0x0013,	0xFFCA,	0xFF88,	0xFF70,	0xFFB6,	0x0008,	0x002A, 0xFFBF,	0xFFB9,	0xFFD5,	0x0067,	0xFFBA,	0xFFC2,	0xFFAA,
        0x0039,	0x001C,	0xFFEA,	0x002D,	0xFFED,	0xFFDF,	0xFF6F, 0xFF9F,	0x0013,	0x0022,	0x0044,	0xFF90,	0xFFCE,	0xFFC0,
        0xFFFA,	0x0014,	0x0013,	0xFFB9,	0x000A,	0x000A,	0x001D, 0x0051,	0xFFEE,	0xFFFE,	0x00BE,	0x001C,	0x002C,	0xFFCF,
        0xFFCA,	0x0036,	0xFFE1,	0xFF96,	0xFFBB,	0x0010,	0x005F, 0x0090,	0xFF98,	0xFFFB,	0x0076,	0x007B,	0x003F,	0x0032,
        0x0010,	0x004A,	0x0066,	0xFFC1,	0x0000,	0x0023,	0x0041, 0xFFFA,	0xFFAE,	0x0072,	0x0058,	0xFFD2,	0xFFF5,	0xFFEA,
        0x000F,	0x0035,	0xFFE1,	0xFF9A,	0xFFDD,	0xFFF1,	0xFFEB, 0xFF7F,	0xFFED,	0xFFD3,	0xFFEB,	0xFFF1,	0xFFFB,	0x000D,
        0x0023,	0x0049,	0xFFC5,	0xFFCC,	0x0014,	0xFFD3,	0xFFD0, 0xFFE3,	0x0014,	0xFFA3,	0x0004,	0x001D,	0x0026,	0x0008,
        0x0003,	0x003A,	0xFFBC,	0x0021,	0xFFF0,	0xFF8B,	0xFFB8, 0xFFED,	0x0005,	0x0024,	0x000E,	0xFFCD,	0x0013,	0x0043,
        0xFFF5,	0xFFE0,	0x0041,	0x0058,	0xFFC7,	0xFF91,	0x0012, 0x0044,	0xFFB9,	0xFFDC,	0x0005,	0x001B,	0xFFF3,	0x0024,
        0x0017,	0x004D,	0x0013,	0xFFBB,	0xFFF0,	0x0060,	0x0053, 0x003E,	0x0012,	0x0058,	0x001E,	0x000F,	0x003E,	0xFFD8,
        0x0059,	0x0073,	0xFFE9,	0x0067,	0x0015,	0x000C,	0x0000, 0xFFDC,	0xFFF3,	0x0058,	0x0018,	0xFFE5,	0x0015,	0xFFD6,
        0xFFBD,	0x003A,	0x0059,	0x009C,	0x00A8,	0xFFE3,	0xFF83, 0xFFEA,	0x0008,	0x0059,	0x0041,	0x000C,	0xFFB7,	0xFFB1,
        0x002F,	0x0068,	0x0068,	0x0001,	0xFFCD,	0xFFDD,	0x003B, 0xFFC0,	0xFF87,	0xFF98,	0x0010,	0xFFB7,	0x007B,	0xFFFA,
        0xFFC5,	0x000D,	0x00A1,	0xFFD9,	0xFFE0,	0xFFD9,	0x000A, 0x0003,	0xFFBE,	0xFFA7,	0x0004,	0x0029,	0x0054,	0xFFC2,
        0xFF9E,	0xFFD8,	0xFFED,	0xFFEF,	0x003A,	0x0009,	0xFFC7, 0x0029,	0xFFD4,	0x0057,	0xFFD3,	0xFFA1,	0xFFDE,	0x0009,
        0xFFD7,	0xFFC3,	0x0022,	0xFF9A,	0xFFE0,	0xFFB2,	0x0045, 0xFFF7,	0x00AD,	0xFFFB,	0x001A,	0xFFD6,	0xFFED,	0x0002,
        0xFFF0,	0x002B,	0x0030,	0x005C,	0x0053,	0xFFF1,	0x0036, 0x0014,	0xFFF3,	0xFFD3,	0x0020,	0x0004,	0x003C,	0x006D,
        0xFFFD,	0x0073,	0xFFFA,	0xFFC3,	0x003D,	0xFFBA,	0x0050, 0x0028,	0x0001,	0xFF87,	0xFFD1,	0xFFFC,	0x003E,	0x0039,
        0xFFF7,	0x0000,	0xFFE5,	0xFFF4,	0x0009,	0x0036};

//a mod 3
static int a3[] = {-1,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 1,	-1,	 1,	 0,	-1,
                -1,	-1,	 1,	-1,	 1,	-1,	 1,	-1,	 0,	 0,	 1,	 0,	-1,  1,	 1,	 1,	 0,	 1,	-1,	-1,	 0,	 0,	-1,	 1,	 1,	 1,
                1,	-1,	-1,	 0,	 0,	 0,	 1,	 1,	-1,	 1,	-1,	 0,	 0,  1,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	-1,	-1,	 1,	 0,	-1,
                1,	 0,	 0,	 1,	 0,	 0,	-1,	 1,	 0,	 0,	 1,	 1,	 0,  1,	 0,	 0,	-1,	-1,	 0,	 0,	 1,	 0,	-1,	 1,	 1,	 0,
                -1,	-1,	 1,	 1,	-1,	 0,	 0,	 1,	-1,	 1,	-1,	 1,	-1, -1,	 1,	 0,	-1,	-1,	-1,	 1,	 0,	 1,	-1,	 0,	 0,	 0,
                1,	 0,	-1,	-1,	 1,	 1,	-1,	 1,	-1,	 0,	 0,	-1,	-1,  1,	 0,	-1,	-1,	 0,	 1,	 1,	 1,	-1,	-1,	-1,	 0,	 0,
                1,	 1,	 1,	-1,	 1,	 0,	 1,	 1,	 1,	 0,	-1,	 1,	 0,  1,	 1,	 0,	 1,	-1,	 1,	 1,	 0,	-1,	-1,	 0,	-1,	 1,
                1,	-1,	-1,	 0,	-1,	-1,	 0,	 1,	-1,	 1,	 1,	 1,	-1,  1,	 0,	 0,	 0,	 1,	-1,	 1,	-1,	-1,	 0,	-1,	 0,	 0,
                -1,	 1,	-1,	 0,	 0,	-1,	-1,	 0,	-1,	-1,	-1,	 0,	 1,  1,	 1,	 0,	 1,	 1,	 0,	 1,	 1,	 0,	-1,	 0,	 1,	 1,
                -1,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	 1,	 0,	 1,	-1, -1,	-1,	 1,	 1,	 0,	-1,	 0,	 1,	 0,	-1,	 0,	 1,	 1,
                -1,	 1,	 1,	 1,	-1,	 0,	-1,	-1,	 1,	 0,	-1,	 1,	 0,  1,	-1,	 0,	 1,	 0,	 1,	 1,	-1,	-1,	-1,	 1,	 0,	-1,
                -1,	 0,	 1,	 1,	 0,	 1,	 1,	-1,	-1,	 1,	 1,	 1,	 1,  1,	-1,	 0,	 1,	 1,	 0,	 1,	 0,	 0,	 1,	-1,	 0,	 0,
                -1,	-1,	 1,	 0,	 1,	 0,	 1,	 1,	 1,	 0,	-1,	 1,	 0, -1,	-1,	 0,	 1,	-1,	-1,	 0,	 1,	-1,	-1,	 0,	 0,	 1,
                1,	 0,	-1,	 1,	-1,	 0,	-1,	 0,	 1,	 1,	 0,	-1,	-1,  1,	 0,	-1,	 1,	-1,	-1,	 1,	 1,	 0,	 1,	 0,	 0,	 1,
                -1,	 0,	 1,	 1,	 1,	 0,	-1,	 0,	 0,	-1,	 0,	-1,	 1,  0,	-1,	-1,	-1,	-1,	 0,	-1,	-1,	 0,	 1,	 0,	 1,	 0,
                1,	 0,	-1,	 1,	 1,	 1,	-1,	 0,	 1,	-1,	 0,	 1,	 1,  1,	 1,	 0,	 1,	-1,	 0,	 1,	 0,	 1,	 1,	 0,	 0,	 1,
                0,	 1,	 0,	 0,	 1,	 1,	-1,	 0,	 1,	-1,	-1,	 0,	 1,  1,	 0,	 0,	 1,	 1,	-1,	 1,	 1,	 1,	-1,	 0,	 0,	 0,
                -1,	-1,	 0,	-1,	 0,	 1,	 0,	-1,	 0,	 1,	 1,	 1,	-1, -1,	-1,	 0,	 1,	-1,	-1,	-1,	 1,	 0,	 0,	 0,	 1,	 1,
                0,	 1,	 0,	 0,	 0,	 1,	 1,	-1,	 0,	 1,	 1,	 0,	 1,  1,	 1,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	-1,
                1,	 0,	 1,	 1,	-1,	 1,	 1,	-1,	 0,	 1,	 1,	 1,	 1,  1,	-1,	-1,	-1,	-1,	-1,	 0,	-1,	 0,	 1,	 1,	 1,	-1,
                -1,	 0,	 1,	 1,	 0,	 1,	 0,	 1,	 0,	 1,	 0,	 0,	-1,  1,	 0,	 0,	 1,	 1,	 1,	 0,	 1,	-1,	-1,	 0,	 1,	 0,
                0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 0,	 1,	-1,  1,	-1,	 0,	-1,	-1,	 1,	 1,	-1,	-1,	-1,	 0,	 1,	 0,
                -1,	 1,	-1,	 0,	-1,	-1,	 1,	 0,	 0,	 0,	 1,	-1,	 1, -1,	-1,	 1,	-1,	 1,	 0,	 1,	 0,	 1,	 1,	 0,	-1,	 0,
                -1,	 1,	 1,	 1,	 1,	-1,	 1,	 1,	-1,	 0,	-1,	 1,	 0,  0,	 1,	 1,	 0,	 0,	 1,	 0,	-1,	-1,	 1,	-1,	 1,	 1,
                0,	 0,	 1,	-1,	-1,	-1,	 1,	 1,	 0,	-1,	 0,	 1,	 1,  0,	 0,	 0,	 1,	-1,	 0,	 1,	 1,	-1,	 1,	-1,	 1,	 1,
                0,	 1,	-1,	 0,	-1,	 0,	-1,	-1,	 1,	 1,	-1,	-1,	 1, -1,	 0,	-1,	 1,	 1,	 1,	 1,	-1,	 0,	 0,	 1,	 1,	 1,
                -1,	-1,	 0,	 0,	-1,	-1,	 0,	 1,	-1,	 0,	 1,	 1,	 1,  0,	 0,	-1,	 1,	-1,	 0,	 0,	 0,	-1,	-1,	 0,	-1,	 0,
                1,	-1,	 1,	-1,	 0,	-1,	-1,	 0,	 1,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 1,	 1,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 1,
                -1,	 0,	 1,	-1,	-1,	-1,	 0,	 1,	 1,	 0,	-1,	 0,	 0, -1,	-1,	 0,	-1,	 0,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 0,
                0,	-1,	 1,	 0,	-1,	 0,	-1,	 0,	-1,	-1,	 1,	 0,	-1,  0,	-1,	-1,	 0,	 1,	 0,	 0,	-1,	-1,	-1,	 1,	 1,	 1,
                0,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	-1,	 1,	-1,  0,	 0,	 1,	 1,	-1,	-1,	-1,	-1,	 0,	-1,	-1,	-1,	-1,
                -1,	 1,	 0,	 1,	-1,	-1,	-1,	 1,	 1,	-1,	 0,	 0,	 1,  1,	-1,	 0,	 1,	 0,	 1,	 0,	 0,	 1,	 1,	-1,	 0,	 1,
                1,	-1,	-1,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	 0,	 1,	-1,  0,	 1,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 1,	-1,	 0,
                -1,	-1,	-1,	 1,	 0,	-1,	-1,	 0,	 0,	-1,	-1,	 0,	-1,  1,	 0,	 1,	 0,	 1,	 0,	-1,	 1,	-1,	-1,	 1,	 1,	-1,
                1,	-1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

//R’ = (e – a mod 3) mod q
static unsigned int R_[] = {0x0AD1,	0xF7E6,	0x01E1,	0x0DB0,	0x0134,	0xF513,	0xFAF8,
    0x03CD,	0x0C82,	0x0DDE,	0x0680,	0xF1AA,	0x0E8F,	0x0338, 0x03F2,	0xFE76,	0x083A,	0x074A,	0xFA9A,	0x0096,	0x086F,
    0x081D,	0x0C88,	0xF2D7,	0xF83D,	0x02BE,	0xF3BE,	0x04E1, 0x036F,	0xFC86,	0xF3E8,	0x00A5,	0x0D94,	0x096D,	0xF978,
    0x0303,	0x0E72,	0xFB1E,	0xFB70,	0xFC64,	0x0B7B,	0xFBE7, 0x0CD0,	0xF6C1,	0x0D26,	0xF8B7,	0x05E0,	0xFD7B,	0xF4F3,
    0x046E,	0x0B86,	0xF673,	0x07FF,	0x0693,	0x060D,	0xFCDE, 0x0B3F,	0x00E7,	0xF953,	0xF9B5,	0xF6A6,	0x0179,	0xFF2A,
    0x0E17,	0x0103,	0xF1DB,	0xF202,	0xFA7B,	0xF2C8,	0xF957, 0x07AA,	0xF534,	0xF420,	0x0788,	0xF7D7,	0xFCD7,	0x0C1B,
    0xFAEB,	0x0CD1,	0x0867,	0x0A78,	0xF999,	0x0EB7,	0xFBF8, 0xF31F,	0xFE2F,	0x0913,	0xFF42,	0xFA13,	0xF73B,	0x07AE,
    0xF4C5,	0xF866,	0xF3BE,	0x0314,	0xF2C8,	0x01AC,	0xF4F4, 0xF876,	0xF930,	0x08F9,	0x082C,	0x0027,	0x0600,	0x0566,
    0xF96E,	0x0AAD,	0x0327,	0xFA8F,	0x0D68,	0xF55B,	0x03D8, 0x0CFC,	0xF4AB,	0xF63D,	0xFC58,	0xF3D7,	0x0EB5,	0x08E6,
    0x0E08,	0x0D33,	0x0058,	0x0840,	0xF1DF,	0x085C,	0xFE40, 0x06EB,	0x0EA8,	0x00E8,	0x055A,	0x0E67,	0xFAE6,	0x0196,
    0x0470,	0x0D94,	0xF2C2,	0xF2BE,	0xF6DC,	0xF7A6,	0xF79E, 0xF116,	0xF5F7,	0xF5C8,	0x0D28,	0x0C1D,	0x09F3,	0xF7C6,
    0x05D5,	0xFDE5,	0xF285,	0xF97B,	0x098A,	0xFAD3,	0xFBA3, 0x0106,	0x08B9,	0xF2EE,	0xFA19,	0x0C8A,	0xFC5D,	0xF938,
    0x002F,	0xF9BC,	0xF461,	0xF536,	0xF713,	0x090E,	0x08FD, 0xF786,	0x003A,	0x0C50,	0x021A,	0xF676,	0x01C7,	0x09BB,
    0xF4F7,	0xF1E6,	0x0E9E,	0x089A,	0x02FB,	0x01EE,	0xF39F, 0xF15B,	0xFA11,	0x061D,	0x077A,	0xF49D,	0xFB30,	0x01F5,
    0x05F4,	0x0CDE,	0x01BE,	0xF9C1,	0x0A66,	0x0181,	0x055A, 0xF948,	0xF50C,	0xF42E,	0xFB3B,	0x0E24,	0xF88D,	0x0456,
    0x0EA0,	0x01E1,	0x06B7,	0xFCB3,	0x0690,	0xFEF0,	0x00F6, 0x0696,	0xF411,	0xFA1E,	0x041B,	0x08BD,	0x0454,	0x09FA,
    0xF750,	0xF5FD,	0x04F7,	0x0133,	0xF2D0,	0xFC9A,	0xFBF3, 0x0158,	0xFF22,	0xF315,	0xF430,	0x0EAC,	0xF60A,	0x0D6A,
    0xF863,	0xF7DF,	0x0461,	0xF67E,	0x0B4F,	0x0809,	0x00A3, 0xF7F7,	0xF205,	0xF254,	0xF8A3,	0x0C40,	0xFA79,	0xF54E,
    0x0244,	0xFFF9,	0xFEF5,	0xFC96,	0xFABD,	0x0C9A,	0xF5B3, 0x04ED,	0xF7D4,	0xFC7B,	0x04A9,	0x00A0,	0xFD17,	0x0AE4,
    0x03EE,	0x0E55,	0x0D25,	0x0E34,	0x0EC3,	0x0431,	0xF386, 0xFEF0,	0xF2F9,	0xFCB0,	0xF18F,	0x049A,	0x0782,	0xF7B5,
    0xFE93,	0xF44C,	0x054E,	0xF6DE,	0xF6B6,	0xFBA5,	0x0E3C, 0xFDDD,	0x00AF,	0x02B3,	0xF4FD,	0xFC63,	0xF70C,	0xFD53,
    0xF2A7,	0xFB2C,	0xFE4C,	0x0434,	0x0E08,	0xFE3D,	0x0DAD, 0xFC9D,	0xF842,	0xF3F6,	0x004B,	0x0C51,	0xF7C4,	0xFE8E,
    0xFD51,	0x0748,	0xF47E,	0xF910,	0x05D1,	0xF9C0,	0x01DB, 0xFAA0,	0x088B,	0x09C8,	0xFE56,	0x0DCD,	0x053F,	0xFB13,
    0xF7A3,	0x0A38,	0xFF7B,	0x0323,	0xFF64,	0x0625,	0x0892, 0x036A,	0x0567,	0xFD00,	0x037D,	0x017E,	0xF9C5,	0x0295,
    0x0DBD,	0xF122,	0x0EB6,	0x0E8C,	0x04EF,	0xF593,	0xF334, 0xFFE3,	0x061D,	0xF23D,	0x01A4,	0xF5C1,	0x081D,	0x0C24,
    0x0A5B,	0xF969,	0x0066,	0x0B77,	0xFED6,	0xF932,	0x060D, 0xFEA7,	0x0B17,	0xFF1F,	0xF9AE,	0xF844,	0x0CA0,	0x0CCC,
    0x05EF,	0xFFA4,	0xF450,	0x00E9,	0xF403,	0xF307,	0xFCB3, 0x0B84,	0xFF94,	0xF145,	0xF517,	0xF537,	0x07D3,	0x0A49,
    0x0B82,	0x08C5,	0xFCA4,	0xF29C,	0xF6C2,	0xF31B,	0xF177, 0xFDD5,	0x0801,	0xFB97,	0xFA4A,	0x0557,	0x0BF6,	0x019C,
    0x03E2,	0x043C,	0xF64A,	0x0AEE,	0x0B6F,	0x0E34,	0x048F, 0xFFD0,	0xF432,	0x0C7B,	0x0E30,	0x0274,	0xF70E,	0x00E9,
    0xF67E,	0x0AFF,	0x0CF7,	0xFCE3,	0xFB85,	0xF861,	0x06D3, 0x089A,	0xF6E8,	0xF31D,	0xFC93,	0x0971,	0x089B,	0xF7CB,
    0xFAD6,	0x097B,	0x0379,	0x09C1,	0x0940,	0x0011,	0x068C, 0xF8B5,	0xF9AA,	0xF29C,	0x04FC,	0xFB56,	0xFA0A,	0x05D5,
    0xFA60,	0x0CD3,	0xF5DA,	0xF3EF,	0xF95E,	0x06E1,	0xFE12, 0x0157,	0x0845,	0xFBC4,	0xF3BA,	0xF494,	0x0387,	0x0902,
    0xF72B,	0x0BBF,	0xFED4,	0x0247,	0xFECA,	0xF4BF,	0x0458, 0x0EB1,	0x097E,	0xF826,	0x0018,	0x07FC,	0x0A9C,	0xFC70,
    0x010E,	0xFE10,	0x04CA,	0xF561,	0x0D64,	0xFDC9,	0xF958, 0x02A1,	0x0DBF,	0x0380,	0xF946,	0xF5EA,	0x03C3,	0x0790,
    0xFEB4,	0x0384,	0x0190,	0xF909,	0xF57B,	0xFD7D,	0xF275, 0x04C5,	0xF4C1,	0x0B4D,	0x05A4,	0xF6F3,	0x01E4,	0x099A,
    0x0CAF,	0x0D0F,	0xFBBC,	0x01C9,	0xF43B,	0xF565,	0xF78E, 0xFAA7,	0x06C9,	0x02E3,	0xF2E4,	0x0C3C,	0xFC84,	0xFAD4,
    0x029F,	0x0292,	0x0077,	0x0DB0,	0x0871,	0x0E3A,	0xF9B2, 0xF3B3,	0x0D29,	0x04C7,	0xF8E9,	0xFB4E,	0xF91F,	0x0320,
    0x06A5,	0x0312,	0xF132,	0xF277,	0xFAB1,	0x02AB,	0xFE37, 0x0909,	0xF111,	0xFDCD,	0xF355,	0x0D23,	0xFA2A,	0xF4AB,
    0x027B,	0x047D,	0x069A,	0x0DCA,	0xF19F,	0x0A53,	0x00CC, 0xF11B,	0x046A,	0x0E78,	0x0BF9,	0xF3AE,	0x0935,	0xFE4B,
    0xFC1F,	0xF70B,	0x06DF,	0xF6A0,	0x0CE2,	0x012B,	0xFB47, 0xFE96,	0x0347,	0x0CFC,	0xF7D4,	0x09F6,	0x0560,	0xF39C,
    0x0DE1,	0xFFC8,	0x01BF,	0x0D10,	0xFD23,	0x0472,	0x094B, 0x082D,	0xF75A,	0x09DA,	0xF93D,	0x0E56,	0x0708,	0x0DDF,
    0x0E81,	0x043B,	0xF97E,	0xF785,	0x0871,	0xF592,	0xFA20, 0xFD33,	0x08B3,	0xF6FE,	0x0D69,	0x0D11,	0xF1A3,	0x0638,
    0x023D,	0xF27E,	0x096A,	0xF3DD,	0x031C,	0xF494,	0x0B7F, 0xF609,	0x0358,	0xFE4D,	0x0366,	0xF869,	0x0312,	0x07F7,
    0x0468,	0x01F8,	0x0469,	0xFF2B,	0xFD29,	0x08AF,	0x029E, 0xF863,	0xF21B,	0xF888,	0xF292,	0x06C3,	0xF446,	0x0157,
    0xFEF3,	0xF903,	0xF608,	0xF757,	0x08AE,	0xF495,	0x08F4, 0x0D59,	0x0AE2,	0x0D4D,	0x0520,	0xFD24,	0x0D21,	0x0C6E,
    0x0520,	0xF9FC,	0x0531,	0xF65F,	0x0653,	0x03C4,	0xF6AD, 0x0A78,	0xFBAD,	0xFBD3,	0x0AD4,	0x06BE,	0xF49B,	0x0974,
    0xF69C,	0x0E9D,	0xFD1A,	0xFA51,	0x0DE2,	0x047D,	0x0716, 0x07E3,	0xFBCA,	0xFE6F,	0x0EA9,	0xFD2E,	0xF3A1,	0xF144,
    0xFCA8,	0x0A8A,	0xFBB4,	0xF239,	0x0C88,	0xF47D,	0x0DCC, 0x0E83,	0xF6A8,	0xFE37,	0x05AB,	0x0E75,	0xF99A,	0x0594,
    0x0BA2,	0xFBF9,	0x00C2,	0x00A9,	0x0D10,	0x045E,	0xFECF, 0xF9D3,	0xF983,	0x0101,	0xFBD5,	0xF9BC,	0x0288,	0x0CBF,
    0x074B,	0x0AF9,	0x0277,	0x0683,	0xF331,	0xF77B,	0xFDD0, 0xFAE9,	0x011B,	0x08A6,	0xF71F,	0x0939,	0x0AC3,	0xFA7D,
    0x0EB2,	0x0862,	0xF22B,	0x00E1,	0xFD6D,	0x0101,	0x0747, 0x0A55,	0x02E0,	0xFC4F,	0xFA61,	0x0553,	0x0E4C,	0x0D33,
    0x065A,	0x028C,	0xFB53,	0xF7A9,	0xF47F,	0x030F,	0x03C0, 0x08E5,	0x00B9,	0xF4FF,	0x0697,	0xF615,	0xFCE4,	0xF33F,
    0x0769,	0xF1D6,	0xF63F,	0xFB00,	0xF622,	0xFFC5,	0xF63D, 0xF9A0,	0xF77E,	0x0374,	0xF9CE,	0x0925,	0x053E,	0xF90A,
    0x07E8,	0x06E1,	0xF1FE,	0xFBCE,	0xFF01,	0xF941,	0xF695, 0xF35E,	0xFD1C,	0xF9C4,	0xF6C6,	0xF3F7,	0x08F5,	0xF2B4,
    0x0CC1,	0xFF57,	0x0E71,	0x0A6B,	0x0B64,	0xFE87,	0xF241, 0xFFD9,	0x0948,	0x093F,	0x0E95,	0xF482,	0x0079,	0xFAEC,
    0xFD77,	0x090B,	0x0E75,	0x0A8F,	0xF1B1,	0x07FA,	0xF285, 0xFB93,	0x01BD,	0x063C,	0x04E4,	0xFCB6,	0x0CEB,	0x0715,
    0xF736,	0x0BE7,	0xFDF7,	0x0570,	0x0B13,	0x0729,	0xF623, 0x05B9,	0xF4DE,	0xFCB9,	0x0796,	0xFCE5,	0x08DB,	0xF19E,
    0x018A,	0x0B19,	0xF436,	0xF188,	0xF8E5,	0xF3DB,	0xF40F, 0xF85B,	0x0373,	0x0878,	0xF306,	0xF974,	0x0A1F,	0xF3D9,
    0xFCDD,	0xFAA6,	0xF729,	0xF653,	0xF5AC,	0x02AC,	0x0CF3, 0x0D2C,	0xF4CB,	0xF9E5,	0x0CB9,	0xF3FA,	0xFFE0,	0xF3FC,
    0x08ED,	0xF674,	0x03C8,	0x0EBE,	0x064E,	0xF89E,	0xF111, 0xF226,	0xFDD4,	0xFE0C,	0xF305,	0xFBFC,	0x04D4,	0x0732,
    0x04D6,	0xF8F8,	0xFED5,	0x07F2,	0xF7A4,	0xF636,	0xFFEA, 0xF344,	0xFA2C,	0xFA4E,	0x0937,	0xFF55,	0xF857,	0x0892,
    0x0C8F,	0xFC68,	0xF251,	0xF31A,	0x0EBE,	0xF32D,	0xF78E, 0x03CB,	0x02AE,	0x0465,	0xF39C,	0x073D,	0xF361,	0xF9B5,
    0x0044,	0x0E20,	0x0ED7,	0x00FC,	0x0700,	0xFE7F,	0xFFE9, 0x072A,	0x078B,	0x0652,	0x0EEC,	0xF14C,	0xF261,	0x0CC9,
    0xF7A5,	0x0CA3,	0x08C3,	0x0C00,	0x0BE5,	0x03A0};

//oR4 = cR mod 4
static unsigned int oR4[] = {0X64, 0X31, 0XA2, 0XCA, 0XAA, 0XD3, 0X69, 0XE1, 0X13, 0XA0, 0XF1,
                             0XB3, 0XEB, 0XF6, 0XFD, 0X9B, 0XFB, 0X38, 0X0F, 0XF7, 0X1C, 0XFE,
                             0XF9, 0XA0, 0X08, 0X4C, 0XA7, 0XCC, 0X34, 0XD8, 0XC3, 0X0C, 0X2E,
                             0X82, 0X8A, 0XB0, 0X79, 0X5E, 0XF9, 0X99, 0X31, 0XB9, 0XA2, 0XBF,
                             0XAB, 0XBD, 0X64, 0X4A, 0X66, 0X0B, 0X18, 0X7C, 0X29, 0XB4, 0X87,
                             0XCB, 0X24, 0X2B, 0XDB, 0X7D, 0X31, 0X85, 0X9B, 0X4D, 0X32, 0X53,
                             0X61, 0X3A, 0X72, 0XA4, 0X7D, 0XCF, 0X00, 0X56, 0XB4, 0X92, 0X13,
                             0X32, 0X7F, 0X3C, 0X6B, 0X19, 0X5A, 0X3C, 0XD4, 0X53, 0X6E, 0X9F,
                             0XE0, 0X30, 0X7F, 0X07, 0XF6, 0X42, 0XF5, 0XEE, 0X22, 0XB3, 0X2C,
                             0X26, 0XFD, 0X78, 0X77, 0XED, 0X44, 0X60, 0XA4, 0XEE, 0X6D, 0X23,
                             0XBC, 0XEC, 0X68, 0X02, 0X24, 0X47, 0X2B, 0X00, 0X75, 0X54, 0XCB,
                             0XC7, 0X6D, 0XC0, 0X3B, 0X1A, 0XDD, 0XB1, 0XAD, 0XF5, 0X5E, 0XF6,
                             0XBC, 0XE1, 0X9F, 0XF2, 0XFB, 0X08, 0X13, 0X3B, 0X69, 0X8D, 0XE5,
                             0X8F, 0X97, 0X1A, 0X43, 0X46, 0X6C, 0X1D, 0XEF, 0X2E, 0XFC, 0XE4,
                             0X64, 0X18, 0X1F, 0X11, 0XCB, 0X06, 0X66, 0XED, 0X90, 0X84, 0X4C,
                             0XF6, 0X26, 0X4B, 0XF5, 0X0F, 0X7D, 0XC7, 0XB7, 0X6B, 0X57, 0X4D,
                             0XCE, 0X37, 0XC5, 0XF4, 0XDB, 0X25, 0X22, 0X68, 0X69, 0X58, 0X2D,
                             0X1D, 0XCD, 0X4D, 0X93, 0XDD, 0X9D, 0X0B, 0X6F, 0X37, 0X66, 0X7A,
                             0X61, 0XFF, 0X23, 0X59, 0XC3, 0X35, 0X81, 0X0A, 0X98, 0X10, 0XA1,
                             0X8A, 0X0B, 0X7B, 0X1A, 0X6E, 0X45, 0X43, 0X0D, 0XB8, 0X15, 0XF1, 0X00};

//mask = MGF (oR4)
static int mask[] = {-1, 1, -1,  0,  0,  0,  1,  1,  1, -1,  0, -1, -1, -1, -1, -1, -1,  1, -1,  1,  0,  0,  0, 1, 0, 0,
                 1,  1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,  1,	 1,	-1,	-1,	-1,	 0,	 0,	 1,	-1,	 1,	-1,	 0,	 1,
                 1,	 0,	 0,	-1,	-1,	 0,	 1,	-1,	-1,	 1,	 0,	 0,	-1,  1,	-1,	 0,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	 1,	-1,
                -1,	 0,	 0,	-1,	 1,	 0,	 1,	 1,	 0,	 1,	 1,	 1,	 0, -1,	-1,	-1,	 1,	 1,	 0,	 0,	 0,	 1,	 0,	 1,	 1,	 1,
                -1,	 0,	-1,	 1,	-1,	 0,	 0,	-1,	 1,	-1,	-1,	 1,	 0, -1,	 0,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 1,	-1,	-1,	-1,
                -1,	 0,	-1,	-1,	 0,	 0,	 0,	 0,	 1,	 1,	 1,	 0,	 0, -1,	 1,	 1,	 0,	 1,	 1,	 1,	 1,	 0,	 1,	-1,	 1,	 0,
                 0,  1,	-1,	-1,	-1,	 1,	-1,	-1,	 1,	 1,	 0,	 1,	-1,  0,	 0,	-1,	 0,	-1,	 1,	 0,	 1,	-1,	 0,	-1,	 1,	-1,
                 1,	-1,	 0,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,  0,	-1,	-1,	 0,	-1,	 1,	 1,	 0,	-1,	 1,	-1,	 0,	 0,
                 1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	-1,	 0,	-1,	 0,	 0, -1,	-1,	 0,	 1,	 0,	 1,	-1,	-1,	 1,	 1,	-1,	-1,	 1,
                -1,	-1,	 0,	 1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	 1,	 1,  0,	 1,	 1,	 0,	 1,	-1,	 1,	-1,	-1,	 0,	 1,	 1,	 0,
                -1,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	 1,	 1,	 0,	 1,	-1,  1,	 0,	 0,	 0,	-1,	 1,	-1,	 1,	-1,	 0,	 0,	 0,	-1,
                 1,	-1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	 0, -1,	 1,	-1,	-1,	 1,	 0,	 0,	 0,	 1,	 0,	-1,	 1,	 1,
                 0,	-1,	-1,	 0,	 1,	 0,	 1,	 1,	-1,	 1,	-1,	 0,	-1,  1,	-1,	-1,	 1,	-1,	 0,	-1,	 1,	 1,	 1,	-1,	-1,	 1,
                 0,	-1,	 1,	 0,	 1,	-1,	 1,	 0,	-1,	 0,	 1,	 0,	 0,  1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 0,	-1,	 1,
                 1,	-1,	 0,	 1,	-1,	-1,	 0,	-1,	 0,	 1,	-1,	 1,	-1,  0,	-1,	 1,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 1,
                 0,	 1,	 1,	 1,	-1,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	-1, -1,	 0,	-1,	-1,	 1,	-1,	 1,	-1,	-1,	-1,	-1,	 0,	 1,
                 1,  1,	 0,	 1,	 1,	 0,	 0,	 0,	 1,	 1,	 0,	-1,	 0, -1,	 1,	 0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	 1,	 0,
                 1,	 0,	 0,	 1,	 0,	-1,	-1,	-1,	 0,	-1,	 1,	 1,	 0, -1,	 0,	-1,	 0,	-1,	 1,	 0,	-1,	-1,	 1,	-1,	 0,	-1,
                 0,  0,	-1,	 1,	-1,	 1,	 1,	 1,	 1,	-1,	-1,	 0,	-1, -1,	-1,	 1,	 1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 1,	 0,
                -1,	 1,	-1,	 0,	 1,	 1,	 0,	-1,	-1,	-1,	 1,	 1,	 1,  0,	 0,	-1,	 1,	 1,	 1,	 1,	 0,	-1,	-1,	 0,	-1,	 0,
                 1,  1,	 0,	 0,	 1,	-1,	-1,	-1,	-1,	 0,	-1,	-1,	-1, -1,	 1,	-1,	 0,	-1,	 1,	 1,	-1,	 0,	-1,	 0,	 1,	 0,
                -1,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	-1,	 1,	-1,	 1,	-1, -1,	 1,	 0,	 1,	 1,	-1,	 1,	-1,	 1,	 1,	 1,	 1,	-1,
                 1,	-1,	-1,	-1,	 1,	 1,	-1,	-1,	-1,	 1,	 1,	-1,	 0, -1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	-1,	 0	-1,
                 1,	 1,	 1,	-1,	-1,	-1,	-1,	 1,	 1,	 0,	 1,	 1,	 1, -1,	 0,	-1,	 0,	-1,	 1,	 1,	 1,	-1,	 1,	-1,	-1,	 0,
                -1,	 0,	 0,	-1,	-1,	 0,	-1,	 1,	 1,	 0,	 1,	-1,	 0,  1,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	-1,	-1,	 0,	 1,
                -1,	-1,	 1,	-1,	 0,	-1,	 0,	-1,	-1,	 0,	 0,	 0,	-1, -1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	-1,	-1,	 1,	 0,	 0,
                 0,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	-1,	-1,	-1,  1,	 1,	-1,	-1,	 0,	 0,	 1,	 0,	-1,	-1,	 1,	 1,	-1,
                 1,	 0,	-1,	 1,	 0,	 0,	-1,	 1,	 0,	 1,	-1,	-1,	 1,  1,	 1,	 0,	-1,	 1,	 1,	 0,	-1,	 1,	-1,	 1,	 1,	-1,
                 1,	 0,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	-1,	-1,	 0,  1,	 0,	 0,	 1,	 1,	 0,	 1,	 1,	 1,	 0,	 0,	-1,	 1,
                 0,	-1,	-1,	-1,	 1,	 0,	 0,	-1,	 0,	-1,	 1,	 1,	 1,  1,	-1,	-1,	 0,	-1,	-1,	-1,	 0,	 0,	 0,	 0,	 1,	 0,
                 0,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	-1,	 0,	-1,	-1,	 1, -1,	-1,	 0,	 1,	 1,	-1,	-1,	 0,	 0,	-1,	 1,	-1,	 1,
                 1,	-1,	-1,	-1,	 0,	-1,	 0,	-1,	 0,	 1,	 1,	-1,	 0,  1,	-1,	 1,	 1,	 1,	 1,	 0,	 0,	 1,	 0,	-1,	-1,	-1,
                -1,	 0,	 1,	 1,	 1,	 0,	 0,	-1,	 0,	-1,	 1,	 0,	 0,  0,	-1,	 1,	 0,	-1,	 1,	 1,	-1,	 1,	-1,	 1,	 0,	 1,
                -1,	 0,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 1,	-1,  0, 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

//Mtrin’ = m' – maska
static int Mtrin[] = {0,  0,  0, 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 0,
                0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 1,	 0,
                0,	 1,	 0,	 1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,  0,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 0,	 0,
                0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 1,	 1,	 0,	 1, -1,  0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 0,
                0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	 1,  0,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	 0,	 0,	 1,	-1,	 0,
                -1,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	-1,	-1,	 1,	 0,	 0, -1,  0,	 0,	 0,	 0,	 1,	 1,	 1,	 1,	 1,	 1,	 0,	 0,
                -1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,  1,	 0,	 1,	-1,	 0,	 0,	-1,	 1,	 1,	 1,	 0,	 1,	-1,
                1,	-1,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 1,	-1,	 0,	 0,  0,	 1,	 0,	-1,	 1,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,
                -1,	-1,	 0,	 0,	 1,	 1,	 1,	 0,	 0,	 1,	 0,	 0,	 1,  0,	 0,	-1,	 0,	 1,	 1,	 0,	 1,	 1,	-1,	 1,	 1,	 1,
                0,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	-1,	 0,	 1,	-1,	 1,  0,	 0,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,
                -1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	-1,	 0,	 1,	 0,	 0, -1,  0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	 1,	 1,	-1,	 0,
                1,	 0,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 1,	 1,	-1,  0,	 0,	 0,	 1,	 0,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	 0,
                0,	 1,	-1,	 1,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 1,	 1,	 1,	-1,	-1,	 0,	 0,	 1,	 1,	 0,	-1,
                0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 1,  1,	 1,	 1,	 1,	 1,	 0,	 0,	 1,	 1,	 1,	-1,	 0,	 1,
                1,	 0,	 1,	 1,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0, -1,	 0,	-1,	 1,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,
                1,	 1,	 1,	-1,	 1,	 0,	-1,	 0,	 1,	-1,	 0,	-1,	 0,  1,	 0,	-1,	 0,	 0,	 0,	-1,	 1,	 1,	-1,	 0,	 1,	-1,
                1,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	-1,	 0,	 0,	 0,	 0,  0,	-1,	 0,	 0,	 0,	-1,	 1,	 1,	 0,	 1,	 0,	 1,	 0,
                0,	 1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	-1,  1,	-1,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	-1,	 0,	 1,
                1,	 1,	 1,	 0,	 1,	 0,	 1,	 0,	 1,	 0,	-1,	 0,	-1,  1,	 1,	 1,	 1,	 1,	-1,	 1,	-1,	 0,	 1,	 1,	 1,	 0,
                -1,	 1,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	 0,	 1,	 0,	 1, -1,	 1,	 0,	-1,	 1,	 1,	 0,	 0,	 1,	-1,	 0,	 0,	 1,
                -1,	 0,	-1,	 0,	-1,	 0,	-1,	 1,	 1,	-1,	 0,	 1,	-1,  0,	-1,	 0,	 1,	 0,	-1,	 1,	-1,	 0,	-1,	 1,	-1,	 1,
                1,	 1,	-1,	 1,	 0,	 1,	-1,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 0,	-1,	 1,	-1,	 1,	-1,	 0,	 1,	 1,	 0,	 1,
                0,	 0,	-1,	-1,	 1,	 0,	 0,	 1,	-1,	-1,	 0,	 1,	-1,  1,	 0,	-1,	 0,	 0,	-1,	-1,	 1,	-1,	 0,	-1,	 0,	 0,
                0,	 0,	 1,	 1,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	 1,	 1, -1,	 0,	 0,	 1,	 1,	-1,	 1,	 1,	 1,	 1,	 1,	 0,	 0,
                1,	 0,	-1,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 1,	-1,	 1,  1,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 1,	 1,	-1,	 1,
                -1,	 0,	-1,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	 0,  0,	 1,	 1,	-1,	 1,	-1,	 1,	 0,	 1,	 0,	 1,	 1,	-1,
                0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,	 1,  0,	-1,	-1,	 1,	 0,	 1,	 0,	 1,	-1,	 0,	 1,	 0,	 1,
                0,	 1,	-1,	 0,	 0,	-1,	 1,	 0,	-1,	 1,	-1,	-1,	 0, -1,	 0,	 1,	 0,	 1,	-1,	-1,	 0,	-1,	 1,	 1,	 1,	 0,
                1,	-1,	 1,	 0,	 1,	 1,	 0,	-1,	 0,	 1,	 1,	-1,	 1,  1,	-1,	 1,	-1,	-1,	 1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,
                -1,	-1,	 1,	-1,	 1,	 0,	 1,	-1,	 1,	-1,	 1,	 1,	 1,  0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,
                -1,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,  0,	 0,	 1,	-1,	 1,	 1,	 0,	 1,	 1,	-1,	 0,	 0,	 1,
                0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	-1,	 1,	 0,  0,	 0,	 1,	-1,	 0,	-1,	 0,	 1,	 1,	 0,	 1,	 1,	 1,
                0,	 0,	 1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	-1,	 0,  1,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 0,
                -1,	 0,	 1,	 1,	 1,	 1,	 1,	 1,	-1,	 0,	 1,	 0,	 1, -1,	 0,	 0,	-1,	 1,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 0,
                1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

static unsigned int Mbin[] = {0X00,	0X01,	0X02,	0X03,	0X04,	0X05,	0X06,	0X07,	0X08,	0X09,	0X0A,
                              0X0B,	0X0C,	0X0D,	0X0E,	0X0F,	0X10,	0X11,	0X12,	0X13,	0X14,	0X15,
                              0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,	0X1F,	0X83,
                              0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                              0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,	0X27,	0X28,	0X29,
                              0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,	0X32,	0X33,	0X34,
                              0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,	0X3D,	0X3E,	0X3F,
                              0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,	0X48,	0X49,	0X4A,
                              0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,	0X53,	0X54,	0X55,
                              0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,	0X5E,	0X5F,	0X60,
                              0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,	0X69,	0X6A,	0X6B,
                              0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,	0X74,	0X75,	0X76,
                              0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,	0X7F,	0X80,	0X81,
                              0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,	0X8A,	0X8B,	0X8C,
                              0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,	0X95,	0X96,	0X00};

static unsigned int M_[] = {0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                            0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,	0X27,	0X28,	0X29,
                            0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,	0X32,	0X33,	0X34,
                            0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,	0X3D,	0X3E,	0X3F,
                            0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,	0X48,	0X49,	0X4A,
                            0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,	0X53,	0X54,	0X55,
                            0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,	0X5E,	0X5F,	0X60,
                            0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,	0X69,	0X6A,	0X6B,
                            0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,	0X74,	0X75,	0X76,
                            0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,	0X7F,	0X80,	0X81,
                            0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,	0X8A,	0X8B,	0X8C,
                            0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,	0X95,	0X96};

static int r_[] = { 0,  1, -1, -1,  0, -1,  0,  1, -1,  1,  0,  0,  1,  0,  0, -1,  1,  0,  0,  0, -1, 0, 0,  0,  0,	 1,
            0,	 0,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,	 0,  0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,
            0,	 0,	-1,	 0,	-1,	 1,	 1,	 0,	-1,	 0,	 1,	-1,	 0, -1,	 1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 0,
            0,	 0,	 0,	 1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	 0,  0,	 0,	 0,	-1,	-1,	-1,	-1,	 0,	 0,	 1,	 0,	 0,	 0,
            -1,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,  1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,
            0,	 0,	-1,	 0,	 0,	 0,	 0,	 1,	 0,	 1,	 0,	 1,	 0,  0,	 0,	 0,	-1,	 0,	-1,	 1,	-1,	 0,	 1,	 0,	 0,	 1,
            0,	 0,	-1,	 0,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,  0,	-1,	 0,	 1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	 1,
            0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 1,	 1, -1,	-1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,	-1,	 1,	 0,
            0,	 0,	 0,	 1,	 0,	-1,	 0,	-1,	 1,	 0,	 0,	-1,	 1,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,
            0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 1,	 1,	 0,	-1,	-1,  0,	-1,	-1,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,
            0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	-1,	-1,	 0,	 0,  0,	 0,	 1,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	 0,
            0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 1, -1,	 0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	-1,	 1,
            -1,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	 0,	 1,  0,	 0,	 0,	 0,	-1,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	-1,
            0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,  0,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,
            0,	-1,	-1,	 0,	 1,	 1,	 0,	 0,	 1,	 0,	 1,	-1,	-1,  0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,
            0,	 1,	-1,	 0,	-1,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,  0,	-1,	-1,	 0,	 1,	 1,	-1,	 0,	 0,	-1,	 1,	 0,	 0,
            0,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,  1,	 1,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,
            0,	 1,	 1,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,  0,	 0,	 1,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,
            1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	-1,  1,	 0,	 0,	-1,	 0,	 0,	 1,	-1,	 1,	 0,	 0,	 1,	 0,
            0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	-1, -1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,
            -1,	-1,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	-1,	 0,  0,	 0,	-1,	 0,	 1,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,
            -1,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	-1,	-1,	 0,	 0,	 1,  1,	-1,	 0,	 1,	 1,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,
            0,	 0,	 0,	 0,	-1,	-1,	 1,	 1,	-1,	 0,	-1,	 1,	 0,  1,	 1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,
            0,	-1,	 1,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	-1,	-1,	 0,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 0,
            0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 0,  0,	 1,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 0,	 0,
            0,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 0,  1,	-1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	 0,	 0,	 1,	 0,
            0,	 0,	 1,	 0,	 1,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	 0,  1,	 0,	-1,	 0,	 0,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 1,
            0,	 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 1,
            0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,  0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 0,	 0,	 0,
            0,	-1,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,
            -1,	 0,	 0,	-1,	-1,	 1,	 1,	 0,	-1,	 0,	 0,	 0,	-1,  0,	 0,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	-1,	 0,	 0,	-1,
            1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 1,	 0,	 1,	-1,  0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 1,	-1,	 0,	 1,	-1,
            0,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,  1,	 0,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 1,	 0,	 0,	 0,
            0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	-1,  0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	-1};

static unsigned int R[] = {0x0AD1,	0xF7E6,	0x01E1,	0x0DB0,	0x0134,	0xF513,	0xFAF8,
        0x03CD,	0x0C82,	0x0DDE,	0x0680,	0xF1AA,	0x0E8F,	0x0338, 0x03F2,	0xFE76,	0x083A,	0x074A,	0xFA9A,	0x0096,	0x086F,
        0x081D,	0x0C88,	0xF2D7,	0xF83D,	0x02BE,	0xF3BE,	0x04E1, 0x036F,	0xFC86,	0xF3E8,	0x00A5,	0x0D94,	0x096D,	0xF978,
        0x0303,	0x0E72,	0xFB1E,	0xFB70,	0xFC64,	0x0B7B,	0xFBE7, 0x0CD0,	0xF6C1,	0x0D26,	0xF8B7,	0x05E0,	0xFD7B,	0xF4F3,
        0x046E,	0x0B86,	0xF673,	0x07FF,	0x0693,	0x060D,	0xFCDE, 0x0B3F,	0x00E7,	0xF953,	0xF9B5,	0xF6A6,	0x0179,	0xFF2A,
        0x0E17,	0x0103,	0xF1DB,	0xF202,	0xFA7B,	0xF2C8,	0xF957, 0x07AA,	0xF534,	0xF420,	0x0788,	0xF7D7,	0xFCD7,	0x0C1B,
        0xFAEB,	0x0CD1,	0x0867,	0x0A78,	0xF999,	0x0EB7,	0xFBF8, 0xF31F,	0xFE2F,	0x0913,	0xFF42,	0xFA13,	0xF73B,	0x07AE,
        0xF4C5,	0xF866,	0xF3BE,	0x0314,	0xF2C8,	0x01AC,	0xF4F4, 0xF876,	0xF930,	0x08F9,	0x082C,	0x0027,	0x0600,	0x0566,
        0xF96E,	0x0AAD,	0x0327,	0xFA8F,	0x0D68,	0xF55B,	0x03D8, 0x0CFC,	0xF4AB,	0xF63D,	0xFC58,	0xF3D7,	0x0EB5,	0x08E6,
        0x0E08,	0x0D33,	0x0058,	0x0840,	0xF1DF,	0x085C,	0xFE40, 0x06EB,	0x0EA8,	0x00E8,	0x055A,	0x0E67,	0xFAE6,	0x0196,
        0x0470,	0x0D94,	0xF2C2,	0xF2BE,	0xF6DC,	0xF7A6,	0xF79E, 0xF116,	0xF5F7,	0xF5C8,	0x0D28,	0x0C1D,	0x09F3,	0xF7C6,
        0x05D5,	0xFDE5,	0xF285,	0xF97B,	0x098A,	0xFAD3,	0xFBA3, 0x0106,	0x08B9,	0xF2EE,	0xFA19,	0x0C8A,	0xFC5D,	0xF938,
        0x002F,	0xF9BC,	0xF461,	0xF536,	0xF713,	0x090E,	0x08FD, 0xF786,	0x003A,	0x0C50,	0x021A,	0xF676,	0x01C7,	0x09BB,
        0xF4F7,	0xF1E6,	0x0E9E,	0x089A,	0x02FB,	0x01EE,	0xF39F, 0xF15B,	0xFA11,	0x061D,	0x077A,	0xF49D,	0xFB30,	0x01F5,
        0x05F4,	0x0CDE,	0x01BE,	0xF9C1,	0x0A66,	0x0181,	0x055A, 0xF948,	0xF50C,	0xF42E,	0xFB3B,	0x0E24,	0xF88D,	0x0456,
        0x0EA0,	0x01E1,	0x06B7,	0xFCB3,	0x0690,	0xFEF0,	0x00F6, 0x0696,	0xF411,	0xFA1E,	0x041B,	0x08BD,	0x0454,	0x09FA,
        0xF750,	0xF5FD,	0x04F7,	0x0133,	0xF2D0,	0xFC9A,	0xFBF3, 0x0158,	0xFF22,	0xF315,	0xF430,	0x0EAC,	0xF60A,	0x0D6A,
        0xF863,	0xF7DF,	0x0461,	0xF67E,	0x0B4F,	0x0809,	0x00A3, 0xF7F7,	0xF205,	0xF254,	0xF8A3,	0x0C40,	0xFA79,	0xF54E,
        0x0244,	0xFFF9,	0xFEF5,	0xFC96,	0xFABD,	0x0C9A,	0xF5B3, 0x04ED,	0xF7D4,	0xFC7B,	0x04A9,	0x00A0,	0xFD17,	0x0AE4,
        0x03EE,	0x0E55,	0x0D25,	0x0E34,	0x0EC3,	0x0431,	0xF386, 0xFEF0,	0xF2F9,	0xFCB0,	0xF18F,	0x049A,	0x0782,	0xF7B5,
        0xFE93,	0xF44C,	0x054E,	0xF6DE,	0xF6B6,	0xFBA5,	0x0E3C, 0xFDDD,	0x00AF,	0x02B3,	0xF4FD,	0xFC63,	0xF70C,	0xFD53,
        0xF2A7,	0xFB2C,	0xFE4C,	0x0434,	0x0E08,	0xFE3D,	0x0DAD, 0xFC9D,	0xF842,	0xF3F6,	0x004B,	0x0C51,	0xF7C4,	0xFE8E,
        0xFD51,	0x0748,	0xF47E,	0xF910,	0x05D1,	0xF9C0,	0x01DB, 0xFAA0,	0x088B,	0x09C8,	0xFE56,	0x0DCD,	0x053F,	0xFB13,
        0xF7A3,	0x0A38,	0xFF7B,	0x0323,	0xFF64,	0x0625,	0x0892, 0x036A,	0x0567,	0xFD00,	0x037D,	0x017E,	0xF9C5,	0x0295,
        0x0DBD,	0xF122,	0x0EB6,	0x0E8C,	0x04EF,	0xF593,	0xF334, 0xFFE3,	0x061D,	0xF23D,	0x01A4,	0xF5C1,	0x081D,	0x0C24,
        0x0A5B,	0xF969,	0x0066,	0x0B77,	0xFED6,	0xF932,	0x060D, 0xFEA7,	0x0B17,	0xFF1F,	0xF9AE,	0xF844,	0x0CA0,	0x0CCC,
        0x05EF,	0xFFA4,	0xF450,	0x00E9,	0xF403,	0xF307,	0xFCB3, 0x0B84,	0xFF94,	0xF145,	0xF517,	0xF537,	0x07D3,	0x0A49,
        0x0B82,	0x08C5,	0xFCA4,	0xF29C,	0xF6C2,	0xF31B,	0xF177, 0xFDD5,	0x0801,	0xFB97,	0xFA4A,	0x0557,	0x0BF6,	0x019C,
        0x03E2,	0x043C,	0xF64A,	0x0AEE,	0x0B6F,	0x0E34,	0x048F, 0xFFD0,	0xF432,	0x0C7B,	0x0E30,	0x0274,	0xF70E,	0x00E9,
        0xF67E,	0x0AFF,	0x0CF7,	0xFCE3,	0xFB85,	0xF861,	0x06D3, 0x089A,	0xF6E8,	0xF31D,	0xFC93,	0x0971,	0x089B,	0xF7CB,
        0xFAD6,	0x097B,	0x0379,	0x09C1,	0x0940,	0x0011,	0x068C, 0xF8B5,	0xF9AA,	0xF29C,	0x04FC,	0xFB56,	0xFA0A,	0x05D5,
        0xFA60,	0x0CD3,	0xF5DA,	0xF3EF,	0xF95E,	0x06E1,	0xFE12, 0x0157,	0x0845,	0xFBC4,	0xF3BA,	0xF494,	0x0387,	0x0902,
        0xF72B,	0x0BBF,	0xFED4,	0x0247,	0xFECA,	0xF4BF,	0x0458, 0x0EB1,	0x097E,	0xF826,	0x0018,	0x07FC,	0x0A9C,	0xFC70,
        0x010E,	0xFE10,	0x04CA,	0xF561,	0x0D64,	0xFDC9,	0xF958, 0x02A1,	0x0DBF,	0x0380,	0xF946,	0xF5EA,	0x03C3,	0x0790,
        0xFEB4,	0x0384,	0x0190,	0xF909,	0xF57B,	0xFD7D,	0xF275, 0x04C5,	0xF4C1,	0x0B4D,	0x05A4,	0xF6F3,	0x01E4,	0x099A,
        0x0CAF,	0x0D0F,	0xFBBC,	0x01C9,	0xF43B,	0xF565,	0xF78E, 0xFAA7,	0x06C9,	0x02E3,	0xF2E4,	0x0C3C,	0xFC84,	0xFAD4,
        0x029F,	0x0292,	0x0077,	0x0DB0,	0x0871,	0x0E3A,	0xF9B2, 0xF3B3,	0x0D29,	0x04C7,	0xF8E9,	0xFB4E,	0xF91F,	0x0320,
        0x06A5,	0x0312,	0xF132,	0xF277,	0xFAB1,	0x02AB,	0xFE37, 0x0909,	0xF111,	0xFDCD,	0xF355,	0x0D23,	0xFA2A,	0xF4AB,
        0x027B,	0x047D,	0x069A,	0x0DCA,	0xF19F,	0x0A53,	0x00CC, 0xF11B,	0x046A,	0x0E78,	0x0BF9,	0xF3AE,	0x0935,	0xFE4B,
        0xFC1F,	0xF70B,	0x06DF,	0xF6A0,	0x0CE2,	0x012B,	0xFB47, 0xFE96,	0x0347,	0x0CFC,	0xF7D4,	0x09F6,	0x0560,	0xF39C,
        0x0DE1,	0xFFC8,	0x01BF,	0x0D10,	0xFD23,	0x0472,	0x094B, 0x082D,	0xF75A,	0x09DA,	0xF93D,	0x0E56,	0x0708,	0x0DDF,
        0x0E81,	0x043B,	0xF97E,	0xF785,	0x0871,	0xF592,	0xFA20, 0xFD33,	0x08B3,	0xF6FE,	0x0D69,	0x0D11,	0xF1A3,	0x0638,
        0x023D,	0xF27E,	0x096A,	0xF3DD,	0x031C,	0xF494,	0x0B7F, 0xF609,	0x0358,	0xFE4D,	0x0366,	0xF869,	0x0312,	0x07F7,
        0x0468,	0x01F8,	0x0469,	0xFF2B,	0xFD29,	0x08AF,	0x029E, 0xF863,	0xF21B,	0xF888,	0xF292,	0x06C3,	0xF446,	0x0157,
        0xFEF3,	0xF903,	0xF608,	0xF757,	0x08AE,	0xF495,	0x08F4, 0x0D59,	0x0AE2,	0x0D4D,	0x0520,	0xFD24,	0x0D21,	0x0C6E,
        0x0520,	0xF9FC,	0x0531,	0xF65F,	0x0653,	0x03C4,	0xF6AD, 0x0A78,	0xFBAD,	0xFBD3,	0x0AD4,	0x06BE,	0xF49B,	0x0974,
        0xF69C,	0x0E9D,	0xFD1A,	0xFA51,	0x0DE2,	0x047D,	0x0716, 0x07E3,	0xFBCA,	0xFE6F,	0x0EA9,	0xFD2E,	0xF3A1,	0xF144,
        0xFCA8,	0x0A8A,	0xFBB4,	0xF239,	0x0C88,	0xF47D,	0x0DCC, 0x0E83,	0xF6A8,	0xFE37,	0x05AB,	0x0E75,	0xF99A,	0x0594,
        0x0BA2,	0xFBF9,	0x00C2,	0x00A9,	0x0D10,	0x045E,	0xFECF, 0xF9D3,	0xF983,	0x0101,	0xFBD5,	0xF9BC,	0x0288,	0x0CBF,
        0x074B,	0x0AF9,	0x0277,	0x0683,	0xF331,	0xF77B,	0xFDD0, 0xFAE9,	0x011B,	0x08A6,	0xF71F,	0x0939,	0x0AC3,	0xFA7D,
        0x0EB2,	0x0862,	0xF22B,	0x00E1,	0xFD6D,	0x0101,	0x0747, 0x0A55,	0x02E0,	0xFC4F,	0xFA61,	0x0553,	0x0E4C,	0x0D33,
        0x065A,	0x028C,	0xFB53,	0xF7A9,	0xF47F,	0x030F,	0x03C0, 0x08E5,	0x00B9,	0xF4FF,	0x0697,	0xF615,	0xFCE4,	0xF33F,
        0x0769,	0xF1D6,	0xF63F,	0xFB00,	0xF622,	0xFFC5,	0xF63D, 0xF9A0,	0xF77E,	0x0374,	0xF9CE,	0x0925,	0x053E,	0xF90A,
        0x07E8,	0x06E1,	0xF1FE,	0xFBCE,	0xFF01,	0xF941,	0xF695, 0xF35E,	0xFD1C,	0xF9C4,	0xF6C6,	0xF3F7,	0x08F5,	0xF2B4,
        0x0CC1,	0xFF57,	0x0E71,	0x0A6B,	0x0B64,	0xFE87,	0xF241, 0xFFD9,	0x0948,	0x093F,	0x0E95,	0xF482,	0x0079,	0xFAEC,
        0xFD77,	0x090B,	0x0E75,	0x0A8F,	0xF1B1,	0x07FA,	0xF285, 0xFB93,	0x01BD,	0x063C,	0x04E4,	0xFCB6,	0x0CEB,	0x0715,
        0xF736,	0x0BE7,	0xFDF7,	0x0570,	0x0B13,	0x0729,	0xF623, 0x05B9,	0xF4DE,	0xFCB9,	0x0796,	0xFCE5,	0x08DB,	0xF19E,
        0x018A,	0x0B19,	0xF436,	0xF188,	0xF8E5,	0xF3DB,	0xF40F, 0xF85B,	0x0373,	0x0878,	0xF306,	0xF974,	0x0A1F,	0xF3D9,
        0xFCDD,	0xFAA6,	0xF729,	0xF653,	0xF5AC,	0x02AC,	0x0CF3, 0x0D2C,	0xF4CB,	0xF9E5,	0x0CB9,	0xF3FA,	0xFFE0,	0xF3FC,
        0x08ED,	0xF674,	0x03C8,	0x0EBE,	0x064E,	0xF89E,	0xF111, 0xF226,	0xFDD4,	0xFE0C,	0xF305,	0xFBFC,	0x04D4,	0x0732,
        0x04D6,	0xF8F8,	0xFED5,	0x07F2,	0xF7A4,	0xF636,	0xFFEA, 0xF344,	0xFA2C,	0xFA4E,	0x0937,	0xFF55,	0xF857,	0x0892,
        0x0C8F,	0xFC68,	0xF251,	0xF31A,	0x0EBE,	0xF32D,	0xF78E, 0x03CB,	0x02AE,	0x0465,	0xF39C,	0x073D,	0xF361,	0xF9B5,
        0x0044,	0x0E20,	0x0ED7,	0x00FC,	0x0700,	0xFE7F,	0xFFE9, 0x072A,	0x078B,	0x0652,	0x0EEC,	0xF14C,	0xF261,	0x0CC9,
        0xF7A5,	0x0CA3,	0x08C3,	0x0C00,	0x0BE5,	0x03A0};

#endif //SKELYA_KEM_ENCRYPT_CONST_H
