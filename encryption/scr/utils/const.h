//
// Created by Maria on 3/31/2019.
//

#ifndef SKELYA_KEM_ENCRYPT_CONST_H
#define SKELYA_KEM_ENCRYPT_CONST_H

using namespace std;

typedef unsigned char byte;

class Const {
public:
    //input
    const int n = 881;
    const byte t = 159;
    const int q = 7673;
    const int qBit = 13;
    const byte p = 3;
    const int EncMsgLenBytes = 1432;
    const int maxMsgLenBytes = 132;
    const int db = 256;
    const byte bufferLenBytes = 165;
    const byte octL = 1;
    const std::vector<byte> OID{0x00, 0x00, 0x01};

//output
//keyGeneration
    const int k = 256;
    const int polynomialGFSize = 881;

    const std::vector<int> G{1,  1, 0,	 1,	 1,	 0,	 1,	 0,	-1,	 1,	-1,	 1,	1,
                0,	 1,	-1,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	-1,	 0,	 1, -1,	-1,	 1,	 0,	-1,	-1,	-1,	 1,	 0,	 0,	 0,	 1,	 0,
                -1,	 1,	-1,	-1,	-1,	 0,	 0,	-1,	-1,	 0,	-1,	 1,	 1,  1,	-1,	 1,	-1,	-1,	-1,	-1,	 1,	 1,	 0,	 0,	 0,	-1,
                -1,	 0,	 0,	-1,	-1,	 1,	-1,	-1,	-1,	 1,	 0,	-1,	 0,  0,	 1,	 1,	-1,	 1,	-1,	-1,	 0,	 1,	 0,	 1,	-1,	 1,
                1,	 1,	 1,	 0,	 1,	 1,	 1,	 0,	-1,	 0,	 1,	 0,	 1, -1,	 0,	 1,	-1,	 0,	 1,	 0,	-1,	 1,	-1,	 1,	 0,	-1,
                1,	-1,	 1,	 1,	 1,	 1,	 1,	-1,	 0,	-1,	-1,	-1,	 0,  1,	 0,	 0,	 1,	-1,	 1,	-1,	 1,	 0,	-1,	-1,	 0,	 0,
                -1,	 0,	 0,	-1,	-1,	 0,	-1,	 1,	 1,	 0,	-1,	 0,	 0,  0,	 1,	 0,	-1,	-1,	 1,	 0,	 0,	 0,	 0,	 1,	 1,	 0,
                1,	 1,	 0,	-1,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 1,	-1,  1,	-1,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 1,	 0,	 0,	 1,
                1,	-1,	-1,	 0,	 1,	 1,	-1,	-1,	 1,	 1,	 0,	-1,	 0,  0,	 1,	 1,	-1,	 1,	 1,	 0,	-1,	 0,	 1,	 0,	 1,	 1,
                -1,	 0,	-1,	 1,	 0,	 0,	 1,	 0,	-1,	 0,	-1,	-1,	 0,  0,	 0,	-1,	 0,	 0,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	-1,
                1,	 1,	-1,	 0,	 0,	-1,	 0,	 1,	 1,	 1,	-1,	 0,	-1,  0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 1,	 0,	 0,
                1,	-1,	-1,	 0,	 0,	 1,	 1,	-1,	 1,	-1,	-1,	-1,	-1, -1,	 1,	 1,	 1,	 1,	 1,	 0,	-1,	-1,	 1,	 1,	-1,	 0,
                1,	 1,	-1,	 1,	 1,	 1,	 1,	-1,	 0,	 1,	 0,	-1,	 0,  0,	 1,	 0,	 1,	 1,	 1,	-1,	-1,	 1,	 0,	-1,	 0,	 0,
                0,	-1,	-1,	 1,	 0,	 0,	-1,	 1,	-1,	 1,	 1,	 1,	 0, -1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 1,	 1,	 1,	-1,	 1,
                1,	-1,	 0,	 1,	-1,	 1,	 0,	 0,	 1,	-1,	 1,	 0,	-1, -1,	 1,	-1,	-1,	-1,	 0,	 0,	 0,	 0,	 1,	 1,	-1,	 1,
                -1,	 1,	 0,	 1,	 1,	-1,	-1,	 0,	 0,	 1,	-1,	-1,	-1,  0,	 0,	 1,	-1,	 0,	-1,	 1,	 1,	-1,	 0,	 0,	 0,	 0,
                0,	-1,	 0,	 1,	 0,	 0,	-1,	-1,	 1,	 1,	 1,	-1,	 1,  1,	 0,	 1,	-1,	 0,	 0,	-1,	-1,	 1,	-1,	 0,	-1,	-1,
                1,	 1,	 0,	-1,	 0,	-1,	-1,	 1,	 0,	 0,	 1,	-1,	-1, -1,	 0,	 0,	 0,	 1,	-1,	 0,	-1,	 0,	 0,	 1,	-1,	 1,
                0,	-1,	-1,	-1,	 0,	 1,	 1,	-1,	 0,	 1,	 0,	 1,	-1,  1,	-1,	 1,	 1,	 1,	 1,	 1,	-1,	-1,	-1,	 0,	 1,	 0,
                1,	 1,	 0,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	 0,	-1,	 0, -1,	 1,	 1,	 1,	 0,	 1,	 0,	 1,	-1,	-1,	-1,	-1,	 1,
                -1,	 1,	-1,	-1,	-1,	-1,	 0,	 0,	 1,	 0,	-1,	-1,	 1, -1,	 1,	 1,	 1,	-1,	-1,	 1,	-1,	 1,	 0,	 1,	-1,	 1,
                1,	 1,	-1,	 1,	 0,	 1,	 1,	-1,	 0,	 0,	-1,	 1,	 0,  1,	 0,	-1,	 1,	 1,	-1,	-1,	-1,	 1,	 1,	 1,	 0,	 0,
                -1,	 1,	-1,	-1,	 0,	 0,	-1,	-1,	-1,	 1,	 1,	-1,	 0,  0,	-1,	-1,	 1,	-1,	-1,	-1,	-1,	 0,	 0,	 0,	 0,	-1,
                1,	-1,	 1,	-1,	 1,	 1,	 0,	 0,	-1,	 0,	 1,	-1,	 0, -1,	-1,	 1,	-1,	 1,	 1,	 0,	 1,	 1,	 0,	 0,	 1,	 0,
                0,	 1,	 0,	 1,	 1,	-1,	 0,	-1,	-1,	 0,	-1,	-1,	 0,  1,	 0,	-1,	-1,	 0,	 1,	 1,	 1,	-1,	-1,	-1,	 0,	 1,
                1,	 1,	-1,	 1,	 0,	 1,	-1,	 0,	-1,	-1,	 0,	-1,	 0, -1,	 1,	-1,	-1,	 0,	 1,	-1,	-1,	-1,	-1,	-1,	-1,	 0,
                0,	 0,	 0,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	-1,	 0,	 1,  1,	-1,	 1,	-1,	 1,	 0,	-1,	 1,	-1,	-1,	 0,	 1,	 0,
                0,	-1,	-1,	 1,	 1,	 0,	-1,	-1,	 1,	 1,	 0,	-1,	 0, -1,	 1,	-1,	 0,	-1,	 0,	 0,	-1,	 0,	-1,	 0,	-1,	 0,
                0,	 1,	 0,	-1,	-1,	 1,	-1,	 1,	 0,	 0,	 1,	 1,	 1,  1,	 0,	 0,	-1,	-1,	 0,	 1,	 1,	 1,	 0,	-1,	-1,	 0,
                1,	 0,	 1,	 0,	 1,	 1,	 1,	 0,	 0,	 1,	 1,	 1,	 0, -1,	-1,	 1,	 1,	-1,	-1,	-1,	-1,	 0,	-1,	-1,	 0,	 1,
                1,	 1,	 1,	 0,	 0,	-1,	 0,	-1,	 0,	-1,	-1,	-1,	 0,  0,	 0,	 1,	 1,	 1,	-1,	-1,	 0,	 0,	 1,	 0,	 0,	 1,
                -1,	-1,	 1,	 0,	-1,	 0,	 1,	 1,	 0,	 1,	 1,	 1,	 0, -1,	-1,	 0,	 0,	 0,	-1,	-1,	 0,	 0,	 1,	 0,	 0,	 0,
                0,	 0,	-1,	 0,	 1,	 0,	 1,	-1,	-1,	 0,	 1,	-1,	 0,  0,	 1,	-1,	-1,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	-1,	 0,
                1,	-1,	-1,	-1,	-1,	-1,	 0,	 0,	-1,	-1,	-1,	-1,	-1, -1,	-1,	-1,	 1,	 1,	-1,	 0,	-1,	-1,	 0,	-1,	-1,	 0,
                1,	-1,	 0,	 0,	 1,	 1,	 0,	-1,	 0,	-1};
    const std::vector<int> F{-1, -1, 0, 0,	 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	 1,	-1,	 0,	-1,	 0,	 0,	 0,	 0,	 0,	 0,  0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,
                1,	 0,	 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,  0,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	-1,	 0,	 0,
                0,	 0,	-1,	 1,	 0,	-1,	-1,	-1,	 0,	 0,	 1,	 0,	 1,  0,	 0,	 1,	-1,	 0,	 0,	 1,	 1,	 0,	 1,	-1,	 0,	 0,
                0,	 0,	-1,	 1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 0,	 1, -1,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	-1,	 0,	-1,
                0,	 0,	 0,	 1,	-1,	-1,	 0,	 1,	 0,	 0,	 1,	-1,	 0,  0,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,
                -1,	-1,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	-1,	 0,	-1,	 1,
                0,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,  0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,
                0,	-1,	 0,	-1,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,  1,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,
                1,	-1,	 0,	 1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 0,	-1, -1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	-1,
                0,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	 1,	 0,	 0,	-1, -1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 0,
                -1,	 0,	 0,	 0,	 1,	 0,	 1,	 1,	 1,	 0,	 0,	 0,	 1,  0,	 0,	-1,	-1,	 0,	 0,	-1,	-1,	 0,	 1,	 0,	 1,	 0,
                0,	 1,	 0,	-1,	 1,	-1,	 0,	 0,	 0,	 0,	-1,	 0,	 1, -1,	 0,	-1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 1,	 0,
                1,	 1,	 0,	 0,	-1,	 0,	 1,	 0,	 1,	 1,	 0,	 0,	 1,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 1,
                0,	 1,	 0,	 1,	 0,	 1,	-1,	 1,	 1,	 0,	-1,	 0,	 0,  1,	-1,	 0,	-1,	 0,	 0,	 1,	 1,	 0,	 0,	 1,	 1,	 0,
                0,	 0,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	 0,	 1,	 0,  0,	 0,	 0,	 0,	 1,	 0,	 0,	 1,	-1,	-1,	 1,	 0,	-1,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0, -1,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,
                0,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 1,  0,	 0,	-1,	 0,	 1,	-1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,
                -1,	 1,	 0,	 0,	 1,	 0,	-1,	 1,	-1,	-1,	 0,	 0,	 0,  1,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 1,	-1,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0, -1,	-1,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	 1,	 0,	 0,	 1,
                0,	-1,	 1,	 0,	-1,	-1,	 0,	-1,	 1,	-1,	-1,	 0,	 0, -1,	-1,	 0,	 0,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 0,
                -1,	 1,	 1,	 0,	 0,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,  0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,
                1,	-1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	-1, -1,	 1,	-1,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,
                0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	 1,	 0,	 0,  1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 1,
                -1,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 1,	-1,	-1,	 0,	 0,  0,	 0,	-1,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	-1,	-1,
                0,	 0,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	 0,	-1,	 0,	 0, -1,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 0,
                0,	 0,	-1,	 0,	 1,	-1,	 1,	 0,	 0,	-1,	 1,	-1,	 0,  0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 1,	-1,	 0,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,  0,	 0,	 1,	 0,	 0,	 0,	 1,	-1,	-1,	 0,	 0,	 0,	 1,
                1,	 1,	 0,	 1,	 0,	 1,	 0,	 0,	 1,	-1,	 0,	 0,	 1,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 0,
                1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1, -1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,
                0,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	 1,	 0,	 0,  0,	 0,	 0,	 0,	-1,	-1,	 0,	 0,	 1,	 0,	 0,	-1,	 0,
                0,	 0,	-1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 1,	 1,	 0,  0,	 0,	 0,	 0,	-1,	 0,	-1,	 1,	-1,	 0,	 0,	 0,	 0,
                -1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1, -1,	 0,	 1,	 0,	 0,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,
                1,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 1,	 0,	-1,	 0,	 0, -1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	-1,	 1,	-1,	 0,
                -1,	 1,	 0,	-1,	 0,	 0,	 0,	 1,	 0,	-1};

    const std::vector<int> h{0x0A49,	0x0E28,	0x0382,	0x0003,	0x06B2,	0xF7F5,	0x033C,
        0x02B1,	0xF46D,	0xF689,	0xF98E,	0xF46B,	0xF574,	0x035C, 0x0605,	0xFB08,	0xFB9F,	0x08F1,	0xF60F,	0x0AF7,	0xFAE0,
        0xFC64,	0xFBD3,	0x0B99,	0xFC17,	0xF81E,	0x0C2A,	0xF40F, 0x01FA,	0x0CB0,	0x09EA,	0x0B8C,	0xF6BA,	0xFCDF,	0x0128,
        0x08B6,	0xF241,	0x0752,	0xFC76,	0xFFA7,	0xF794,	0xFC9E, 0xF526,	0x084F,	0xFE6E,	0x0C6B,	0xF9D9,	0xF6B4,	0x0505,
        0x01D3,	0x08DD,	0x06D3,	0xFCAF,	0xFBC5,	0x0D90,	0x06D5, 0x0D1B,	0xF44F,	0xFE72,	0x031D,	0xF4CA,	0xFDCD,	0xF3BB,
        0x022B,	0xF259,	0x00A3,	0x06F9,	0xF79B,	0xF2B7,	0xF4B5, 0xFFB3,	0x04C5,	0xF7DB,	0xF7B9,	0x063C,	0xFED9,	0x0ADA,
        0xF38F,	0x05AE,	0x057E,	0x031B,	0xF662,	0xFF7E,	0x0762, 0x007C,	0x06BE,	0xF60E,	0xF847,	0x0737,	0xF39C,	0x063C,
        0x01EB,	0x0852,	0x0EE8,	0x007D,	0xFF98,	0xF592,	0x005D, 0x015B,	0x08BE,	0xF541,	0x0C4B,	0xF735,	0x0E45,	0x0109,
        0xF211,	0xFE02,	0x0DB6,	0x09DD,	0x0B8C,	0xF4B0,	0x0BE3, 0x09C2,	0x093F,	0x0E48,	0xFC55,	0xF507,	0x049B,	0xF2F7,
        0xFA5B,	0xFEDF,	0x06BE,	0xF2CE,	0x0E03,	0xF4B9,	0xFBAD, 0xFCD7,	0xFBE9,	0x0C46,	0xFC76,	0x013F,	0xF4B1,	0xFBBA,
        0xF2A3,	0xFAC2,	0xF3EC,	0xF6D0,	0xF87F,	0xF417,	0xF6C9, 0x0A43,	0xFEE8,	0x09DE,	0x07CF,	0xF7E0,	0xF4C0,	0xF25A,
        0xF93B,	0x0BD4,	0x0014,	0xF455,	0xFFFF,	0xF3EE,	0xF3B1, 0xF780,	0x0577,	0x02F6,	0x0802,	0xF274,	0x0BB3,	0xF523,
        0xF460,	0xF756,	0x08B6,	0xF439,	0xFDC9,	0x01E7,	0xF952, 0x0004,	0x0490,	0xFC45,	0x0B0E,	0xFC13,	0xFBDF,	0xFF44,
        0xFBBF,	0x09B3,	0xF46E,	0x05CE,	0x0AA6,	0x0E66,	0xFEC5, 0x0CEA,	0xF685,	0x09BF,	0x009F,	0xFDFC,	0xF83A,	0x03D1,
        0x03AA,	0xFAB7,	0xFA52,	0x0396,	0x09A8,	0xFDBF,	0xF6EA, 0xFDAF,	0xFD50,	0x0ADE,	0x0D99,	0x0CD2,	0x0DBF,	0x0D61,
        0x0D0B,	0x0B3B,	0x0D83,	0xF36F,	0x08C5,	0x07E5,	0xFF50, 0xFD78,	0xF5B6,	0x03EE,	0xF82F,	0x0250,	0xF105,	0x0C04,
        0xF5DD,	0xF3D7,	0x083D,	0xF63E,	0x072B,	0x0611,	0x0EAE, 0x0C16,	0x0D71,	0x0B7E,	0xF4F3,	0x0B28,	0xF9D0,	0x0E84,
        0x098A,	0xF135,	0x08A7,	0x0018,	0x046D,	0x0825,	0x03AD, 0xF8AB,	0x03FA,	0xFFDB,	0xF445,	0xFED1,	0x020C,	0xFEA1,
        0x06E1,	0xF727,	0xF592,	0xFC0E,	0x0684,	0xFE3C,	0x0E51, 0xF948,	0x0DEF,	0xF851,	0x092C,	0x00B1,	0x02EE,	0xFBCA,
        0xF5AF,	0x0CFA,	0x0D34,	0x01B8,	0x0521,	0x0C6B,	0xFCF1, 0x0D69,	0xFF64,	0x0009,	0xF62A,	0xFB00,	0x0370,	0xF22B,
        0xFC49,	0x0276,	0x06C6,	0x07F2,	0x0E42,	0x03CF,	0x04B0, 0x03A7,	0x0294,	0x01D2,	0x0562,	0xF184,	0x08B6,	0x0E3C,
        0xFC66,	0xF623,	0x0AC0,	0x0CE1,	0xFC5A,	0xFE79,	0x01D4, 0x005B,	0x080B,	0x0DA1,	0x00BE,	0xFF99,	0x032E,	0x005A,
        0x03DC,	0xF320,	0x09A6,	0xF22E,	0xFF67,	0x0DE3,	0xF162, 0xF648,	0xF807,	0xF72A,	0xF2CF,	0xF9B5,	0xFA6A,	0x031E,
        0xFD69,	0x0456,	0x0443,	0xF6B8,	0xF5B1,	0x03D1,	0x0623, 0x05E3,	0xF2F9,	0x0190,	0x016C,	0xFC84,	0xF6DB,	0x0096,
        0x088E,	0x0384,	0x0189,	0x076E,	0x0B9F,	0xF331,	0xF22B, 0xFDF9,	0x013A,	0xF5FB,	0xF438,	0xFCC8,	0x07F4,	0x0B4E,
        0xF695,	0xF480,	0x02C7,	0x03EA,	0x07E3,	0xF938,	0x0BC1, 0x0395,	0xF7D6,	0x0129,	0x094B,	0xFD10,	0xFAC6,	0x0EE9,
        0xF8C2,	0x0404,	0x0083,	0x0D69,	0x07BB,	0x0556,	0x007E, 0xFEB7,	0xF79F,	0xF1C8,	0x06AC,	0xF727,	0x020F,	0xF4C7,
        0xF5A4,	0xF620,	0x05AC,	0x0BD2,	0x01A0,	0xF8F3,	0xF867, 0xFAC6,	0xF149,	0x0C26,	0xF3E2,	0x0D64,	0x03CB,	0xF423,
        0x0732,	0xF15F,	0x0951,	0x0756,	0xFFEB,	0xF690,	0x0BEA, 0x0655,	0xF6BA,	0xFE7D,	0xF9F0,	0xFCE3,	0xF6F5,	0xF1E2,
        0x07A3,	0xF190,	0xFB27,	0xFD83,	0xFBCE,	0xFBF0,	0xF1CB, 0xF494,	0x0D54,	0xFA4A,	0xF59E,	0xFE43,	0x0860,	0xF9A0,
        0x0038,	0x0371,	0xFAD6,	0xF200,	0x017B,	0xFE73,	0xF4B8, 0xF749,	0xF1C9,	0xFF48,	0xF900,	0x02B1,	0x012D,	0x0609,
        0xFBD5,	0xFDFC,	0x0E06,	0xF118,	0xFE61,	0xFB11,	0xF6A5, 0xF33F,	0xF6EA,	0x0437,	0xFDE2,	0xFF1B,	0x0168,	0x03CA,
        0xFD07,	0x04BE,	0x0614,	0x0108,	0xF5A2,	0x0798,	0x06B4, 0x00A1,	0x0C55,	0xFF23,	0xFB8E,	0x0571,	0x088A,	0xFBDB,
        0xF319,	0xF127,	0x03D3,	0x0742,	0xF760,	0x0E68,	0x0121, 0x0A13,	0x0699,	0xFC56,	0xF252,	0x09B3,	0xF158,	0x0901,
        0x0694,	0x0BC1,	0x0508,	0x02C6,	0x04B1,	0x011E,	0x0313, 0x07F7,	0xFB28,	0x049D,	0x0E33,	0xF38A,	0x0571,	0xF7C0,
        0x04D0,	0xF1E2,	0x06EF,	0x0692,	0xFE87,	0xF335,	0x015D, 0xFD11,	0xFFFE,	0xFBB9,	0xF85D,	0x0565,	0x055C,	0x0465,
        0xFC92,	0xFF12,	0xF827,	0x017B,	0xFFA1,	0x03E3,	0x0E7D, 0xF195,	0x053F,	0x0214,	0x0398,	0x0946,	0x0ED4,	0xF106,
        0xF252,	0xFA33,	0x0DCD,	0xF5B2,	0x0811,	0xF76F,	0x04B1, 0x0C90,	0x0637,	0x0370,	0x0E08,	0xF4D5,	0xFBC5,	0x0559,
        0x08A2,	0x0D9E,	0x0B48,	0xFB79,	0x08D9,	0xFC05,	0x07E7, 0x040B,	0x07B5,	0xF136,	0x01DE,	0xF923,	0x0E92,	0xFA0C,
        0xFC17,	0xFE92,	0xF92C,	0x028E,	0x03DB,	0x0D46,	0xF8BB, 0x014D,	0x0808,	0xF881,	0xF8B8,	0xF313,	0x0051,	0xF404,
        0xFB00,	0xFBA4,	0xF9F6,	0xFF41,	0xF530,	0x0D23,	0x07BC, 0x0674,	0x045D,	0xF8EA,	0x06DE,	0xF84F,	0xF2E2,	0x0AEF,
        0x026E,	0x0741,	0xFDEF,	0xF41B,	0xF9E9,	0x0EB4,	0x0C0E, 0x0819,	0x0930,	0x071D,	0xF4A0,	0x07E3,	0x00E2,	0x0298,
        0x0B68,	0xF5D1,	0xF933,	0x02BB,	0xFD0E,	0x083F,	0xFC38, 0xF1BE,	0xFEAC,	0x02B5,	0xF491,	0xF152,	0xFDE1,	0xF490,
        0xFA96,	0x0AEA,	0xFF99,	0x05A7,	0x0922,	0xFCEC,	0xF6FA, 0xFFEA,	0x0D7C,	0xFE7F,	0x0D04,	0x02A0,	0x0AA5,	0xF995,
        0x0393,	0x0D2D,	0xF72F,	0xF7DC,	0xF8D6,	0x08D9,	0xFD5E, 0x003D,	0xFDBB,	0xFDF5,	0xFC2D,	0x05CD,	0x0CBE,	0xF854,
        0x07FB,	0x003D,	0xF7DB,	0x07F8,	0xF726,	0xF6D4,	0x05B6, 0xF18F,	0xF163,	0xF428,	0xF792,	0x02E8,	0x0A74,	0x0996,
        0x01CB,	0x06DF,	0x066B,	0x042B,	0xF3FF,	0xF404,	0x0843, 0xF7F9,	0x0E8D,	0xF750,	0x0EA9,	0x0D0B,	0x0CEE,	0x0394,
        0xFE07,	0x0A8C,	0xF2CF,	0xF2B1,	0x071C,	0xF17D,	0x0579, 0xFD96,	0x0523,	0xF3DA,	0x04B6,	0x086A,	0xFE95,	0x06E2,
        0xF64E,	0x09F4,	0x04D5,	0x04A8,	0xFA93,	0x01C9,	0x0186, 0x097A,	0x07AE,	0xFE2D,	0xF6F5,	0xFF28,	0x087E,	0x06B9,
        0x09D1,	0xFB05,	0xF958,	0x0245,	0x0692,	0xFFC4,	0x081F, 0x0AD3,	0xF23D,	0x0251,	0xFA5D,	0x0BEB,	0xF630,	0x0C08,
        0x0884,	0x0E09,	0xFA97,	0x0940,	0xF61B,	0x0C16,	0xFA5F, 0x00B7,	0xF70C,	0x0E60,	0x02C9,	0xFAF2,	0x016A,	0x072F,
        0x0E5E,	0xFA8A,	0xF98B,	0xFC50,	0x0053,	0x0B92,	0xF210, 0x0E37,	0xF7AE,	0xF235,	0xFF76,	0xF279,	0x0550,	0x0CA3,
        0xFFEC,	0xF5F5,	0x0C3E,	0xFA78,	0xFDA2,	0x02E8,	0x0AB2, 0xFC81,	0x0370,	0xFA84,	0xFDF2,	0xFAF4,	0x0B98,	0xFB5D,
        0xF132,	0xFE07,	0xFB13,	0x0968,	0x03CA,	0x01F1,	0xF8B7, 0x0606,	0x0831,	0x0DEC,	0x0B00,	0x0735,	0xF8F3,	0x0547,
        0xFDCB,	0x0648,	0x0D9D,	0xF5FC,	0xF7E6,	0x0238,	0x0C53, 0x0DF5,	0x0BCC,	0x0535,	0x00D0,	0xF2E1,	0xFA97,	0x022A,
        0x0DD4,	0x0873,	0x04D2,	0x091C,	0x0553,	0xF213,	0xFE4F, 0xF1CC,	0x0081,	0xF996,	0x073E,	0xF202,	0xF242,	0x002C,
        0xFC66,	0xFE12,	0x0B28,	0xF469,	0x0C86,	0xF3EB,	0x01C9, 0xFE80,	0xFBF1,	0xFDBA,	0xF8AB,	0xF7D3,	0xF285,	0xF811,
        0x084A,	0xF514,	0x06E6,	0x007B,	0xF4CB,	0xFE6F,	0xFAEB, 0x0396,	0x0852,	0xF513,	0xFB3E,	0xF564,	0xF924,	0xF41B,
        0x0DF6,	0x02B8,	0xFBAC,	0xF236,	0x02BD,	0xF19F,	0xFBF4, 0x0C84,	0x04B0,	0x0D6F,	0xF226,	0x0E9A,	0xF525,	0x0583,
        0xF64F,	0x0142,	0xF1EF,	0x097F,	0xF70F,	0xFDEC,	0x0B81, 0x02BE,	0xF7E7,	0xF31F,	0xF7DF,	0xF919,	0x0A02,	0xFF7C,
        0x00A5,	0xF911,	0x0604,	0x0147,	0x0407,	0xFE20,	0x092E, 0xF14A,	0xFA2D,	0xFC4D,	0xF4E4,	0x0693,	0xF4D3,	0x0E59,
        0x0410,	0x06F4,	0x0497,	0xFA80,	0xFD53,	0xF66C,	0xF202, 0x0473,	0x05CC,	0xFEC4,	0x06F5,	0xFD27,	0xF506,	0x080A,
        0xFD07,	0x0ECA,	0x0781,	0x0AB5,	0x058B,	0x09BC,	0xFDCA, 0x03F2,	0xF6B3,	0xF4E1,	0xF5CA,	0x0458,	0x0850,	0x01E5,
        0x0C3E,	0x0717,	0xFB6F,	0x0E7B,	0x081D,	0x079D};

    const std::vector<int> h_{0X52,	0X4B,	0X8A,	0X07,	0X04,	0X00,	0X33,	0X59,	0X57,	0XB8,	0X67,
                               0X82,	0XB1,	0X93,	0X35,	0X20,	0XAF,	0X0F,	0X26,	0X49,	0XB6,	0X8D,
                               0X70,	0XC0,	0XB9,	0X01,	0XCC,	0XC2,	0X3C,	0X68,	0X10,	0XAF,	0X7C,
                               0X6C,	0XE9,	0X77,	0X39,	0X8B,	0X99,	0XD0,	0X85,	0X85,	0XD8,	0X55,
                               0X20,	0X80,	0XFD,	0X32,	0XC1,	0X3D,	0X4B,	0X8C,	0XA5,	0X9E,	0XB6,
                               0X02,	0X50,	0X8B,	0X68,	0X1D,	0X1D,	0X4B,	0X4D,	0XFD,	0XA0,	0XAC,
                               0X6E,	0XA5,	0XE6,	0X3E,	0X84,	0XFE,	0X33,	0XB1,	0XAE,	0XFA,	0X54,
                               0XAD,	0X28,	0X28,	0X74,	0XD1,	0XBA,	0X6D,	0X3D,	0X54,	0X66,	0XF9,
                               0XB2,	0X06,	0XD5,	0X68,	0XDC,	0X92,	0X38,	0XD6,	0X31,	0XD9,	0X61,
                               0XEF,	0X1A,	0X36,	0X82,	0X2B,	0X82,	0X90,	0X28,	0XCD,	0XF3,	0X59,
                               0X48,	0X58,	0X4A,	0XBB,	0XB5,	0X84,	0XC5,	0XAE,	0XA5,	0X6C,	0X8C,
                               0X79,	0XCD,	0X25,	0X6D,	0X46,	0X20,	0XB5,	0XC5,	0X7E,	0X18,	0XDD,
                               0X16,	0XFA,	0XEE,	0X76,	0X20,	0X3E,	0X1A,	0XFA,	0X80,	0XF6,	0X40,
                               0X39,	0XBC,	0X65,	0X4C,	0X78,	0X1E,	0XB4,	0X29,	0X3B,	0XA0,	0X0F,
                               0XBD,	0X91,	0X9C,	0X58,	0X17,	0X42,	0XB6,	0X8B,	0XE9,	0X9D,	0X31,
                               0X2E,	0XA5,	0XCE,	0X45,	0X08,	0X4C,	0X02,	0XB7,	0XF6,	0XDB,	0X64,
                               0XEE,	0XAE,	0X32,	0X55,	0X2B,	0XE3,	0X4E,	0X12,	0X4F,	0XDC,	0X91,
                               0XA4,	0XE9,	0X80,	0X12,	0X6E,	0X1E,	0X18,	0X54,	0XE6,	0XC1,	0XAF,
                               0XA1,	0X8E,	0XE0,	0X39,	0X59,	0X66,	0X9B,	0X5A,	0X19,	0XE2,	0X62,
                               0X36,	0X9B,	0XC2,	0X7F,	0X2A,	0XAC,	0XD9,	0XC2,	0X73,	0X17,	0X71,
                               0XE5,	0XA6,	0X4D,	0X9E,	0X24,	0X21,	0X4C,	0X25,	0X21,	0XF3,	0X85,
                               0X3B,	0XC7,	0XCF,	0XAE,	0XCC,	0XAE,	0X60,	0XA7,	0X73,	0X45,	0XEA,
                               0X00,	0X52,	0X49,	0XDD,	0XF8,	0X8F,	0X3C,	0X6A,	0XAA,	0XF2,	0X57,
                               0X71,	0X7B,	0X20,	0X0A,	0X0D,	0XAB,	0XB3,	0X98,	0XE4,	0X96,	0X6A,
                               0X9E,	0X8B,	0X69,	0X19,	0X6F,	0X08,	0X3C,	0XF7,	0X4B,	0X00,	0X21,
                               0X24,	0X34,	0X7C,	0XB0,	0XED,	0X06,	0X67,	0X63,	0XA7,	0XB9,	0XB8,
                               0X4D,	0X9C,	0X99,	0XCB,	0X9C,	0XAA,	0X67,	0X33,	0X72,	0XF9,	0X9D,
                               0X54,	0X7E,	0X4D,	0XF8,	0X27,	0XF7,	0XEB,	0X63,	0X31,	0XE8,	0X8E,
                               0XAB,	0X16,	0X18,	0X4B,	0X1C,	0XB2,	0X6A,	0X37,	0X71,	0X4E,	0X3D,
                               0XD4,	0X6D,	0X25,	0X5B,	0XCD,	0X99,	0X66,	0X93,	0X6F,	0XDA,	0XC2,
                               0XD0,	0XB5,	0X9D,	0XB6,	0X0E,	0X2D,	0X08,	0XC5,	0X3F,	0X2F,	0X52,
                               0X76,	0XE3,	0X3A,	0XF1,	0XF7,	0X58,	0XA0,	0X4A,	0X0E,	0XFE,	0X60,
                               0X24,	0XF5,	0XA3,	0XA0,	0X83,	0XDA,	0X1B,	0X9C,	0XAC,	0XC2,	0X2E,
                               0XAE,	0X60,	0XB3,	0X5C,	0X56,	0XFD,	0X2E,	0XC5,	0X94,	0X5F,	0X25,
                               0XD0,	0X89,	0X8A,	0X79,	0X72,	0X29,	0XC0,	0X30,	0X46,	0XD4,	0X12,
                               0X8E,	0XB6,	0XD4,	0X83,	0XFA,	0XEE,	0XA4,	0X8F,	0XB9,	0X94,	0X20,
                               0XCE,	0X4D,	0X1B,	0X86,	0XA4,	0X13,	0X8B,	0XD0,	0X39,	0XA1,	0X38,
                               0X6A,	0XE5,	0X1B,	0XA0,	0XB7,	0XBE,	0XC9,	0X49,	0X2C,	0X05,	0X88,
                               0XBB,	0XB3,	0X87,	0X3A,	0X86,	0X7D,	0X34,	0XD0,	0X37,	0X05,	0X21,
                               0X63,	0X5E,	0XBA,	0X9A,	0XD3,	0XD5,	0XD0,	0X04,	0XD0,	0X8F,	0X1F,
                               0X23,	0X70,	0X81,	0X26,	0X90,	0X84,	0XEC,	0X6C,	0X63,	0XF9,	0X39,
                               0X08,	0X79,	0XE4,	0XB0,	0X1D,	0X38,	0XA5,	0X03,	0XA4,	0X56,	0X27,
                               0XBE,	0XA2,	0XD9,	0XC7,	0X9A,	0X5F,	0XA0,	0XE2,	0XB0,	0X19,	0XC3,
                               0XA5,	0X3E,	0X39,	0X07,	0X50,	0X0B,	0X68,	0X0B,	0X6D,	0X08,	0X2F,
                               0XBB,	0X24,	0X32,	0XE0,	0X2D,	0X0F,	0X72,	0X23,	0X29,	0XA6,	0X81,
                               0X3F,	0X58,	0X1B,	0XC6,	0XF5,	0XBA,	0X20,	0XD8,	0X02,	0XA4,	0X70,
                               0XC8,	0XBD,	0X76,	0X18,	0XC6,	0X3D,	0XB6,	0X22,	0X2B,	0X11,	0X0E,
                               0X96,	0X33,	0XAA,	0X1E,	0X89,	0X88,	0XCB,	0XC7,	0X0F,	0X20,	0XC8,
                               0X05,	0XB3,	0X4F,	0XB4,	0XD4,	0X04,	0XB2,	0X23,	0X87,	0X08,	0X18,
                               0X93,	0XB7,	0X2E,	0X7E,	0X25,	0X50,	0X24,	0XDF,	0X90,	0X4E,	0XA7,
                               0XE9,	0X23,	0X1D,	0X60,	0X9F,	0XD1,	0X69,	0XD4,	0X8E,	0X93,	0XC8,
                               0XB1,	0XC7,	0XD4,	0X7E,	0X3B,	0X98,	0XAF,	0X04,	0X72,	0XB5,	0XCF,
                               0X09,	0X4A,	0X52,	0XF6,	0X13,	0X8B,	0XF7,	0X74,	0XDA,	0XEC,	0X80,
                               0X80,	0X83,	0X6B,	0X49,	0XEE,	0XCA,	0XAC,	0X07,	0XEE,	0X58,	0X56,
                               0X61,	0XF8,	0X26,	0XAC,	0XA9,	0X00,	0X83,	0XE5,	0X81,	0X39,	0XDA,
                               0X0C,	0X96,	0XB1,	0X7A,	0X41,	0XA0,	0XB7,	0X65,	0X98,	0X31,	0X7E,
                               0XF4,	0X26,	0X13,	0X47,	0X6D,	0XAC,	0X83,	0XCB,	0X90,	0XE1,	0XCC,
                               0X9E,	0XB0,	0X95,	0X13,	0XAB,	0X77,	0X92,	0X91,	0X2B,	0XEA,	0X32,
                               0XAD,	0X2C,	0XF8,	0XED,	0X7E,	0X9D,	0X6E,	0X53,	0XB9,	0XFB,	0X67,
                               0XA3,	0X7C,	0X4E,	0X48,	0X36,	0XF9,	0X9C,	0X7C,	0XF4,	0XBF,	0X12,
                               0X51,	0XAD,	0X54,	0XC2,	0X1C,	0XE5,	0XF8,	0X78,	0X86,	0X0B,	0XCC,
                               0X80,	0XE0,	0X6E,	0X38,	0XCF,	0X7F,	0XC8,	0X5E,	0XF8,	0XD9,	0X2B,
                               0X1A,	0XA1,	0X3F,	0X0B,	0XA8,	0X36,	0XF9,	0X15,	0X88,	0X4B,	0X4C,
                               0X13,	0X9C,	0XED,	0XFA,	0XB8,	0X19,	0XE2,	0X3C,	0X5A,	0XC8,	0X55,
                               0X27,	0XA2,	0X71,	0X4E,	0X32,	0X1B,	0XEF,	0X6F,	0XA2,	0X81,	0X68,
                               0X1E,	0X56,	0XC0,	0X09,	0X7C,	0X61,	0X40,	0X84,	0X4E,	0X6C,	0XF3,
                               0X06,	0XB4,	0X05,	0X0B,	0X15,	0X7A,	0X39,	0X98,	0X72,	0XB8,	0XA2,
                               0X2B,	0X3A,	0X91,	0X12,	0X79,	0X00,	0XF4,	0XCE,	0X85,	0X55,	0X97,
                               0X34,	0X04,	0X85,	0X42,	0X66,	0X99,	0XD2,	0X7C,	0X12,	0XD3,	0X66,
                               0XF5,	0X14,	0X80,	0X9A,	0X51,	0X78,	0X25,	0X08,	0X16,	0X31,	0X2C,
                               0X42,	0X3C,	0X31,	0X33,	0XFB,	0XE4,	0X84,	0X93,	0XAE,	0X33,	0X8C,
                               0X19,	0X5C,	0X6B,	0X72,	0X4D,	0X07,	0XED,	0X9B,	0XBC,	0XD2,	0X5C,
                               0X80,	0X89,	0X70,	0X57,	0X76,	0X15,	0XDF,	0X7C,	0XD9,	0X59,	0X58,
                               0XAC,	0XA5,	0X5C,	0X23,	0X2E,	0XA2,	0XFA,	0X17,	0X62,	0X00,	0XBD,
                               0XF6,	0X68,	0X7C,	0X6E,	0X7D,	0X7C,	0X71,	0X4F,	0XC4,	0X28,	0X39,
                               0X84,	0XA3,	0X3B,	0X51,	0XDF,	0XF0,	0X4B,	0XC1,	0X63,	0X73,	0X67,
                               0X56,	0X81,	0X1A,	0XB4,	0X12,	0XC5,	0X92,	0X06,	0X37,	0X1B,	0X83,
                               0X82,	0X25,	0X9D,	0X9B,	0XE2,	0XAC,	0XA2,	0X89,	0XB3,	0XCB,	0X48,
                               0XCB,	0X92,	0X36,	0X73,	0XFC,	0X7E,	0X72,	0X05,	0X9E,	0XD5,	0XE5,
                               0XE1,	0XDE,	0XB8,	0XE3,	0XA4,	0XB0,	0X0B,	0XA1,	0X0E,	0X45,	0XDC,
                               0X94,	0X51,	0XC3,	0XDB,	0X6A,	0X35,	0XAD,	0X02,	0X9A,	0X80,	0X8B,
                               0X3D,	0X5A,	0XC6,	0X21,	0X80,	0X51,	0X8F,	0XEE,	0X3E,	0X73,	0X3B,
                               0X7E,	0XFE,	0X9D,	0X4C,	0XA5,	0XA4,	0X67,	0XBC,	0X33,	0XA1,	0X17,
                               0X6D,	0XC6,	0X6D,	0XEB,	0X24,	0X43,	0X6D,	0X5D,	0XE2,	0X6E,	0X3A,
                               0X0E,	0XFA,	0X24,	0X29,	0X7E,	0X27,	0X5A,	0X30,	0X39,	0X03,	0X29,
                               0X30,	0X38,	0XEC,	0XA6,	0X4F,	0XC6,	0X0E,	0X21,	0X4C,	0X2D,	0XA2,
                               0X79,	0X57,	0X2C,	0X15,	0XDE,	0XC1,	0XD0,	0X7F,	0XA3,	0X17,	0XDB,
                               0XF2,	0X94,	0X56,	0XB2,	0X8A,	0X7A,	0X5E,	0XF6,	0XA5,	0X13,	0X88,
                               0XF5,	0X75,	0X76,	0X48,	0XB4,	0XE9,	0X22,	0XD7,	0X2D,	0X3C,	0XFB,
                               0XC6,	0XD7,	0XCE,	0X3C,	0X34,	0X10,	0X54,	0X0A,	0XA5,	0XBC,	0X70,
                               0XE4,	0XDA,	0X5B,	0X52,	0X8A,	0XEA,	0XDB,	0X3D,	0X1B,	0X3B,	0X57,
                               0X01,	0XEE,	0XED,	0X37,	0XDD,	0XA2,	0X62,	0XE6,	0XB2,	0XFA,	0XC9,
                               0XA7,	0XFB,	0X01,	0XED,	0X75,	0X0F,	0XF1,	0X51,	0XFA,	0X66,	0X96,
                               0XD9,	0XF1,	0X0F,	0X5C,	0X91,	0X0D,	0X62,	0XC5,	0XD0,	0XA7,	0X44,
                               0XCB,	0X07,	0X2C,	0XDB,	0XE6,	0X6B,	0X21,	0X5C,	0X7E,	0X23,	0XFA,
                               0X84,	0X3A,	0XF9,	0X3A,	0X36,	0XA9,	0X2E,	0XA9,	0X68,	0X5B,	0X3B,
                               0X87,	0X29,	0XC0,	0X05,	0X46,	0X43,	0X22,	0X15,	0X47,	0X1C,	0X7B,
                               0XB1,	0X5E,	0X77,	0X1E,	0X52,	0X38,	0XE9,	0X92,	0XD9,	0X0D,	0X5C,
                               0X8E,	0X37,	0X15,	0X11,	0XD3,	0XE8,	0X4D,	0X52,	0X54,	0X62,	0X30,
                               0X39,	0X21,	0X86,	0X4B,	0XD1,	0XEB,	0XB8,	0X4D,	0X4E,	0XEE,	0X90,
                               0XA1,	0XF8,	0XD7,	0X29,	0XD1,	0XC7,	0XF5,	0XD4,	0X44,	0X8A,	0X69,
                               0X2E,	0XDE,	0XA0,	0X7D,	0X5A,	0X70,	0X36,	0X12,	0X8E,	0X15,	0X97,
                               0XD7,	0X42,	0X96,	0X04,	0X22,	0X11,	0XC1,	0X38,	0X90,	0X4A,	0X05,
                               0X05,	0X18,	0X2D,	0X85,	0X80,	0X5B,	0XD4,	0X15,	0XCC,	0X02,	0XC9,
                               0XC7,	0X58,	0X5A,	0X8E,	0X5E,	0XE5,	0XEC,	0X41,	0XDE,	0X13,	0X49,
                               0X20,	0X53,	0X5C,	0X94,	0X02,	0X5C,	0X6F,	0X5A,	0X78,	0X17,	0X75,
                               0XBE,	0X0E,	0X45,	0X50,	0X65,	0X1F,	0X79,	0X67,	0XDC,	0XC3,	0XEC,
                               0X38,	0XEE,	0X6C,	0X5D,	0X0A,	0XB2,	0XD3,	0XD0,	0XDC,	0X30,	0XFB,
                               0XBE,	0XBC,	0X76,	0XAE,	0X63,	0X2A,	0XCF,	0X2B,	0XE0,	0X06,	0X43,
                               0X12,	0XD0,	0X3C,	0XA0,	0XF8,	0XDA,	0XC0,	0XC0,	0XC8,	0X31,	0X6F,
                               0X62,	0XC0,	0X0E,	0X6B,	0X6E,	0XC2,	0XA3,	0XEF,	0X10,	0XC9,	0X0D,
                               0X9D,	0X9F,	0XAD,	0X77,	0XC4,	0X70,	0XC5,	0X36,	0XFA,	0XAF,	0X30,
                               0XA6,	0XA0,	0XD0,	0X86,	0XD6,	0X24,	0X04,	0X54,	0XDD,	0X44,	0X39,
                               0X93,	0X49,	0X23,	0X85,	0X53,	0X80,	0X67,	0X12,	0X1F,	0X8A,	0X08,
                               0X1B,	0XC7,	0X9C,	0XF9,	0XFF,	0X70,	0X3B,	0X01,	0X66,	0X97,	0XF8,
                               0X16,	0XB2,	0X89,	0X31,	0X32,	0X1A,	0X3C,	0X81,	0XC9,	0XE3,	0XCE,
                               0X7A,	0XB7,	0X67,	0X6A,	0X4A,	0XE6,	0X41,	0XFA,	0XC1,	0X48,	0X4A,
                               0X98,	0X69,	0XB9,	0X80,	0XF7,	0X2C,	0X4E,	0X34,	0X63,	0X90,	0X72,
                               0XC8,	0X52,	0X98,	0X66,	0X4D,	0XE6,	0XBB,	0X71,	0XD9,	0X0A,	0X37,
                               0XD8,	0X57,	0X19,	0XA5,	0X81,	0X78,	0XAF,	0X5F,	0X31,	0X9E,	0XD6,
                               0X42,	0X12,	0XC1,	0XAD,	0XF0,	0X1F,	0X74,	0XD4,	0XC7,	0X8B,	0X07,
                               0X44,	0X80,	0XA1,	0X3F,	0XA1,	0X2F,	0XF5,	0X08,	0XDF,	0X2A,	0XE0,
                               0X45,	0X7D,	0X5E,	0X08,	0X8C,	0X57,	0X62,	0XE2,	0X4A,	0X02,	0XEB,
                               0XA8,	0X29,	0X6E,	0X14,	0X60,	0X40,	0XA3,	0X90,	0X1F,	0X83,	0X29,
                               0X2E,	0X7A,	0X1E,	0X09,	0XB4,	0X8D,	0X2D,	0XD3,	0X49,	0XCB,	0X31,
                               0XCB,	0X24,	0X10,	0X37,	0XA1,	0X25,	0XF0,	0XF3,	0XB4,	0XCA,	0X32,
                               0XBF,	0XEC,	0X8E,	0X65,	0XCC,	0XE5,	0XE9,	0XBD,	0X76,	0X41,	0X2F,
                               0XF4,	0X05,	0X6C,	0X01,	0XD9,	0X47,	0X81,	0X55,	0XA9,	0X62,	0XD3,
                               0X79,	0XBC,	0X31,	0XF9,	0X52,	0XB2,	0X5B,	0X53,	0XC3,	0X22,	0XC2,
                               0X14,	0X03,	0XCA,	0XC3,	0XE3,	0X8B,	0XE5,	0XA1,	0XCF,	0X68,	0X1D,
                               0X3C,	0XE8};

// encryption
    const int mLenBytes = 131;
    const std::vector<int> aEncryptTest{0X14, 0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                              0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,	0X27,	0X28,	0X29,
                              0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,	0X32,	0X33,	0X34,
                              0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,	0X3D,	0X3E,	0X3F,
                              0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,	0X48,	0X49,	0X4A,
                              0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,	0X53,	0X54,	0X55,
                              0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,	0X5E,	0X5F,	0X60,
                              0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,	0X69,	0X6A,	0X6B,
                              0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,	0X74,	0X75,	0X76,
                              0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,	0X7F,	0X80,	0X81,
                              0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,	0X8A,	0X8B,	0X8C,
                              0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,	0X95,	0X96};

    const std::vector<int> b{0X00,	0X01,	0X02,	0X03,	0X04,	0X05,	0X06,	0X07,	0X08,	0X09,	0X0A,
                              0X0B,	0X0C,	0X0D,	0X0E,	0X0F,	0X10,	0X11,	0X12,	0X13,	0X14,	0X15,
                              0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,	0X1F};

//M = b || l || m || p0
    const std::vector<int> M{0X00,	0X01,	0X02,	0X03,	0X04,	0X05,	0X06,	0X07,	0X08,	0X09,	0X0A,
                              0X0B,	0X0C,	0X0D,	0X0E,	0X0F,	0X10,	0X11,	0X12,	0X13,	0X14,	0X15,
                              0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,	0X1F,	0X83,
                              0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                              0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,	0X27,	0X28,	0X29,
                              0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,	0X32,	0X33,	0X34,
                              0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,	0X3D,	0X3E,	0X3F,
                              0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,	0X48,	0X49,	0X4A,
                              0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,	0X53,	0X54,	0X55,
                              0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,	0X5E,	0X5F,	0X60,
                              0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,	0X69,	0X6A,	0X6B,
                              0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,	0X74,	0X75,	0X76,
                              0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,	0X7F,	0X80,	0X81,
                              0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,	0X8A,	0X8B,	0X8C,
                              0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,	0X95,	0X96,	0X00};

//Mtrin = Tabl 7.1_convert  (b || l || m || p0)
    const std::vector<int> MtrinEncrypt{0, 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 0,
                0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 1,	 0,
                0,	 1,	 0,	 1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,  0,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 0,	 0,
                0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 1,	 1,	 0,	 1, -1,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 0,
                0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	 1,  0,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	 0,	 0,	 1,	-1,	 0,
                -1,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	-1,	-1,	 1,	 0,	 0, -1,	 0,	 0,	 0,	 0,	 1,	 1,	 1,	 1,	 1,	 1,	 0,	 0,
                -1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,  1,	 0,	 1,	-1,	 0,	 0,	-1,	 1,	 1,	 1,	 0,	 1,	-1,
                1,	-1,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 1,	-1,	 0,	 0,  0,	 1,	 0,	-1,	 1,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,
                -1,	-1,	 0,	 0,	 1,	 1,	 1,	 0,	 0,	 1,	 0,	 0,	 1,  0,	 0,	-1,	 0,	 1,	 1,	 0,	 1,	 1,	-1,	 1,	 1,	 1,
                0,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	-1,	 0,	 1,	-1,	 1,  0,	 0,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,
                -1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	-1,	 0,	 1,	 0,	 0, -1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	 1,	 1,	-1,	 0,
                1,	 0,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 1,	 1,	-1,  0,	 0,	 0,	 1,	 0,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	 0,
                0,	 1,	-1,	 1,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 1,	 1,	 1,	-1,	-1,	 0,	 0,	 1,	 1,	 0,	-1,
                0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 1,  1,	 1,	 1,	 1,	 1,	 0,	 0,	 1,	 1,	 1,	-1,	 0,	 1,
                1,	 0,	 1,	 1,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0, -1,	 0,	-1,	 1,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,
                1,	 1,	 1,	-1,	 1,	 0,	-1,	 0,	 1,	-1,	 0,	-1,	 0,  1,	 0,	-1,	 0,	 0,	 0,	-1,	 1,	 1,	-1,	 0,	 1,	-1,
                1,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	-1,	 0,	 0,	 0,	 0,  0,	-1,	 0,	 0,	 0,	-1,	 1,	 1,	 0,	 1,	 0,	 1,	 0,
                0,	 1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	-1,  1,	-1,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	-1,	 0,	 1,
                1,	 1,	 1,	 0,	 1,	 0,	 1,	 0,	 1,	 0,	-1,	 0,	-1,  1,	 1,	 1,	 1,	 1,	-1,	 1,	-1,	 0,	 1,	 1,	 1,	 0,
                -1,	 1,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	 0,	 1,	 0,	 1, -1,	 1,	 0,	-1,	 1,	 1,	 0,	 0,	 1,	-1,	 0,	 0,	 1,
                -1,	 0,	-1,	 0,	-1,	 0,	-1,	 1,	 1,	-1,	 0,	 1,	-1,  0,	-1,	 0,	 1,	 0,	-1,	 1,	-1,	 0,	-1,	 1,	-1,	 1,
                1,	 1,	-1,	 1,	 0,	 1,	-1,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 0,	-1,	 1,	-1,	 1,	-1,	 0,	 1,	 1,	 0,	 1,
                0,	 0,	-1,	-1,	 1,	 0,	 0,	 1,	-1,	-1,	 0,	 1,	-1,  1,	 0,	-1,	 0,	 0,	-1,	-1,	 1,	-1,	 0,	-1,	 0,	 0,
                0,	 0,	 1,	 1,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	 1,	 1, -1,	 0,	 0,	 1,	 1,	-1,	 1,	 1,	 1,	 1,	 1,	 0,	 0,
                1,	 0,	-1,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 1,	-1,	 1,  1,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 1,	 1,	-1,	 1,
                -1,	 0,	-1,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	 0,  0,	 1,	 1,	-1,	 1,	-1,	 1,	 0,	 1,	 0,	 1,	 1,	-1,
                0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,	 1,  0,	-1,	-1,	 1,	 0,	 1,	 0,	 1,	-1,	 0,	 1,	 0,	 1,
                0,	 1,	-1,	 0,	 0,	-1,	 1,	 0,	-1,	 1,	-1,	-1,	 0, -1,	 0,	 1,	 0,	 1,	-1,	-1,	 0,	-1,	 1,	 1,	 1,	 0,
                1,	-1,	 1,	 0,	 1,	 1,	 0,	-1,	 0,	 1,	 1,	-1,	 1,  1,	-1,	 1,	-1,	-1,	 1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,
                -1,	-1,	 1,	-1,	 1,	 0,	 1,	-1,	 1,	-1,	 1,	 1,	 1,  0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,
                -1,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,  0,	 0,	 1,	-1,	 1,	 1,	 0,	 1,	 1,	-1,	 0,	 0,	 1,
                0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	-1,	 1,	 0,  0,	 0,	 1,	-1,	 0,	-1,	 0,	 1,	 1,	 0,	 1,	 1,	 1,
                0,	 0,	 1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	-1,	 0,  1,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 0,
                -1,	 0,	 1,	 1,	 1,	 1,	 1,	 1,	-1,	 0,	 1,	 0,	 1, -1,	 0,	 0,	-1,	 1,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 0,
                1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

//sData = oid||m||b||Trunc(h)
    const std::vector<int> sData{0X00,	0X00,	0X01,	0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,
                                  0X1C,	0X1D,	0X1E,	0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,
                                  0X27,	0X28,	0X29,	0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,
                                  0X32,	0X33,	0X34,	0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,
                                  0X3D,	0X3E,	0X3F,	0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,
                                  0X48,	0X49,	0X4A,	0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,
                                  0X53,	0X54,	0X55,	0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,
                                  0X5E,	0X5F,	0X60,	0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,
                                  0X69,	0X6A,	0X6B,	0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,
                                  0X74,	0X75,	0X76,	0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,
                                  0X7F,	0X80,	0X81,	0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,
                                  0X8A,	0X8B,	0X8C,	0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,
                                  0X95,	0X96,	0X00,	0X01,	0X02,	0X03,	0X04,	0X05,	0X06,	0X07,	0X08,
                                  0X09,	0X0A,	0X0B,	0X0C,	0X0D,	0X0E,	0X0F,	0X10,	0X11,	0X12,	0X13,
                                  0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                                  0X1F,	0X52,	0X4B,	0X8A,	0X07,	0X04,	0X00,	0X33,	0X59,	0X57,	0XB8,
                                  0X67,	0X82,	0XB1,	0X93,	0X35,	0X20,	0XAF,	0X0F,	0X26,	0X49,	0XB6,
                                  0X8D,	0X70,	0XC0,	0XB9,	0X01,	0XCC,	0XC2,	0X3C,	0X68,	0X10,	0XAF};

    const std::vector<int> r{0, 1,	-1,	-1,	 0,	-1,	 0,	 1,	-1,	 1,	 0,	 0,	 1,
                0,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	 1,  0,	 0,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,	 0,
                0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,  0,	 0,	-1,	 0,	-1,	 1,	 1,	 0,	-1,	 0,	 1,	-1,	 0,
                -1,	 1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 0,  0,	 0,	 0,	 1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	-1,	-1,	-1,	-1,	 0,	 0,	 1,	 0,	 0,	 0, -1,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,
                1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,  0,	 0,	-1,	 0,	 0,	 0,	 0,	 1,	 0,	 1,	 0,	 1,	 0,
                0,	 0,	 0,	-1,	 0,	-1,	 1,	-1,	 0,	 1,	 0,	 0,	 1,  0,	 0,	-1,	 0,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,
                0,	-1,	 0,	 1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	 1,  0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 1,	 1,
                -1,	-1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,	-1,	 1,	 0,  0,	 0,	 0,	 1,	 0,	-1,	 0,	-1,	 1,	 0,	 0,	-1,	 1,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,  0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 1,	 1,	 0,	-1,	-1,
                0,	-1,	-1,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,  0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	-1,	-1,	 0,	 0,
                0,	 0,	 1,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	 0,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 1,
                -1,	 0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	-1,	 1, -1,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	 0,	 1,
                0,	 0,	 0,	 0,	-1,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,  0,	-1,	-1,	 0,	 1,	 1,	 0,	 0,	 1,	 0,	 1,	-1,	-1,
                0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,  0,	 1,	-1,	 0,	-1,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,
                0,	-1,	-1,	 0,	 1,	 1,	-1,	 0,	 0,	-1,	 1,	 0,	 0,  0,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,
                1,	 1,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,  0,	 1,	 1,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,
                0,	 0,	 1,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,  1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	-1,
                1,	 0,	 0,	-1,	 0,	 0,	 1,	-1,	 1,	 0,	 0,	 1,	 0,  0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	-1,
                -1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0, -1,	-1,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	-1,	 0,
                0,	 0,	-1,	 0,	 1,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0, -1,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	-1,	-1,	 0,	 0,	 1,
                1,	-1,	 0,	 1,	 1,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,  0,	 0,	 0,	 0,	-1,	-1,	 1,	 1,	-1,	 0,	-1,	 1,	 0,
                1,	 1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,  0,	-1,	 1,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	-1,	-1,	 0,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 0,  0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 0,
                0,	 1,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 0,	 0,  0,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 0,
                1,	-1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	 0,	 0,	 1,	 0,  0,	 0,	 1,	 0,	 1,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	 0,
                1,	 0,	-1,	 0,	 0,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 1,  0,	 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,
                0,	 0,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 1,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 0,	 0,	 0,  0,	-1,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 0,	-1,	-1,	 1,	 1,	 0,	-1,	 0,	 0,	 0,	-1,
                0,	 0,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	-1,	 0,	 0,	-1,  1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 1,	 0,	 1,	-1,
                0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 1,	-1,	 0,	 1,	-1,  0,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,
                1,	 0,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 1,	 0,	 0,	 0,  0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	-1,
                0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	-1};

//R = r*h mod q
    const std::vector<int> REncrypt{0x0AD1,	0xF7E6,	0x01E1,	0x0DB0,	0x0134,	0xF513,	0xFAF8,
        0x03CD,	0x0C82,	0x0DDE,	0x0680,	0xF1AA,	0x0E8F,	0x0338, 0x03F2,	0xFE76,	0x083A,	0x074A,	0xFA9A,	0x0096,	0x086F,
        0x081D,	0x0C88,	0xF2D7,	0xF83D,	0x02BE,	0xF3BE,	0x04E1, 0x036F,	0xFC86,	0xF3E8,	0x00A5,	0x0D94,	0x096D,	0xF978,
        0x0303,	0x0E72,	0xFB1E,	0xFB70,	0xFC64,	0x0B7B,	0xFBE7, 0x0CD0,	0xF6C1,	0x0D26,	0xF8B7,	0x05E0,	0xFD7B,	0xF4F3,
        0x046E,	0x0B86,	0xF673,	0x07FF,	0x0693,	0x060D,	0xFCDE, 0x0B3F,	0x00E7,	0xF953,	0xF9B5,	0xF6A6,	0x0179,	0xFF2A,
        0x0E17,	0x0103,	0xF1DB,	0xF202,	0xFA7B,	0xF2C8,	0xF957, 0x07AA,	0xF534,	0xF420,	0x0788,	0xF7D7,	0xFCD7,	0x0C1B,
        0xFAEB,	0x0CD1,	0x0867,	0x0A78,	0xF999,	0x0EB7,	0xFBF8, 0xF31F,	0xFE2F,	0x0913,	0xFF42,	0xFA13,	0xF73B,	0x07AE,
        0xF4C5,	0xF866,	0xF3BE,	0x0314,	0xF2C8,	0x01AC,	0xF4F4,0xF876,	0xF930,	0x08F9,	0x082C,	0x0027,	0x0600,	0x0566,
        0xF96E,	0x0AAD,	0x0327,	0xFA8F,	0x0D68,	0xF55B,	0x03D8, 0x0CFC,	0xF4AB,	0xF63D,	0xFC58,	0xF3D7,	0x0EB5,	0x08E6,
        0x0E08,	0x0D33,	0x0058,	0x0840,	0xF1DF,	0x085C,	0xFE40, 0x06EB,	0x0EA8,	0x00E8,	0x055A,	0x0E67,	0xFAE6,	0x0196,
        0x0470,	0x0D94,	0xF2C2,	0xF2BE,	0xF6DC,	0xF7A6,	0xF79E, 0xF116,	0xF5F7,	0xF5C8,	0x0D28,	0x0C1D,	0x09F3,	0xF7C6,
        0x05D5,	0xFDE5,	0xF285,	0xF97B,	0x098A,	0xFAD3,	0xFBA3, 0x0106,	0x08B9,	0xF2EE,	0xFA19,	0x0C8A,	0xFC5D,	0xF938,
        0x002F,	0xF9BC,	0xF461,	0xF536,	0xF713,	0x090E,	0x08FD, 0xF786,	0x003A,	0x0C50,	0x021A,	0xF676,	0x01C7,	0x09BB,
        0xF4F7,	0xF1E6,	0x0E9E,	0x089A,	0x02FB,	0x01EE,	0xF39F, 0xF15B,	0xFA11,	0x061D,	0x077A,	0xF49D,	0xFB30,	0x01F5,
        0x05F4,	0x0CDE,	0x01BE,	0xF9C1,	0x0A66,	0x0181,	0x055A, 0xF948,	0xF50C,	0xF42E,	0xFB3B,	0x0E24,	0xF88D,	0x0456,
        0x0EA0,	0x01E1,	0x06B7,	0xFCB3,	0x0690,	0xFEF0,	0x00F6, 0x0696,	0xF411,	0xFA1E,	0x041B,	0x08BD,	0x0454,	0x09FA,
        0xF750,	0xF5FD,	0x04F7,	0x0133,	0xF2D0,	0xFC9A,	0xFBF3, 0x0158,	0xFF22,	0xF315,	0xF430,	0x0EAC,	0xF60A,	0x0D6A,
        0xF863,	0xF7DF,	0x0461,	0xF67E,	0x0B4F,	0x0809,	0x00A3, 0xF7F7,	0xF205,	0xF254,	0xF8A3,	0x0C40,	0xFA79,	0xF54E,
        0x0244,	0xFFF9,	0xFEF5,	0xFC96,	0xFABD,	0x0C9A,	0xF5B3, 0x04ED,	0xF7D4,	0xFC7B,	0x04A9,	0x00A0,	0xFD17,	0x0AE4,
        0x03EE,	0x0E55,	0x0D25,	0x0E34,	0x0EC3,	0x0431,	0xF386, 0xFEF0,	0xF2F9,	0xFCB0,	0xF18F,	0x049A,	0x0782,	0xF7B5,
        0xFE93,	0xF44C,	0x054E,	0xF6DE,	0xF6B6,	0xFBA5,	0x0E3C, 0xFDDD,	0x00AF,	0x02B3,	0xF4FD,	0xFC63,	0xF70C,	0xFD53,
        0xF2A7,	0xFB2C,	0xFE4C,	0x0434,	0x0E08,	0xFE3D,	0x0DAD, 0xFC9D,	0xF842,	0xF3F6,	0x004B,	0x0C51,	0xF7C4,	0xFE8E,
        0xFD51,	0x0748,	0xF47E,	0xF910,	0x05D1,	0xF9C0,	0x01DB, 0xFAA0,	0x088B,	0x09C8,	0xFE56,	0x0DCD,	0x053F,	0xFB13,
        0xF7A3,	0x0A38,	0xFF7B,	0x0323,	0xFF64,	0x0625,	0x0892, 0x036A,	0x0567,	0xFD00,	0x037D,	0x017E,	0xF9C5,	0x0295,
        0x0DBD,	0xF122,	0x0EB6,	0x0E8C,	0x04EF,	0xF593,	0xF334, 0xFFE3,	0x061D,	0xF23D,	0x01A4,	0xF5C1,	0x081D,	0x0C24,
        0x0A5B,	0xF969,	0x0066,	0x0B77,	0xFED6,	0xF932,	0x060D, 0xFEA7,	0x0B17,	0xFF1F,	0xF9AE,	0xF844,	0x0CA0,	0x0CCC,
        0x05EF,	0xFFA4,	0xF450,	0x00E9,	0xF403,	0xF307,	0xFCB3, 0x0B84,	0xFF94,	0xF145,	0xF517,	0xF537,	0x07D3,	0x0A49,
        0x0B82,	0x08C5,	0xFCA4,	0xF29C,	0xF6C2,	0xF31B,	0xF177, 0xFDD5,	0x0801,	0xFB97,	0xFA4A,	0x0557,	0x0BF6,	0x019C,
        0x03E2,	0x043C,	0xF64A,	0x0AEE,	0x0B6F,	0x0E34,	0x048F, 0xFFD0,	0xF432,	0x0C7B,	0x0E30,	0x0274,	0xF70E,	0x00E9,
        0xF67E,	0x0AFF,	0x0CF7,	0xFCE3,	0xFB85,	0xF861,	0x06D3, 0x089A,	0xF6E8,	0xF31D,	0xFC93,	0x0971,	0x089B,	0xF7CB,
        0xFAD6,	0x097B,	0x0379,	0x09C1,	0x0940,	0x0011,	0x068C, 0xF8B5,	0xF9AA,	0xF29C,	0x04FC,	0xFB56,	0xFA0A,	0x05D5,
        0xFA60,	0x0CD3,	0xF5DA,	0xF3EF,	0xF95E,	0x06E1,	0xFE12, 0x0157,	0x0845,	0xFBC4,	0xF3BA,	0xF494,	0x0387,	0x0902,
        0xF72B,	0x0BBF,	0xFED4,	0x0247,	0xFECA,	0xF4BF,	0x0458, 0x0EB1,	0x097E,	0xF826,	0x0018,	0x07FC,	0x0A9C,	0xFC70,
        0x010E,	0xFE10,	0x04CA,	0xF561,	0x0D64,	0xFDC9,	0xF958, 0x02A1,	0x0DBF,	0x0380,	0xF946,	0xF5EA,	0x03C3,	0x0790,
        0xFEB4,	0x0384,	0x0190,	0xF909,	0xF57B,	0xFD7D,	0xF275, 0x04C5,	0xF4C1,	0x0B4D,	0x05A4,	0xF6F3,	0x01E4,	0x099A,
        0x0CAF,	0x0D0F,	0xFBBC,	0x01C9,	0xF43B,	0xF565,	0xF78E, 0xFAA7,	0x06C9,	0x02E3,	0xF2E4,	0x0C3C,	0xFC84,	0xFAD4,
        0x029F,	0x0292,	0x0077,	0x0DB0,	0x0871,	0x0E3A,	0xF9B2, 0xF3B3,	0x0D29,	0x04C7,	0xF8E9,	0xFB4E,	0xF91F,	0x0320,
        0x06A5,	0x0312,	0xF132,	0xF277,	0xFAB1,	0x02AB,	0xFE37, 0x0909,	0xF111,	0xFDCD,	0xF355,	0x0D23,	0xFA2A,	0xF4AB,
        0x027B,	0x047D,	0x069A,	0x0DCA,	0xF19F,	0x0A53,	0x00CC, 0xF11B,	0x046A,	0x0E78,	0x0BF9,	0xF3AE,	0x0935,	0xFE4B,
        0xFC1F,	0xF70B,	0x06DF,	0xF6A0,	0x0CE2,	0x012B,	0xFB47, 0xFE96,	0x0347,	0x0CFC,	0xF7D4,	0x09F6,	0x0560,	0xF39C,
        0x0DE1,	0xFFC8,	0x01BF,	0x0D10,	0xFD23,	0x0472,	0x094B, 0x082D,	0xF75A,	0x09DA,	0xF93D,	0x0E56,	0x0708,	0x0DDF,
        0x0E81,	0x043B,	0xF97E,	0xF785,	0x0871,	0xF592,	0xFA20, 0xFD33,	0x08B3,	0xF6FE,	0x0D69,	0x0D11,	0xF1A3,	0x0638,
        0x023D,	0xF27E,	0x096A,	0xF3DD,	0x031C,	0xF494,	0x0B7F, 0xF609,	0x0358,	0xFE4D,	0x0366,	0xF869,	0x0312,	0x07F7,
        0x0468,	0x01F8,	0x0469,	0xFF2B,	0xFD29,	0x08AF,	0x029E, 0xF863,	0xF21B,	0xF888,	0xF292,	0x06C3,	0xF446,	0x0157,
        0xFEF3,	0xF903,	0xF608,	0xF757,	0x08AE,	0xF495,	0x08F4, 0x0D59,	0x0AE2,	0x0D4D,	0x0520,	0xFD24,	0x0D21,	0x0C6E,
        0x0520,	0xF9FC,	0x0531,	0xF65F,	0x0653,	0x03C4,	0xF6AD, 0x0A78,	0xFBAD,	0xFBD3,	0x0AD4,	0x06BE,	0xF49B,	0x0974,
        0xF69C,	0x0E9D,	0xFD1A,	0xFA51,	0x0DE2,	0x047D,	0x0716, 0x07E3,	0xFBCA,	0xFE6F,	0x0EA9,	0xFD2E,	0xF3A1,	0xF144,
        0xFCA8,	0x0A8A,	0xFBB4,	0xF239,	0x0C88,	0xF47D,	0x0DCC, 0x0E83,	0xF6A8,	0xFE37,	0x05AB,	0x0E75,	0xF99A,	0x0594,
        0x0BA2,	0xFBF9,	0x00C2,	0x00A9,	0x0D10,	0x045E,	0xFECF, 0xF9D3,	0xF983,	0x0101,	0xFBD5,	0xF9BC,	0x0288,	0x0CBF,
        0x074B,	0x0AF9,	0x0277,	0x0683,	0xF331,	0xF77B,	0xFDD0, 0xFAE9,	0x011B,	0x08A6,	0xF71F,	0x0939,	0x0AC3,	0xFA7D,
        0x0EB2,	0x0862,	0xF22B,	0x00E1,	0xFD6D,	0x0101,	0x0747, 0x0A55,	0x02E0,	0xFC4F,	0xFA61,	0x0553,	0x0E4C,	0x0D33,
        0x065A,	0x028C,	0xFB53,	0xF7A9,	0xF47F,	0x030F,	0x03C0, 0x08E5,	0x00B9,	0xF4FF,	0x0697,	0xF615,	0xFCE4,	0xF33F,
        0x0769,	0xF1D6,	0xF63F,	0xFB00,	0xF622,	0xFFC5,	0xF63D, 0xF9A0,	0xF77E,	0x0374,	0xF9CE,	0x0925,	0x053E,	0xF90A,
        0x07E8,	0x06E1,	0xF1FE,	0xFBCE,	0xFF01,	0xF941,	0xF695, 0xF35E,	0xFD1C,	0xF9C4,	0xF6C6,	0xF3F7,	0x08F5,	0xF2B4,
        0x0CC1,	0xFF57,	0x0E71,	0x0A6B,	0x0B64,	0xFE87,	0xF241, 0xFFD9,	0x0948,	0x093F,	0x0E95,	0xF482,	0x0079,	0xFAEC,
        0xFD77,	0x090B,	0x0E75,	0x0A8F,	0xF1B1,	0x07FA,	0xF285, 0xFB93,	0x01BD,	0x063C,	0x04E4,	0xFCB6,	0x0CEB,	0x0715,
        0xF736,	0x0BE7,	0xFDF7,	0x0570,	0x0B13,	0x0729,	0xF623, 0x05B9,	0xF4DE,	0xFCB9,	0x0796,	0xFCE5,	0x08DB,	0xF19E,
        0x018A,	0x0B19,	0xF436,	0xF188,	0xF8E5,	0xF3DB,	0xF40F, 0xF85B,	0x0373,	0x0878,	0xF306,	0xF974,	0x0A1F,	0xF3D9,
        0xFCDD,	0xFAA6,	0xF729,	0xF653,	0xF5AC,	0x02AC,	0x0CF3, 0x0D2C,	0xF4CB,	0xF9E5,	0x0CB9,	0xF3FA,	0xFFE0,	0xF3FC,
        0x08ED,	0xF674,	0x03C8,	0x0EBE,	0x064E,	0xF89E,	0xF111, 0xF226,	0xFDD4,	0xFE0C,	0xF305,	0xFBFC,	0x04D4,	0x0732,
        0x04D6,	0xF8F8,	0xFED5,	0x07F2,	0xF7A4,	0xF636,	0xFFEA, 0xF344,	0xFA2C,	0xFA4E,	0x0937,	0xFF55,	0xF857,	0x0892,
        0x0C8F,	0xFC68,	0xF251,	0xF31A,	0x0EBE,	0xF32D,	0xF78E, 0x03CB,	0x02AE,	0x0465,	0xF39C,	0x073D,	0xF361,	0xF9B5,
        0x0044,	0x0E20,	0x0ED7,	0x00FC,	0x0700,	0xFE7F,	0xFFE9, 0x072A,	0x078B,	0x0652,	0x0EEC,	0xF14C,	0xF261,	0x0CC9,
        0xF7A5,	0x0CA3,	0x08C3,	0x0C00,	0x0BE5,	0x03A0};

//oR4 = R mod 4 – oktets
    const std::vector<int> oR4Encrypt{0X64,	0X31, 0XA2,	0XCA,	0XAA,	0XD3,	0X69,	0XE1,	0X13,	0XA0,	0XF1,
                          0XB3,	0XEB,	0XF6,	0XFD,	0X9B,	0XFB,	0X38,	0X0F,	0XF7,	0X1C,	0XFE,
                          0XF9,	0XA0,	0X08,	0X4C,	0XA7,	0XCC,	0X34,	0XD8,	0XC3,	0X0C,	0X2E,
                          0X82,	0X8A,	0XB0,	0X79,	0X5E,	0XF9,	0X99,	0X31,	0XB9,	0XA2,	0XBF,
                          0XAB,	0XBD,	0X64,	0X4A,	0X66,	0X0B,	0X18,	0X7C,	0X29,	0XB4,	0X87,
                          0XCB,	0X24,	0X2B,	0XDB,	0X7D,	0X31,	0X85,	0X9B,	0X4D,	0X32,	0X53,
                          0X61,	0X3A,	0X72,	0XA4,	0X7D,	0XCF,	0X00,	0X56,	0XB4,	0X92,	0X13,
                          0X32,	0X7F,	0X3C,	0X6B,	0X19,	0X5A,	0X3C,	0XD4,	0X53,	0X6E,	0X9F,
                          0XE0,	0X30,	0X7F,	0X07,	0XF6,	0X42,	0XF5,	0XEE,	0X22,	0XB3,	0X2C,
                          0X26,	0XFD,	0X78,	0X77,	0XED,	0X44,	0X60,	0XA4,	0XEE,	0X6D,	0X23,
                          0XBC,	0XEC,	0X68,	0X02,	0X24,	0X47,	0X2B,	0X00,	0X75,	0X54,	0XCB,
                          0XC7,	0X6D,	0XC0,	0X3B,	0X1A,	0XDD,	0XB1,	0XAD,	0XF5,	0X5E,	0XF6,
                          0XBC,	0XE1,	0X9F,	0XF2,	0XFB,	0X08,	0X13,	0X3B,	0X69,	0X8D,	0XE5,
                          0X8F,	0X97,	0X1A,	0X43,	0X46,	0X6C,	0X1D,	0XEF,	0X2E,	0XFC,	0XE4,
                          0X64,	0X18,	0X1F,	0X11,	0XCB,	0X06,	0X66,	0XED,	0X90,	0X84,	0X4C,
                          0XF6,	0X26,	0X4B,	0XF5,	0X0F,	0X7D,	0XC7,	0XB7,	0X6B,	0X57,	0X4D,
                          0XCE,	0X37,	0XC5,	0XF4,	0XDB,	0X25,	0X22,	0X68,	0X69,	0X58,	0X2D,
                          0X1D,	0XCD,	0X4D,	0X93,	0XDD,	0X9D,	0X0B,	0X6F,	0X37,	0X66,	0X7A,
                          0X61,	0XFF,	0X23,	0X59,	0XC3,	0X35,	0X81,	0X0A,	0X98,	0X10,	0XA1,
                          0X8A,	0X0B,	0X7B,	0X1A,	0X6E,	0X45,	0X43,	0X0D,	0XB8,	0X15,	0XF1, 0X00};

//maska = MGF(r*h mod 4)
    const std::vector<int> maska{-1,  1, -1, 0, 0,	 0,	 1,	 1,	 1,	-1,	 0,	-1,	-1,
                -1,	-1,	-1,	-1,	 1,	-1,	 1,	 0,	 0,	 0,	 1,	 0,	 0,  1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,
                1,	 1,	-1,	-1,	-1,	 0,	 0,	 1,	-1,	 1,	-1,	 0,	 1,  1,	 0,	 0,	-1,	-1,	 0,	 1,	-1,	-1,	 1,	 0,	 0,	-1,
                1,	-1,	 0,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	 1,	-1, -1,	 0,	 0,	-1,	 1,	 0,	 1,	 1,	 0,	 1,	 1,	 1,	 0,
                -1,	-1,	-1,	 1,	 1,	 0,	 0,	 0,	 1,	 0,	 1,	 1,	 1, -1,	 0,	-1,	 1,	-1,	 0,	 0,	-1,	 1,	-1,	-1,	 1,	 0,
                -1,	 0,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 1,	-1,	-1,	-1, -1,	 0,	-1,	-1,	 0,	 0,	 0,	 0,	 1,	 1,	 1,	 0,	 0,
                -1,	 1,	 1,	 0,	 1,	 1,	 1,	 1,	 0,	 1,	-1,	 1,	 0,  0,	 1,	-1,	-1,	-1,	 1,	-1,	-1,	 1,	 1,	 0,	 1,	-1,
                0,	 0,	-1,	 0,	-1,	 1,	 0,	 1,	-1,	 0,	-1,	 1,	-1,  1,	-1,	 0,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,
                0,	-1,	-1,	 0,	-1,	 1,	 1,	 0,	-1,	 1,	-1,	 0,	 0,  1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	-1,	 0,	-1,	 0,	 0,
                -1,	-1,	 0,	 1,	 0,	 1,	-1,	-1,	 1,	 1,	-1,	-1,	 1, -1,	-1,	 0,	 1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	 1,	 1,
                0,	 1,	 1,	 0,	 1,	-1,	 1,	-1,	-1,	 0,	 1,	 1,	 0, -1,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	 1,	 1,	 0,	 1,	-1,
                1,	 0,	 0,	 0,	-1,	 1,	-1,	 1,	-1,	 0,	 0,	 0,	-1,  1,	-1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	 0,
                -1,	 1,	-1,	-1,	 1,	 0,	 0,	 0,	 1,	 0,	-1,	 1,	 1,  0,	-1,	-1,	 0,	 1,	 0,	 1,	 1,	-1,	 1,	-1,	 0,	-1,
                1,	-1,	-1,	 1,	-1,	 0,	-1,	 1,	 1,	 1,	-1,	-1,	 1,  0,	-1,	 1,	 0,	 1,	-1,	 1,	 0,	-1,	 0,	 1,	 0,	 0,
                1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 0,	-1,	 1,  1,	-1,	 0,	 1,	-1,	-1,	 0,	-1,	 0,	 1,	-1,	 1,	-1,
                0,	-1,	 1,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 1,  0,	 1,	 1,	 1,	-1,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	-1,
                -1,	 0,	-1,	-1,	 1,	-1,	 1,	-1,	-1,	-1,	-1,	 0,	 1,  1,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	 1,	 1,	 0,	-1,	 0,
                -1,	 1,	 0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	 1,	 0,  1,	 0,	 0,	 1,	 0,	-1,	-1,	-1,	 0,	-1,	 1,	 1,	 0,
                -1,	 0,	-1,	 0,	-1,	 1,	 0,	-1,	-1,	 1,	-1,	 0,	-1,  0,	 0,	-1,	 1,	-1,	 1,	 1,	 1,	 1,	-1,	-1,	 0,	-1,
                -1,	-1,	 1,	 1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 1,	 0, -1,	 1,	-1,	 0,	 1,	 1,	 0,	-1,	-1,	-1,	 1,	 1,	 1,
                0,	 0,	-1,	 1,	 1,	 1,	 1,	 0,	-1,	-1,	 0,	-1,	 0,  1,	 1,	 0,	 0,	 1,	-1,	-1,	-1,	-1,	 0,	-1,	-1,	-1,
                -1,	 1,	-1,	 0,	-1,	 1,	 1,	-1,	 0,	-1,	 0,	 1,	 0, -1,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	-1,	 1,	-1,	 1,	-1,
                -1,	 1,	 0,	 1,	 1,	-1,	 1,	-1,	 1,	 1,	 1,	 1,	-1,  1,	-1,	-1,	-1,	 1,	 1,	-1,	-1,	-1,	 1,	 1,	-1,	 0,
                -1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	-1,	 0,	-1,  1,	 1,	 1,	-1,	-1,	-1,	-1,	 1,	 1,	 0,	 1,	 1,	 1,
                -1,	 0,	-1,	 0,	-1,	 1,	 1,	 1,	-1,	 1,	-1,	-1,	 0, -1,	 0,	 0,	-1,	-1,	 0,	-1,	 1,	 1,	 0,	 1,	-1,	 0,
                1,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	-1,	-1,	 0,	 1, -1,	-1,	 1,	-1,	 0,	-1,	 0,	-1,	-1,	 0,	 0,	 0,	-1,
                -1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	-1,	-1,	 1,	 0,	 0,  0,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	-1,	-1,	-1,
                1,	 1,	-1,	-1,	 0,	 0,	 1,	 0,	-1,	-1,	 1,	 1,	-1,  1,	 0,	-1,	 1,	 0,	 0,	-1,	 1,	 0,	 1,	-1,	-1,	 1,
                1,	 1,	 0,	-1,	 1,	 1,	 0,	-1,	 1,	-1,	 1,	 1,	-1,  1,	 0,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	-1,	-1,	 0,
                1,	 0,	 0,	 1,	 1,	 0,	 1,	 1,	 1,	 0,	 0,	-1,	 1,  0,	-1,	-1,	-1,	 1,	 0,	 0,	-1,	 0,	-1,	 1,	 1,	 1,
                1,	-1,	-1,	 0,	-1,	-1,	-1,	 0,	 0,	 0,	 0,	 1,	 0,  0,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	-1,	 0,	-1,	-1,	 1,
                -1,	-1,	 0,	 1,	 1,	-1,	-1,	 0,	 0,	-1,	 1,	-1,	 1,  1,	-1,	-1,	-1,	 0,	-1,	 0,	-1,	 0,	 1,	 1,	-1,	 0,
                1,	-1,	 1,	 1,	 1,	 1,	 0,	 0,	 1,	 0,	-1,	-1,	-1, -1,	 0,	 1,	 1,	 1,	 0,	 0,	-1,	 0,	-1,	 1,	 0,	 0,
                0,	-1,	 1,	 0,	-1,	 1,	 1,	-1,	 1,	-1,	 1,	 0,	 1, -1,	 0,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 1,	-1,
                0,	 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

//e = (R + (maska + Mtrin)mod 3)) mod q
    const std::vector<int> e{0x0AD0,	0xF7E7,	0x01E0,	0x0DB0,	0x0134,	0xF513,	0xFAF9,
        0x03CE,	0x0C83,	0x0DDD,	0x0681,	0xF1AA,	0x0E8E,	0x0337, 0x03F1,	0xFE77,	0x0839,	0x074B,	0xFA99,	0x0097,	0x086E,
        0x081D,	0x0C88,	0xF2D8,	0xF83D,	0x02BD,	0xF3BF,	0x04E2,0x0370,	0xFC86,	0xF3E9,	0x00A4,	0x0D93,	0x096D,	0xF978,
        0x0302,	0x0E73,	0xFB1F,	0xFB71,	0xFC65,	0x0B7A,	0xFBE6, 0x0CD0,	0xF6C1,	0x0D26,	0xF8B8,	0x05E1,	0xFD7A,	0xF4F4,
        0x046D,	0x0B86,	0xF673,	0x0800,	0x0692,	0x060D,	0xFCDD, 0x0B3F,	0x00E6,	0xF954,	0xF9B4,	0xF6A5,	0x0178,	0xFF2B,
        0x0E17,	0x0102,	0xF1DC,	0xF202,	0xFA7B,	0xF2C9,	0xF957, 0x07AA,	0xF533,	0xF421,	0x0788,	0xF7D7,	0xFCD8,	0x0C1C,
        0xFAEB,	0x0CD2,	0x0867,	0x0A78,	0xF998,	0x0EB6,	0xFBF8, 0xF31F,	0xFE30,	0x0913,	0xFF41,	0xFA14,	0xF73C,	0x07AE,
        0xF4C4,	0xF865,	0xF3BF,	0x0315,	0xF2C7,	0x01AC,	0xF4F4, 0xF877,	0xF92F,	0x08FA,	0x082B,	0x0028,	0x05FF,	0x0565,
        0xF96F,	0x0AAD,	0x0326,	0xFA8E,	0x0D67,	0xF55C,	0x03D8, 0x0CFD,	0xF4AA,	0xF63D,	0xFC58,	0xF3D7,	0x0EB6,	0x08E6,
        0x0E07,	0x0D32,	0x0059,	0x0841,	0xF1DE,	0x085D,	0xFE3F, 0x06EB,	0x0EA8,	0x00E7,	0x0559,	0x0E68,	0xFAE6,	0x0195,
        0x046F,	0x0D94,	0xF2C3,	0xF2BF,	0xF6DD,	0xF7A5,	0xF79D, 0xF115,	0xF5F7,	0xF5C8,	0x0D29,	0x0C1E,	0x09F4,	0xF7C5,
        0x05D6,	0xFDE5,	0xF286,	0xF97C,	0x098B,	0xFAD3,	0xFBA2, 0x0107,	0x08B9,	0xF2EF,	0xFA1A,	0x0C8A,	0xFC5E,	0xF937,
        0x0030,	0xF9BD,	0xF461,	0xF535,	0xF712,	0x090E,	0x08FC, 0xF787,	0x003B,	0x0C4F,	0x0219,	0xF676,	0x01C6,	0x09BA,
        0xF4F7,	0xF1E7,	0x0E9D,	0x089B,	0x02FC,	0x01EF,	0xF39E, 0xF15C,	0xFA11,	0x061D,	0x077A,	0xF49E,	0xFB2F,	0x01F6,
        0x05F3,	0x0CDD,	0x01BE,	0xF9C0,	0x0A66,	0x0181,	0x0559, 0xF949,	0xF50B,	0xF42E,	0xFB3B,	0x0E23,	0xF88C,	0x0456,
        0x0E9F,	0x01E0,	0x06B6,	0xFCB3,	0x0691,	0xFEF1,	0x00F7, 0x0696,	0xF412,	0xFA1F,	0x041B,	0x08BE,	0x0455,	0x09FA,
        0xF74F,	0xF5FD,	0x04F8,	0x0134,	0xF2CF,	0xFC9A,	0xFBF4, 0x0159,	0xFF22,	0xF315,	0xF430,	0x0EAB,	0xF60A,	0x0D6B,
        0xF863,	0xF7E0,	0x0460,	0xF67D,	0x0B4E,	0x080A,	0x00A4, 0xF7F7,	0xF204,	0xF254,	0xF8A4,	0x0C40,	0xFA78,	0xF54E,
        0x0245,	0xFFFA,	0xFEF4,	0xFC97,	0xFABE,	0x0C9B,	0xF5B2, 0x04ED,	0xF7D3,	0xFC7A,	0x04AA,	0x00A0,	0xFD16,	0x0AE5,
        0x03EE,	0x0E56,	0x0D24,	0x0E34,	0x0EC4,	0x0431,	0xF387, 0xFEF1,	0xF2F8,	0xFCAF,	0xF18E,	0x049B,	0x0782,	0xF7B4,
        0xFE92,	0xF44C,	0x054F,	0xF6DF,	0xF6B6,	0xFBA6,	0x0E3D, 0xFDDC,	0x00AE,	0x02B4,	0xF4FE,	0xFC64,	0xF70D,	0xFD54,
        0xF2A6,	0xFB2C,	0xFE4D,	0x0435,	0x0E08,	0xFE3E,	0x0DAD, 0xFC9D,	0xF843,	0xF3F5,	0x004B,	0x0C51,	0xF7C3,	0xFE8D,
        0xFD52,	0x0748,	0xF47F,	0xF910,	0x05D2,	0xF9C1,	0x01DC, 0xFAA0,	0x088A,	0x09C9,	0xFE56,	0x0DCC,	0x053E,	0xFB13,
        0xF7A4,	0x0A37,	0xFF7A,	0x0323,	0xFF65,	0x0624,	0x0891, 0x036A,	0x0567,	0xFD01,	0x037E,	0x017E,	0xF9C4,	0x0296,
        0x0DBC,	0xF122,	0x0EB5,	0x0E8C,	0x04F0,	0xF594,	0xF334, 0xFFE2,	0x061C,	0xF23E,	0x01A4,	0xF5C0,	0x081E,	0x0C23,
        0x0A5A,	0xF96A,	0x0067,	0x0B77,	0xFED7,	0xF932,	0x060D, 0xFEA8,	0x0B16,	0xFF1F,	0xF9AF,	0xF845,	0x0CA1,	0x0CCC,
        0x05EE,	0xFFA4,	0xF450,	0x00E8,	0xF403,	0xF306,	0xFCB4, 0x0B84,	0xFF93,	0xF144,	0xF516,	0xF536,	0x07D3,	0x0A48,
        0x0B81,	0x08C5,	0xFCA5,	0xF29C,	0xF6C3,	0xF31B,	0xF178, 0xFDD5,	0x0800,	0xFB98,	0xFA4B,	0x0558,	0x0BF5,	0x019C,
        0x03E3,	0x043B,	0xF64A,	0x0AEF,	0x0B70,	0x0E35,	0x0490, 0xFFD0,	0xF433,	0x0C7A,	0x0E30,	0x0275,	0xF70E,	0x00EA,
        0xF67F,	0x0AFF,	0x0CF7,	0xFCE4,	0xFB85,	0xF862,	0x06D3, 0x089A,	0xF6E9,	0xF31E,	0xFC92,	0x0971,	0x089C,	0xF7CA,
        0xFAD5,	0x097B,	0x037A,	0x09C2,	0x0940,	0x0011,	0x068D, 0xF8B6,	0xF9A9,	0xF29D,	0x04FD,	0xFB57,	0xFA09,	0x05D5,
        0xFA60,	0x0CD3,	0xF5D9,	0xF3EE,	0xF95E,	0x06E0,	0xFE12, 0x0158,	0x0845,	0xFBC3,	0xF3BA,	0xF495,	0x0388,	0x0903,
        0xF72A,	0x0BBE,	0xFED3,	0x0247,	0xFECB,	0xF4BE,	0x0457, 0x0EB0,	0x097F,	0xF826,	0x0018,	0x07FC,	0x0A9D,	0xFC71,
        0x010E,	0xFE11,	0x04CA,	0xF561,	0x0D64,	0xFDCA,	0xF959, 0x02A0,	0x0DBF,	0x0381,	0xF947,	0xF5EA,	0x03C4,	0x0791,
        0xFEB5,	0x0384,	0x018F,	0xF909,	0xF57B,	0xFD7C,	0xF275, 0x04C6,	0xF4C1,	0x0B4D,	0x05A5,	0xF6F2,	0x01E5,	0x099A,
        0x0CB0,	0x0D10,	0xFBBB,	0x01CA,	0xF43C,	0xF564,	0xF78E, 0xFAA8,	0x06CA,	0x02E4,	0xF2E5,	0x0C3D,	0xFC83,	0xFAD3,
        0x029E,	0x0291,	0x0076,	0x0DB0,	0x0870,	0x0E3A,	0xF9B3, 0xF3B4,	0x0D2A,	0x04C6,	0xF8E8,	0xFB4E,	0xF920,	0x0321,
        0x06A5,	0x0313,	0xF132,	0xF278,	0xFAB1,	0x02AC,	0xFE37, 0x0909,	0xF110,	0xFDCE,	0xF355,	0x0D23,	0xFA2B,	0xF4AC,
        0x027C,	0x047D,	0x069B,	0x0DC9,	0xF19E,	0x0A53,	0x00CD, 0xF11B,	0x046A,	0x0E77,	0x0BFA,	0xF3AF,	0x0934,	0xFE4A,
        0xFC1F,	0xF70B,	0x06DF,	0xF69F,	0x0CE2,	0x012C,	0xFB46, 0xFE97,	0x0346,	0x0CFC,	0xF7D3,	0x09F5,	0x0561,	0xF39D,
        0x0DE0,	0xFFC7,	0x01BE,	0x0D10,	0xFD24,	0x0472,	0x094A, 0x082E,	0xF759,	0x09DA,	0xF93C,	0x0E55,	0x0709,	0x0DDF,
        0x0E81,	0x043B,	0xF97F,	0xF784,	0x0872,	0xF591,	0xFA1F, 0xFD34,	0x08B2,	0xF6FF,	0x0D69,	0x0D12,	0xF1A3,	0x0639,
        0x023E,	0xF27E,	0x0969,	0xF3DD,	0x031B,	0xF495,	0x0B80, 0xF60A,	0x0359,	0xFE4C,	0x0367,	0xF86A,	0x0311,	0x07F7,
        0x0467,	0x01F9,	0x0469,	0xFF2B,	0xFD2A,	0x08B0,	0x029E, 0xF863,	0xF21C,	0xF888,	0xF291,	0x06C2,	0xF447,	0x0156,
        0xFEF4,	0xF904,	0xF608,	0xF757,	0x08AF,	0xF494,	0x08F3, 0x0D58,	0x0AE3,	0x0D4E,	0x0520,	0xFD23,	0x0D21,	0x0C6F,
        0x0521,	0xF9FC,	0x0531,	0xF65F,	0x0654,	0x03C3,	0xF6AD, 0x0A79,	0xFBAE,	0xFBD2,	0x0AD5,	0x06BD,	0xF49C,	0x0975,
        0xF69C,	0x0E9E,	0xFD19,	0xFA51,	0x0DE1,	0x047D,	0x0715, 0x07E2,	0xFBCB,	0xFE70,	0x0EA8,	0xFD2D,	0xF3A2,	0xF143,
        0xFCA8,	0x0A89,	0xFBB5,	0xF23A,	0x0C89,	0xF47E,	0x0DCB, 0x0E83,	0xF6A8,	0xFE38,	0x05AC,	0x0E76,	0xF999,	0x0593,
        0x0BA2,	0xFBF9,	0x00C1,	0x00A8,	0x0D10,	0x045F,	0xFECE, 0xF9D3,	0xF984,	0x0102,	0xFBD6,	0xF9BC,	0x0288,	0x0CBE,
        0x074C,	0x0AF8,	0x0277,	0x0683,	0xF331,	0xF77A,	0xFDCF, 0xFAE9,	0x011A,	0x08A6,	0xF720,	0x0938,	0x0AC4,	0xFA7C,
        0x0EB2,	0x0861,	0xF22A,	0x00E1,	0xFD6E,	0x0101,	0x0747, 0x0A55,	0x02DF,	0xFC4F,	0xFA61,	0x0553,	0x0E4D,	0x0D34,
        0x0659,	0x028D,	0xFB54,	0xF7A8,	0xF47E,	0x030F,	0x03C0, 0x08E6,	0x00B8,	0xF4FF,	0x0698,	0xF614,	0xFCE3,	0xF33E,
        0x0769,	0xF1D7,	0xF640,	0xFB00,	0xF621,	0xFFC5,	0xF63D, 0xF99F,	0xF77D,	0x0374,	0xF9CD,	0x0925,	0x053F,	0xF90B,
        0x07E9,	0x06E2,	0xF1FD,	0xFBCF,	0xFF01,	0xF941,	0xF695, 0xF35D,	0xFD1D,	0xF9C4,	0xF6C5,	0xF3F7,	0x08F4,	0xF2B4,
        0x0CC0,	0xFF56,	0x0E72,	0x0A6B,	0x0B63,	0xFE87,	0xF240, 0xFFD8,	0x0948,	0x0940,	0x0E95,	0xF482,	0x0078,	0xFAEB,
        0xFD76,	0x090C,	0x0E76,	0x0A90,	0xF1B1,	0x07FA,	0xF285, 0xFB93,	0x01BC,	0x063D,	0x04E4,	0xFCB6,	0x0CEB,	0x0715,
        0xF735,	0x0BE8,	0xFDF6,	0x0570,	0x0B13,	0x072A,	0xF624, 0x05B8,	0xF4DD,	0xFCB8,	0x0795,	0xFCE5,	0x08DA,	0xF19D,
        0x0189,	0x0B18,	0xF435,	0xF189,	0xF8E5,	0xF3DC,	0xF40E, 0xF85A,	0x0372,	0x0879,	0xF307,	0xF973,	0x0A1F,	0xF3D9,
        0xFCDE,	0xFAA7,	0xF728,	0xF653,	0xF5AD,	0x02AC,	0x0CF4, 0x0D2C,	0xF4CB,	0xF9E6,	0x0CBA,	0xF3F9,	0xFFE0,	0xF3FD,
        0x08EE,	0xF673,	0x03C7,	0x0EBF,	0x064F,	0xF89E,	0xF111, 0xF225,	0xFDD5,	0xFE0C,	0xF305,	0xFBFD,	0x04D3,	0x0732,
        0x04D7,	0xF8F7,	0xFED6,	0x07F2,	0xF7A5,	0xF636,	0xFFEA, 0xF344,	0xFA2B,	0xFA4F,	0x0936,	0xFF55,	0xF856,	0x0891,
        0x0C8E,	0xFC69,	0xF251,	0xF319,	0x0EBD,	0xF32D,	0xF78E, 0x03CA,	0x02AD,	0x0465,	0xF39B,	0x073E,	0xF361,	0xF9B6,
        0x0044,	0x0E21,	0x0ED7,	0x00FB,	0x0701,	0xFE7E,	0xFFE8, 0x072B,	0x078C,	0x0651,	0x0EED,	0xF14B,	0xF260,	0x0CC9,
        0xF7A5,	0x0CA3,	0x08C3,	0x0C00,	0x0BE5,	0x03A0};

    const std::vector<int> e_{0X56,	0X85,	0X78,	0X03,	0XC0,	0XDB,	0X00,	0X9A,	0X4C,	0X33,	0X1E,
                               0X43,	0XCE,	0X64,	0X1B,	0X77,	0X4D,	0X02,	0XFA,	0X37,	0X47,	0X0C,
                               0XDC,	0X7E,	0X3C,	0X70,	0X41,	0XC9,	0XD2,	0XF1,	0X24,	0X09,	0X74,
                               0X37,	0X20,	0X75,	0X91,	0X10,	0XD1,	0XB1,	0XB0,	0XAF,	0X63,	0X70,
                               0X4E,	0X21,	0XB8,	0X69,	0XFE,	0X3C,	0X40,	0XA4,	0X6C,	0X9A,	0X5B,
                               0X6E,	0XE2,	0X30,	0X27,	0X39,	0XE4,	0X63,	0X2D,	0X5A,	0X5E,	0X5B,
                               0XD6,	0X77,	0XD9,	0XA1,	0X4B,	0XA6,	0X93,	0X5A,	0XC4,	0XBC,	0X3B,
                               0X73,	0X97,	0X69,	0X1B,	0X57,	0X0D,	0X46,	0XC4,	0X00,	0X1A,	0X48,
                               0XC1,	0XBA,	0XD6,	0X59,	0XF8,	0X39,	0XAE,	0X9B,	0X7A,	0XDA,	0X4F,
                               0X05,	0XE3,	0XA4,	0X8E,	0X17,	0X08,	0X13,	0XF5,	0X5F,	0XF7,	0X87,
                               0X48,	0X61,	0X5D,	0X40,	0XF5,	0X53,	0X2C,	0X90,	0XD1,	0XE2,	0X2B,
                               0XA1,	0XAD,	0X16,	0X0E,	0X63,	0X91,	0X9A,	0X48,	0X67,	0X53,	0XC5,
                               0XE4,	0X5D,	0X6D,	0X9F,	0X18,	0X8C,	0X70,	0XA5,	0X22,	0X7D,	0X3A,
                               0XC0,	0X6D,	0X4D,	0X4F,	0X5D,	0X2B,	0XDB,	0X2F,	0X46,	0XE0,	0X62,
                               0XB0,	0XC0,	0X0D,	0X64,	0XBB,	0X6C,	0XE1,	0X72,	0X84,	0X7D,	0X20,
                               0XAC,	0X05,	0X05,	0XFF,	0X2B,	0X2D,	0XDA,	0X15,	0X5A,	0X32,	0X6C,
                               0X43,	0XB5,	0X9E,	0X6A,	0XA3,	0XD8,	0X67,	0XEC,	0XA8,	0XE8,	0X6D,
                               0XA5,	0X18,	0XE8,	0X3A,	0XD9,	0X1C,	0XCE,	0X07,	0X69,	0X90,	0X16,
                               0X50,	0X82,	0XFD,	0X74,	0X2E,	0XF0,	0XE0,	0XDD,	0X6E,	0XA8,	0X07,
                               0X39,	0X56,	0X5C,	0XD1,	0X8D,	0XF0,	0XCA,	0X91,	0XBD,	0XB2,	0X90,
                               0XBC,	0X85,	0XC5,	0X35,	0XAB,	0X3D,	0X59,	0X67,	0X87,	0X4F,	0XC2,
                               0X78,	0X2D,	0X29,	0X60,	0XF2,	0X7D,	0X2B,	0X7C,	0X5D,	0X6D,	0XEF,
                               0X41,	0XFE,	0XEE,	0XA9,	0X8B,	0XC6,	0X66,	0X66,	0XC2,	0X0E,	0X8B,
                               0X98,	0X74,	0X60,	0X4D,	0X91,	0X5A,	0X57,	0XB9,	0X80,	0X0C,	0X2F,
                               0X6D,	0X25,	0XA9,	0X97,	0X54,	0X2D,	0X21,	0XC8,	0XFC,	0XAC,	0X00,
                               0X0E,	0XD8,	0X9E,	0X21,	0X9A,	0X37,	0X87,	0X19,	0X37,	0X52,	0XF0,
                               0X7F,	0X03,	0XA7,	0X51,	0X36,	0X2F,	0XC0,	0XF7,	0XC6,	0X5D,	0XEA,
                               0XB8,	0X0A,	0X30,	0XE9,	0XDE,	0XA5,	0X2F,	0X92,	0X80,	0XFB,	0X17,
                               0XCD,	0X9B,	0XA1,	0XBE,	0XBD,	0XCA,	0X99,	0X83,	0X02,	0X55,	0X9B,
                               0XA1,	0X4C,	0X12,	0X44,	0XF9,	0X34,	0X71,	0X1D,	0XA1,	0X48,	0XAC,
                               0XE9,	0XF0,	0XF0,	0X1A,	0XDB,	0X55,	0X86,	0X91,	0XE7,	0X50,	0X3D,
                               0XCD,	0X2D,	0X20,	0XBC,	0X0C,	0X10,	0X6D,	0X17,	0XC4,	0X55,	0X4F,
                               0XD5,	0X52,	0X27,	0XEC,	0X4F,	0X80,	0X9A,	0X43,	0X23,	0X52,	0X79,
                               0XED,	0X0A,	0XCF,	0X46,	0XE2,	0X1D,	0X22,	0X97,	0X55,	0XD0,	0X0D,
                               0XAD,	0X76,	0X5C,	0XAE,	0XC9,	0X18,	0X28,	0XEC,	0XB4,	0XE4,	0X05,
                               0X02,	0X92,	0XBE,	0X0F,	0XFD,	0X82,	0X6D,	0XA7,	0X58,	0X81,	0X87,
                               0X19,	0XA3,	0X89,	0X17,	0XBE,	0X7C,	0XED,	0XD4,	0X86,	0X2D,	0XD9,
                               0X37,	0X3A,	0XB2,	0X76,	0XD7,	0X33,	0X4E,	0X64,	0XAA,	0X05,	0X06,
                               0XC3,	0XD5,	0XCA,	0X3E,	0XE7,	0X2B,	0X34,	0X91,	0XC6,	0X8E,	0XC4,
                               0X21,	0X8C,	0X60,	0X39,	0XD5,	0X0F,	0X1D,	0X54,	0X3E,	0X1C,	0X93,
                               0X67,	0X82,	0XAD,	0X6F,	0X22,	0XE4,	0X8A,	0X54,	0XFA,	0X6C,	0X52,
                               0XBF,	0X33,	0XEE,	0X3D,	0XDE,	0XA8,	0X2B,	0X85,	0X69,	0X2F,	0X7D,
                               0X2E,	0XD4,	0X1B,	0X69,	0XB0,	0X9F,	0XC9,	0X2F,	0X11,	0X88,	0X6A,
                               0XE0,	0X8E,	0X1B,	0XB6,	0XB7,	0X52,	0XD6,	0X3C,	0X8F,	0X70,	0X12,
                               0XD8,	0XA3,	0X5B,	0XCE,	0X43,	0X6D,	0X2C,	0XE9,	0X12,	0X78,	0XB8,
                               0X49,	0X74,	0XAF,	0X74,	0X1D,	0XCC,	0X4C,	0XA2,	0X29,	0X39,	0X3C,
                               0X4F,	0X6E,	0X61,	0X4F,	0XB2,	0X19,	0X59,	0XD5,	0X1B,	0XF5,	0XCC,
                               0X64,	0X7D,	0X5E,	0X31,	0X22,	0X24,	0X46,	0XD4,	0X56,	0X7D,	0X7D,
                               0X0D,	0XF8,	0X2F,	0XD7,	0XBD,	0X14,	0XB3,	0X6F,	0X1E,	0X36,	0XEB,
                               0X57,	0X46,	0X13,	0XC2,	0X71,	0XB1,	0X2D,	0XEE,	0XD9,	0X87,	0X20,
                               0X6E,	0X1A,	0X49,	0XDC,	0XA0,	0X79,	0X84,	0X6A,	0X5A,	0XBB,	0X18,
                               0X19,	0XD6,	0XEF,	0XCD,	0X0B,	0X95,	0X98,	0X37,	0X94,	0X2B,	0X16,
                               0XE8,	0XC5,	0XEA,	0X2C,	0X7C,	0XCA,	0X16,	0X66,	0X17,	0XBB,	0XB3,
                               0XB2,	0X49,	0X07,	0X44,	0X7F,	0X21,	0XFF,	0XAA,	0XD5,	0XC2,	0X76,
                               0X31,	0XE7,	0XB3,	0X0F,	0X99,	0X79,	0XF4,	0XD4,	0X90,	0XB8,	0X14,
                               0X62,	0XEA,	0X7A,	0X12,	0XB4,	0XBC,	0X88,	0XA3,	0XDC,	0X77,	0X9C,
                               0X80,	0X0C,	0XC8,	0XE1,	0X10,	0XAB,	0X0B,	0XF5,	0X0C,	0XE0,	0XF8,
                               0XC8,	0X77,	0X44,	0X35,	0X77,	0XAD,	0XC1,	0XC6,	0XA4,	0X90,	0XEE,
                               0X4C,	0X8B,	0X18,	0XF4,	0XE3,	0X01,	0X3A,	0XD4,	0X1C,	0X1D,	0X54,
                               0X78,	0X57,	0XFB,	0X3D,	0XF5,	0XBB,	0X97,	0XEB,	0X2D,	0X9B,	0X4D,
                               0X13,	0X54,	0XE2,	0X88,	0XBE,	0XA2,	0XD2,	0XE2,	0X89,	0XCA,	0XE1,
                               0XE3,	0X39,	0X2F,	0X63,	0X7A,	0X4E,	0X12,	0X50,	0X00,	0X22,	0X68,
                               0XDB,	0X57,	0XDE,	0X8A,	0X12,	0XC4,	0XFD,	0XCA,	0X86,	0X00,	0X8B,
                               0XAB,	0X85,	0X96,	0X69,	0XCF,	0X4A,	0X3C,	0XF7,	0X57,	0X37,	0X07,
                               0X02,	0XC2,	0XB0,	0X84,	0X5C,	0XDE,	0X46,	0XCE,	0X51,	0XC3,	0X88,
                               0X48,	0X1D,	0X48,	0XD7,	0X7D,	0XCC,	0XC1,	0X23,	0XF3,	0X12,	0X56,
                               0XE4,	0X57,	0X75,	0X82,	0X5F,	0XEC,	0X3E,	0X01,	0X83,	0XFE,	0X2A,
                               0X77,	0X4D,	0X41,	0X0E,	0XE0,	0X51,	0X32,	0XA6,	0XB4,	0XD6,	0X4D,
                               0XE1,	0XDD,	0X48,	0X54,	0X0D,	0XBF,	0X1C,	0X0D,	0XD0,	0X27,	0XC6,
                               0X3C,	0X43,	0XC8,	0XF2,	0XB8,	0X70,	0X81,	0X8F,	0XB8,	0X14,	0XDD,
                               0X36,	0XEB,	0X06,	0XE2,	0X63,	0X4A,	0XE9,	0X69,	0XA5,	0XA5,	0XA7,
                               0X58,	0X79,	0X53,	0X34,	0XCB,	0X06,	0X88,	0X66,	0XD0,	0X39,	0X52,
                               0X35,	0X9A,	0XED,	0X61,	0XF1,	0X42,	0X6C,	0XA1,	0X72,	0X43,	0X79,
                               0X87,	0XBA,	0X7C,	0XC6,	0X60,	0XA7,	0X85,	0X22,	0X07,	0X66,	0XD8,
                               0X21,	0XC1,	0XC7,	0X57,	0XAC,	0X8D,	0X6B,	0X4A,	0X89,	0X8D,	0X6E,
                               0X1C,	0XA3,	0XDC,	0X64,	0X64,	0X26,	0XA5,	0X18,	0X9B,	0XCA,	0XE0,
                               0XE3,	0X8A,	0XA1,	0X56,	0X70,	0XC1,	0X21,	0X2F,	0X09,	0XDE,	0X3C,
                               0X53,	0X9A,	0X47,	0X82,	0X49,	0X52,	0X89,	0XF0,	0X8F,	0XA6,	0X9B,
                               0X6E,	0X4B,	0XE5,	0XD4,	0XA6,	0X0C,	0XD7,	0X8A,	0X11,	0XA9,	0XCE,
                               0XEB,	0XFA,	0X8D,	0X42,	0X4D,	0X38,	0X87,	0XA1,	0X8A,	0X82,	0X1B,
                               0X7E,	0X93,	0X0C,	0XE2,	0X09,	0X66,	0X4F,	0XF9,	0X20,	0X34,	0X66,
                               0X7E,	0X57,	0X31,	0X3E,	0XA5,	0X61,	0X8C,	0XB3,	0X78,	0X3B,	0X80,
                               0X1B,	0XE6,	0X88,	0X6C,	0X74,	0X8E,	0X49,	0X4A,	0X41,	0X75,	0X54,
                               0X93,	0XB5,	0X73,	0X57,	0X2A,	0X9C,	0X25,	0XBB,	0XEE,	0X81,	0X21,
                               0XDD,	0XDE,	0X2A,	0XFA,	0X87,	0X29,	0XC5,	0X60,	0X63,	0X65,	0XA8,
                               0XB2,	0XA7,	0XC3,	0X5A,	0X5A,	0X24,	0XF9,	0XC3,	0X1C,	0X88,	0XFA,
                               0X0E,	0XE9,	0X69,	0X8E,	0XB0,	0XC6,	0XE5,	0X1C,	0XB8,	0X0A,	0X01,
                               0X8D,	0X67,	0X88,	0XA3,	0X67,	0XB3,	0X18,	0XC4,	0X4F,	0XEE,	0X46,
                               0X70,	0XFC,	0X91,	0XA7,	0XA4,	0X9B,	0X23,	0X45,	0X80,	0XA7,	0XAC,
                               0XB9,	0X01,	0X5B,	0X40,	0XC2,	0X28,	0XD8,	0X52,	0X40,	0X0A,	0XB7,
                               0X3B,	0X6D,	0XFB,	0X40,	0X1A,	0XA8,	0X22,	0XBE,	0X51,	0XA8,	0XF3,
                               0X6A,	0XC2,	0XB8,	0XDA,	0X9C,	0X52,	0X0D,	0X8E,	0X34,	0X85,	0X8D,
                               0XE5,	0X21,	0XBF,	0XA9,	0X4C,	0X68,	0XB0,	0X65,	0X41,	0XE1,	0XD2,
                               0X99,	0X4F,	0X39,	0XA7,	0XCE,	0X5A,	0XB5,	0X4D,	0X7B,	0X29,	0X54,
                               0XBA,	0XD2,	0X55,	0XD3,	0XDB,	0X12,	0XC2,	0X53,	0X78,	0X48,	0XFA,
                               0X71,	0X53,	0XF1,	0X67,	0X13,	0X8D,	0X2E,	0XA8,	0XD9,	0X34,	0X66,
                               0XDE,	0X79,	0XAA,	0X15,	0X44,	0XE6,	0XBA,	0X06,	0X6C,	0X89,	0X93,
                               0XBB,	0X72,	0XDD,	0X07,	0X4A,	0X1E,	0X18,	0X96,	0XB1,	0XCE,	0XD7,
                               0X92,	0X2C,	0X9A,	0XE8,	0XB3,	0XE4,	0X0C,	0X10,	0X54,	0X34,	0X40,
                               0X8B,	0XFC,	0XC7,	0XBE,	0X65,	0XDF,	0X42,	0X05,	0X9C,	0XFB,	0XDA,
                               0X8A,	0X21,	0X97,	0XC7,	0X4C,	0X57,	0XC0,	0X9D,	0XCD,	0X07,	0X12,
                               0XAA,	0XB9,	0XEF,	0X23,	0X1C,	0X41,	0X1A,	0X45,	0X35,	0X46,	0X52,
                               0X70,	0XAC,	0X4C,	0X3A,	0XBA,	0XC9,	0X0C,	0X30,	0X23,	0X07,	0X0E,
                               0XD9,	0XC2,	0X02,	0X74,	0X75,	0X2A,	0X8B,	0X7F,	0X49,	0X18,	0X5A,
                               0X2A,	0X9B,	0X93,	0X5A,	0X68,	0X65,	0X91,	0X46,	0XE5,	0X36,	0XB4,
                               0X32,	0X77,	0X18,	0X78,	0XF0,	0X11,	0XCC,	0X0B,	0X89,	0X7C,	0X1A,
                               0X62,	0X81,	0XBA,	0XDC,	0X89,	0XB9,	0XDA,	0X5F,	0XA1,	0X43,	0X9C,
                               0X7C,	0XD0,	0X6B,	0XB7,	0XD4,	0X36,	0XBC,	0XC5,	0X5D,	0X86,	0XE9,
                               0X7C,	0X64,	0X92,	0X94,	0XFE,	0XE0,	0X87,	0XE9,	0X37,	0X13,	0XFD,
                               0XB3,	0X91,	0XCF,	0XAB,	0X9D,	0X52,	0X3A,	0X2A,	0XDB,	0X16,	0XBD,
                               0XED,	0X2F,	0XA3,	0XE0,	0X8F,	0X48,	0X56,	0XB3,	0X03,	0XA9,	0XEE,
                               0X72,	0X53,	0X5A,	0XD8,	0XF9,	0X01,	0X03,	0X9E,	0XE8,	0XA5,	0X21,
                               0X28,	0X0E,	0X95,	0X93,	0XD8,	0X1E,	0X31,	0XC9,	0XB6,	0XF4,	0X86,
                               0X39,	0XD9,	0X52,	0X0F,	0XAA,	0X3F,	0XD4,	0X1F,	0XB3,	0X18,	0X1B,
                               0XC3,	0X1E,	0X93,	0X93,	0X55,	0XEC,	0XEB,	0X38,	0XAD,	0X4B,	0X97,
                               0XD1,	0XBE,	0XF2,	0XB8,	0X2C,	0X4C,	0XE5,	0X54,	0X1D,	0X2D,	0XC4,
                               0XB5,	0XB5,	0X62,	0X79,	0X5D,	0X6F,	0X23,	0X69,	0XF2,	0XC1,	0X89,
                               0X58,	0XC4,	0X8B,	0X9F,	0X05,	0X6D,	0XE8,	0XEA,	0XC8,	0X1E,	0XCA,
                               0X63,	0X72,	0X43,	0XCC,	0X40,	0X2E,	0XD8,	0XA1,	0XF8,	0XE9,	0X6B,
                               0X5F,	0X14,	0X15,	0X21,	0XA2,	0X64,	0XE9,	0X85,	0X58,	0XCF,	0X46,
                               0X96,	0X4B,	0X12,	0XFB,	0XEC,	0XBA,	0X8F,	0X97,	0X76,	0X63,	0XEC,
                               0X8E,	0XEA,	0X36,	0X0F,	0X1D,	0XD7,	0XE6,	0X4F,	0XB4,	0XBB,	0XC2,
                               0XA0,	0X3D,	0XBC,	0XEE,	0X02,	0XC3,	0XFB,	0X3E,	0XC4,	0XD3,	0X39,
                               0X91,	0X35,	0XED,	0XE1,	0XCC,	0XF3,	0XF9,	0X56,	0X7A,	0X85,	0XFD,
                               0XE3,	0X89,	0XEE,	0X09,	0X30,	0X90,	0X93,	0X6E,	0XA7,	0X59,	0X3D,
                               0X12,	0X2C,	0X8E,	0XD3,	0X14,	0X12,	0XA2,	0X24,	0XEB,	0XD8,	0X93,
                               0X56,	0X1C,	0X79,	0X42,	0XAD,	0X23,	0X2C,	0X65,	0X0E,	0X7D,	0X15,
                               0XAB,	0XD7,	0X81,	0X11,	0XC4,	0X2E,	0XD7,	0X07,	0XD9,	0XC0,	0X78,
                               0XEF,	0XDE,	0X13,	0X95,	0X9E,	0X30,	0XCA,	0X2E,	0XED,	0X7A,	0X24,
                               0X16,	0X59,	0X93,	0X59,	0XE6,	0X51,	0XA3,	0X0D,	0X80,	0X0B,	0XE5,
                               0X1D,	0X00};

//decryption
    const std::vector<int> aDecrypt{0xFFF0,	0xFFD7,	0x005F,	0x0075,	0xFF94,	0xFFA3,	0x0031,
        0x0058,	0xFFE3,	0xFF96,	0x000A,	0x002A,	0xFFBD,	0xFFAE, 0xFFED,	0xFFFE,	0x0017,	0x0031,	0xFFF6,	0xFF86,	0xFF6C,
        0xFFF4,	0x0006,	0xFFFB,	0xFFBE,	0xFFDE,	0x0043,	0x0046, 0x001F,	0x0003,	0xFFCB,	0xFFF0,	0x0020,	0x006C,	0x002D,
        0xFF48,	0xFF7D,	0x0028,	0xFFC8,	0xFF92,	0x0008,	0x0062, 0x006C,	0x000C,	0xFFCD,	0xFFA1,	0xFFCB,	0xFFEA,	0x0025,
        0x002C,	0xFF8E,	0xFFA9,	0x0013,	0xFFF9,	0x0030,	0x005F, 0x0051,	0x0020,	0x001F,	0x0062,	0x008F,	0x0023,	0x0043,
        0x0072,	0x006B,	0xFFC8,	0xFF7F,	0xFF52,	0xFFC8,	0xFFFA, 0xFFE8,	0x0017,	0xFFFB,	0x003F,	0x0081,	0x000D,	0xFFF5,
        0xFFFA,	0x0055,	0xFFF7,	0xFF64,	0xFFC6,	0x008C,	0x00BA, 0x0057,	0x0055,	0xFFF4,	0x0008,	0x000A,	0xFF59,	0xFF70,
        0xFFF0,	0xFFB1,	0xFFAD,	0x002B,	0x0077,	0x006C,	0x0048, 0xFFF5,	0x0020,	0xFFAA,	0xFFC3,	0x0079,	0x002F,	0x0053,
        0x0004,	0x0006,	0xFFF6,	0x0014,	0x006E,	0x003D,	0x0048, 0x003A,	0x0053,	0xFFB8,	0xFF91,	0x0075,	0x002B,	0x005D,
        0xFFED,	0xFFFF,	0x0058,	0xFFA1,	0xFF51,	0xFF23,	0xFF63, 0xFFDC,	0x0036,	0x0032,	0x003B,	0x005E,	0xFFF7,	0xFFF6,
        0x0002,	0xFFAC,	0xFF83,	0x0019,	0x009A,	0x009B,	0x0038, 0xFFB1,	0x0024,	0x007E,	0x0034,	0xFFEF,	0xFF8F,	0xFF1E,
        0xFEE7,	0xFF2E,	0x0043,	0x003D,	0xFFC8,	0x0033,	0x004D, 0xFF5C,	0xFF3D,	0xFF5F,	0xFF7A,	0xFFF7,	0xFFF2,	0xFF7E,
        0xFF6B,	0xFFA4,	0x001B,	0xFFF6,	0xFFD5,	0xFF3D,	0xFFDE, 0x0070,	0x004C,	0xFF90,	0xFF57,	0xFFD0,	0x004A,	0xFFC3,
        0xFFC7,	0x0001,	0x0086,	0x00A6,	0xFFDA,	0xFFCB,	0x0014, 0xFFD1,	0xFFA3,	0xFF91,	0x0009,	0x001C,	0x0047,	0xFF92,
        0xFF9F,	0xFFFC,	0xFFFD,	0xFFC9,	0xFF79,	0xFF82,	0xFFEA, 0x007C,	0x002C,	0xFFBE,	0x000F,	0x000B,	0x0020,	0x0006,
        0x0020,	0xFFEA,	0xFFD5,	0xFFB8,	0xFF7D,	0x0031,	0xFFBC, 0xFFAC,	0xFFE3,	0xFFF8,	0x0036,	0x003A,	0xFFCB,	0xFFCD,
        0xFFE1,	0xFF82,	0x0040,	0x0031,	0xFF8D,	0xFFE5,	0xFFF8, 0x0028,	0x00BD,	0x005D,	0x005A,	0x001D,	0x0000,	0xFFF5,
        0x004B,	0x001C,	0x006E,	0x0032,	0xFFA5,	0xFFB6,	0x0004, 0x0042,	0xFF93,	0xFEE9,	0xFFDA,	0x00A8,	0x007D,	0xFFC4,
        0xFFD4,	0x009D,	0x0071,	0xFFA1,	0xFF4A,	0xFFC8,	0xFFCF, 0x0018,	0x004D,	0x0002,	0xFFE3,	0xFFD0,	0xFFF6,	0x0055,
        0x0015,	0x0016,	0x006B,	0x007E,	0xFFAA,	0xFF5E,	0xFF47, 0xFFAD,	0xFF99,	0xFFC6,	0xFF93,	0xFFB3,	0x0048,	0x0035,
        0x0005,	0x004E,	0xFFEF,	0x000D,	0x0036,	0x005E,	0xFFE3, 0xFFED,	0xFF5A,	0xFFAA,	0xFFF2,	0x0025,	0x002E,	0xFFF8,
        0x0008,	0x0087,	0x000D,	0xFFD1,	0x002D,	0x0025,	0x000F, 0xFFFD,	0x006D,	0xFFED,	0xFF64,	0x0030,	0x006E,	0x001D,
        0xFFB6,	0xFF85,	0xFFEF,	0x000F,	0x0004,	0x0070,	0x003A, 0x001B,	0x004A,	0xFFBF,	0xFFFA,	0x0008,	0x001D,	0x0087,
        0x0055,	0x0047,	0x009E,	0x001E,	0x0004,	0xFFD5,	0xFFC3, 0x000F,	0xFFD3,	0xFF80,	0x0040,	0x0057,	0x0008,	0x001C,
        0x0056,	0x0060,	0x003B,	0x003F,	0x002B,	0xFF9E,	0xFFDF, 0xFFFF,	0xFFDE,	0xFFEC,	0xFFC4,	0xFF8D,	0xFF71,	0x002C,
        0x003E,	0xFFE6,	0x003D,	0xFFBB,	0xFFB3,	0xFFF7,	0xFF9D, 0xFF89,	0xFFF9,	0xFFC1,	0x001C,	0x0007,	0xFFD7,	0x000C,
        0x000B,	0xFFB8,	0x0006,	0x0029,	0x0066,	0x0053,	0xFFFE, 0xFFB2,	0xFFDE,	0xFF90,	0xFF96,	0xFFC9,	0xFFBE,	0xFF96,
        0x0017,	0x007B,	0xFFFB,	0xFF5B,	0x0031,	0xFFBE,	0xFFB0, 0x0018,	0x006B,	0xFFEF,	0xFFC2,	0xFFB9,	0xFFE1,	0x0033,
        0x00AF,	0x006B,	0x0039,	0x0031,	0x002E,	0xFFFE,	0x0046, 0x0084,	0x0037,	0xFFEA,	0xFFCA,	0xFF59,	0xFF3D,	0x0013,
        0xFFE6,	0x0030,	0x0021,	0x0043,	0x0012,	0xFFD4,	0xFF82, 0xFFA9,	0xFF77,	0xFFA1,	0xFFBD,	0xFFE2,	0x0007,	0x003E,
        0x0023,	0xFFF4,	0xFFAA,	0xFFB6,	0xFFF1,	0x0003,	0xFFC8, 0xFFEF,	0xFFC9,	0x000D,	0xFFF5,	0x0013,	0x000B,	0x004E,
        0x0063,	0x004B,	0xFFC6,	0xFFEA,	0x001B,	0x0029,	0x0078, 0x005E,	0x0024,	0x0047,	0x002D,	0x001C,	0xFF83,	0x0016,
        0xFFFF,	0xFFD2,	0xFF30,	0xFF97,	0xFFA4,	0x0026,	0x001A, 0x0059,	0x0007,	0x0042,	0x0003,	0xFFD0,	0xFFB3,	0xFF92,
        0x0024,	0x0046,	0x0021,	0x0018,	0x005D,	0x0028,	0x0025, 0x001D,	0xFFFA,	0x005E,	0x001F,	0xFF55,	0xFF95,	0xFFD7,
        0xFF9B,	0xFF9A,	0xFFDE,	0x003F,	0x00CC,	0xFFEA,	0x0018, 0x0028,	0x0060,	0xFFF1,	0x0040,	0x0026,	0x006D,	0x0033,
        0x000A,	0xFFFE,	0x0032,	0x005E,	0x0088,	0x005C,	0xFFD6, 0xFFEF,	0xFF8C,	0xFFE3,	0x0022,	0xFFF2,	0x003B,	0x0044,
        0x0050,	0xFF9F,	0xFF6C,	0xFF9A,	0xFFEA,	0xFF8E,	0xFFC5, 0xFFB0,	0x0052,	0x005F,	0x005F,	0x0003,	0x002E,	0x0037,
        0xFFF1,	0xFF44,	0xFFF4,	0x0079,	0x003C,	0x0022,	0xFF8B, 0xFFC4,	0x0002,	0x0091,	0x0027,	0x0051,	0xFFD4,	0xFFC2,
        0xFFEF,	0xFFA6,	0x004F,	0xFF93,	0x0029,	0x0039,	0x0064, 0x007E,	0x0018,	0xFFD8,	0x0010,	0xFFCE,	0xFFB4,	0xFFC6,
        0xFFA0,	0x0021,	0x0051,	0xFFD2,	0x005D,	0x0064,	0x004A, 0xFFEC,	0xFFAB,	0xFFF1,	0xFFD2,	0xFFF3,	0xFFE6,	0x0031,
        0x0002,	0xFFED,	0xFFDB,	0xFFC7,	0xFFDD,	0x0015,	0xFFF0, 0xFFB0,	0x0002,	0x001E,	0x0044,	0xFFBD,	0xFF7D,	0xFFD3,
        0xFFDF,	0x0009,	0x003D,	0xFFC9,	0x00A0,	0x0008,	0x0044, 0xFFD7,	0xFF99,	0x0067,	0x0012,	0x004F,	0xFFB5,	0xFFF5,
        0x0019,	0x002A,	0xFFF9,	0xFFF1,	0xFFF9,	0x004F,	0x0025, 0x0004,	0x0007,	0x0014,	0xFF92,	0xFFCE,	0xFFB1,	0xFFE5,
        0xFFED,	0x008B,	0xFFE2,	0x0018,	0x0031,	0x0010,	0x0042, 0xFFC1,	0x000A,	0x001B,	0xFFEA,	0x003E,	0xFFD1,	0xFFC6,
        0x0004,	0xFFE9,	0x0021,	0xFFFD,	0x0028,	0x0005,	0x0023, 0xFFCF,	0xFFE9,	0x0031,	0x0051,	0xFFDB,	0xFFBE,	0xFFFB,
        0x0013,	0xFFCA,	0xFF88,	0xFF70,	0xFFB6,	0x0008,	0x002A, 0xFFBF,	0xFFB9,	0xFFD5,	0x0067,	0xFFBA,	0xFFC2,	0xFFAA,
        0x0039,	0x001C,	0xFFEA,	0x002D,	0xFFED,	0xFFDF,	0xFF6F, 0xFF9F,	0x0013,	0x0022,	0x0044,	0xFF90,	0xFFCE,	0xFFC0,
        0xFFFA,	0x0014,	0x0013,	0xFFB9,	0x000A,	0x000A,	0x001D, 0x0051,	0xFFEE,	0xFFFE,	0x00BE,	0x001C,	0x002C,	0xFFCF,
        0xFFCA,	0x0036,	0xFFE1,	0xFF96,	0xFFBB,	0x0010,	0x005F, 0x0090,	0xFF98,	0xFFFB,	0x0076,	0x007B,	0x003F,	0x0032,
        0x0010,	0x004A,	0x0066,	0xFFC1,	0x0000,	0x0023,	0x0041, 0xFFFA,	0xFFAE,	0x0072,	0x0058,	0xFFD2,	0xFFF5,	0xFFEA,
        0x000F,	0x0035,	0xFFE1,	0xFF9A,	0xFFDD,	0xFFF1,	0xFFEB, 0xFF7F,	0xFFED,	0xFFD3,	0xFFEB,	0xFFF1,	0xFFFB,	0x000D,
        0x0023,	0x0049,	0xFFC5,	0xFFCC,	0x0014,	0xFFD3,	0xFFD0, 0xFFE3,	0x0014,	0xFFA3,	0x0004,	0x001D,	0x0026,	0x0008,
        0x0003,	0x003A,	0xFFBC,	0x0021,	0xFFF0,	0xFF8B,	0xFFB8, 0xFFED,	0x0005,	0x0024,	0x000E,	0xFFCD,	0x0013,	0x0043,
        0xFFF5,	0xFFE0,	0x0041,	0x0058,	0xFFC7,	0xFF91,	0x0012, 0x0044,	0xFFB9,	0xFFDC,	0x0005,	0x001B,	0xFFF3,	0x0024,
        0x0017,	0x004D,	0x0013,	0xFFBB,	0xFFF0,	0x0060,	0x0053, 0x003E,	0x0012,	0x0058,	0x001E,	0x000F,	0x003E,	0xFFD8,
        0x0059,	0x0073,	0xFFE9,	0x0067,	0x0015,	0x000C,	0x0000, 0xFFDC,	0xFFF3,	0x0058,	0x0018,	0xFFE5,	0x0015,	0xFFD6,
        0xFFBD,	0x003A,	0x0059,	0x009C,	0x00A8,	0xFFE3,	0xFF83, 0xFFEA,	0x0008,	0x0059,	0x0041,	0x000C,	0xFFB7,	0xFFB1,
        0x002F,	0x0068,	0x0068,	0x0001,	0xFFCD,	0xFFDD,	0x003B, 0xFFC0,	0xFF87,	0xFF98,	0x0010,	0xFFB7,	0x007B,	0xFFFA,
        0xFFC5,	0x000D,	0x00A1,	0xFFD9,	0xFFE0,	0xFFD9,	0x000A, 0x0003,	0xFFBE,	0xFFA7,	0x0004,	0x0029,	0x0054,	0xFFC2,
        0xFF9E,	0xFFD8,	0xFFED,	0xFFEF,	0x003A,	0x0009,	0xFFC7, 0x0029,	0xFFD4,	0x0057,	0xFFD3,	0xFFA1,	0xFFDE,	0x0009,
        0xFFD7,	0xFFC3,	0x0022,	0xFF9A,	0xFFE0,	0xFFB2,	0x0045, 0xFFF7,	0x00AD,	0xFFFB,	0x001A,	0xFFD6,	0xFFED,	0x0002,
        0xFFF0,	0x002B,	0x0030,	0x005C,	0x0053,	0xFFF1,	0x0036, 0x0014,	0xFFF3,	0xFFD3,	0x0020,	0x0004,	0x003C,	0x006D,
        0xFFFD,	0x0073,	0xFFFA,	0xFFC3,	0x003D,	0xFFBA,	0x0050, 0x0028,	0x0001,	0xFF87,	0xFFD1,	0xFFFC,	0x003E,	0x0039,
        0xFFF7,	0x0000,	0xFFE5,	0xFFF4,	0x0009,	0x0036};

//a mod 3
    const std::vector<int> a3{-1,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 1,	-1,	 1,	 0,	-1,
                -1,	-1,	 1,	-1,	 1,	-1,	 1,	-1,	 0,	 0,	 1,	 0,	-1,  1,	 1,	 1,	 0,	 1,	-1,	-1,	 0,	 0,	-1,	 1,	 1,	 1,
                1,	-1,	-1,	 0,	 0,	 0,	 1,	 1,	-1,	 1,	-1,	 0,	 0,  1,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	-1,	-1,	 1,	 0,	-1,
                1,	 0,	 0,	 1,	 0,	 0,	-1,	 1,	 0,	 0,	 1,	 1,	 0,  1,	 0,	 0,	-1,	-1,	 0,	 0,	 1,	 0,	-1,	 1,	 1,	 0,
                -1,	-1,	 1,	 1,	-1,	 0,	 0,	 1,	-1,	 1,	-1,	 1,	-1, -1,	 1,	 0,	-1,	-1,	-1,	 1,	 0,	 1,	-1,	 0,	 0,	 0,
                1,	 0,	-1,	-1,	 1,	 1,	-1,	 1,	-1,	 0,	 0,	-1,	-1,  1,	 0,	-1,	-1,	 0,	 1,	 1,	 1,	-1,	-1,	-1,	 0,	 0,
                1,	 1,	 1,	-1,	 1,	 0,	 1,	 1,	 1,	 0,	-1,	 1,	 0,  1,	 1,	 0,	 1,	-1,	 1,	 1,	 0,	-1,	-1,	 0,	-1,	 1,
                1,	-1,	-1,	 0,	-1,	-1,	 0,	 1,	-1,	 1,	 1,	 1,	-1,  1,	 0,	 0,	 0,	 1,	-1,	 1,	-1,	-1,	 0,	-1,	 0,	 0,
                -1,	 1,	-1,	 0,	 0,	-1,	-1,	 0,	-1,	-1,	-1,	 0,	 1,  1,	 1,	 0,	 1,	 1,	 0,	 1,	 1,	 0,	-1,	 0,	 1,	 1,
                -1,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	 1,	 0,	 1,	-1, -1,	-1,	 1,	 1,	 0,	-1,	 0,	 1,	 0,	-1,	 0,	 1,	 1,
                -1,	 1,	 1,	 1,	-1,	 0,	-1,	-1,	 1,	 0,	-1,	 1,	 0,  1,	-1,	 0,	 1,	 0,	 1,	 1,	-1,	-1,	-1,	 1,	 0,	-1,
                -1,	 0,	 1,	 1,	 0,	 1,	 1,	-1,	-1,	 1,	 1,	 1,	 1,  1,	-1,	 0,	 1,	 1,	 0,	 1,	 0,	 0,	 1,	-1,	 0,	 0,
                -1,	-1,	 1,	 0,	 1,	 0,	 1,	 1,	 1,	 0,	-1,	 1,	 0, -1,	-1,	 0,	 1,	-1,	-1,	 0,	 1,	-1,	-1,	 0,	 0,	 1,
                1,	 0,	-1,	 1,	-1,	 0,	-1,	 0,	 1,	 1,	 0,	-1,	-1,  1,	 0,	-1,	 1,	-1,	-1,	 1,	 1,	 0,	 1,	 0,	 0,	 1,
                -1,	 0,	 1,	 1,	 1,	 0,	-1,	 0,	 0,	-1,	 0,	-1,	 1,  0,	-1,	-1,	-1,	-1,	 0,	-1,	-1,	 0,	 1,	 0,	 1,	 0,
                1,	 0,	-1,	 1,	 1,	 1,	-1,	 0,	 1,	-1,	 0,	 1,	 1,  1,	 1,	 0,	 1,	-1,	 0,	 1,	 0,	 1,	 1,	 0,	 0,	 1,
                0,	 1,	 0,	 0,	 1,	 1,	-1,	 0,	 1,	-1,	-1,	 0,	 1,  1,	 0,	 0,	 1,	 1,	-1,	 1,	 1,	 1,	-1,	 0,	 0,	 0,
                -1,	-1,	 0,	-1,	 0,	 1,	 0,	-1,	 0,	 1,	 1,	 1,	-1, -1,	-1,	 0,	 1,	-1,	-1,	-1,	 1,	 0,	 0,	 0,	 1,	 1,
                0,	 1,	 0,	 0,	 0,	 1,	 1,	-1,	 0,	 1,	 1,	 0,	 1,  1,	 1,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	-1,
                1,	 0,	 1,	 1,	-1,	 1,	 1,	-1,	 0,	 1,	 1,	 1,	 1,  1,	-1,	-1,	-1,	-1,	-1,	 0,	-1,	 0,	 1,	 1,	 1,	-1,
                -1,	 0,	 1,	 1,	 0,	 1,	 0,	 1,	 0,	 1,	 0,	 0,	-1,  1,	 0,	 0,	 1,	 1,	 1,	 0,	 1,	-1,	-1,	 0,	 1,	 0,
                0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 0,	 1,	-1,  1,	-1,	 0,	-1,	-1,	 1,	 1,	-1,	-1,	-1,	 0,	 1,	 0,
                -1,	 1,	-1,	 0,	-1,	-1,	 1,	 0,	 0,	 0,	 1,	-1,	 1, -1,	-1,	 1,	-1,	 1,	 0,	 1,	 0,	 1,	 1,	 0,	-1,	 0,
                -1,	 1,	 1,	 1,	 1,	-1,	 1,	 1,	-1,	 0,	-1,	 1,	 0,  0,	 1,	 1,	 0,	 0,	 1,	 0,	-1,	-1,	 1,	-1,	 1,	 1,
                0,	 0,	 1,	-1,	-1,	-1,	 1,	 1,	 0,	-1,	 0,	 1,	 1,  0,	 0,	 0,	 1,	-1,	 0,	 1,	 1,	-1,	 1,	-1,	 1,	 1,
                0,	 1,	-1,	 0,	-1,	 0,	-1,	-1,	 1,	 1,	-1,	-1,	 1, -1,	 0,	-1,	 1,	 1,	 1,	 1,	-1,	 0,	 0,	 1,	 1,	 1,
                -1,	-1,	 0,	 0,	-1,	-1,	 0,	 1,	-1,	 0,	 1,	 1,	 1,  0,	 0,	-1,	 1,	-1,	 0,	 0,	 0,	-1,	-1,	 0,	-1,	 0,
                1,	-1,	 1,	-1,	 0,	-1,	-1,	 0,	 1,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 1,	 1,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 1,
                -1,	 0,	 1,	-1,	-1,	-1,	 0,	 1,	 1,	 0,	-1,	 0,	 0, -1,	-1,	 0,	-1,	 0,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 0,
                0,	-1,	 1,	 0,	-1,	 0,	-1,	 0,	-1,	-1,	 1,	 0,	-1,  0,	-1,	-1,	 0,	 1,	 0,	 0,	-1,	-1,	-1,	 1,	 1,	 1,
                0,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	-1,	 1,	-1,  0,	 0,	 1,	 1,	-1,	-1,	-1,	-1,	 0,	-1,	-1,	-1,	-1,
                -1,	 1,	 0,	 1,	-1,	-1,	-1,	 1,	 1,	-1,	 0,	 0,	 1,  1,	-1,	 0,	 1,	 0,	 1,	 0,	 0,	 1,	 1,	-1,	 0,	 1,
                1,	-1,	-1,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	 0,	 1,	-1,  0,	 1,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 1,	-1,	 0,
                -1,	-1,	-1,	 1,	 0,	-1,	-1,	 0,	 0,	-1,	-1,	 0,	-1,  1,	 0,	 1,	 0,	 1,	 0,	-1,	 1,	-1,	-1,	 1,	 1,	-1,
                1,	-1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

//R’ = (e – a mod 3) mod q
    const std::vector<int> R_{0x0AD1,	0xF7E6,	0x01E1,	0x0DB0,	0x0134,	0xF513,	0xFAF8,
        0x03CD,	0x0C82,	0x0DDE,	0x0680,	0xF1AA,	0x0E8F,	0x0338, 0x03F2,	0xFE76,	0x083A,	0x074A,	0xFA9A,	0x0096,	0x086F,
        0x081D,	0x0C88,	0xF2D7,	0xF83D,	0x02BE,	0xF3BE,	0x04E1, 0x036F,	0xFC86,	0xF3E8,	0x00A5,	0x0D94,	0x096D,	0xF978,
        0x0303,	0x0E72,	0xFB1E,	0xFB70,	0xFC64,	0x0B7B,	0xFBE7, 0x0CD0,	0xF6C1,	0x0D26,	0xF8B7,	0x05E0,	0xFD7B,	0xF4F3,
        0x046E,	0x0B86,	0xF673,	0x07FF,	0x0693,	0x060D,	0xFCDE, 0x0B3F,	0x00E7,	0xF953,	0xF9B5,	0xF6A6,	0x0179,	0xFF2A,
        0x0E17,	0x0103,	0xF1DB,	0xF202,	0xFA7B,	0xF2C8,	0xF957, 0x07AA,	0xF534,	0xF420,	0x0788,	0xF7D7,	0xFCD7,	0x0C1B,
        0xFAEB,	0x0CD1,	0x0867,	0x0A78,	0xF999,	0x0EB7,	0xFBF8, 0xF31F,	0xFE2F,	0x0913,	0xFF42,	0xFA13,	0xF73B,	0x07AE,
        0xF4C5,	0xF866,	0xF3BE,	0x0314,	0xF2C8,	0x01AC,	0xF4F4, 0xF876,	0xF930,	0x08F9,	0x082C,	0x0027,	0x0600,	0x0566,
        0xF96E,	0x0AAD,	0x0327,	0xFA8F,	0x0D68,	0xF55B,	0x03D8, 0x0CFC,	0xF4AB,	0xF63D,	0xFC58,	0xF3D7,	0x0EB5,	0x08E6,
        0x0E08,	0x0D33,	0x0058,	0x0840,	0xF1DF,	0x085C,	0xFE40, 0x06EB,	0x0EA8,	0x00E8,	0x055A,	0x0E67,	0xFAE6,	0x0196,
        0x0470,	0x0D94,	0xF2C2,	0xF2BE,	0xF6DC,	0xF7A6,	0xF79E, 0xF116,	0xF5F7,	0xF5C8,	0x0D28,	0x0C1D,	0x09F3,	0xF7C6,
        0x05D5,	0xFDE5,	0xF285,	0xF97B,	0x098A,	0xFAD3,	0xFBA3, 0x0106,	0x08B9,	0xF2EE,	0xFA19,	0x0C8A,	0xFC5D,	0xF938,
        0x002F,	0xF9BC,	0xF461,	0xF536,	0xF713,	0x090E,	0x08FD, 0xF786,	0x003A,	0x0C50,	0x021A,	0xF676,	0x01C7,	0x09BB,
        0xF4F7,	0xF1E6,	0x0E9E,	0x089A,	0x02FB,	0x01EE,	0xF39F, 0xF15B,	0xFA11,	0x061D,	0x077A,	0xF49D,	0xFB30,	0x01F5,
        0x05F4,	0x0CDE,	0x01BE,	0xF9C1,	0x0A66,	0x0181,	0x055A, 0xF948,	0xF50C,	0xF42E,	0xFB3B,	0x0E24,	0xF88D,	0x0456,
        0x0EA0,	0x01E1,	0x06B7,	0xFCB3,	0x0690,	0xFEF0,	0x00F6, 0x0696,	0xF411,	0xFA1E,	0x041B,	0x08BD,	0x0454,	0x09FA,
        0xF750,	0xF5FD,	0x04F7,	0x0133,	0xF2D0,	0xFC9A,	0xFBF3, 0x0158,	0xFF22,	0xF315,	0xF430,	0x0EAC,	0xF60A,	0x0D6A,
        0xF863,	0xF7DF,	0x0461,	0xF67E,	0x0B4F,	0x0809,	0x00A3, 0xF7F7,	0xF205,	0xF254,	0xF8A3,	0x0C40,	0xFA79,	0xF54E,
        0x0244,	0xFFF9,	0xFEF5,	0xFC96,	0xFABD,	0x0C9A,	0xF5B3, 0x04ED,	0xF7D4,	0xFC7B,	0x04A9,	0x00A0,	0xFD17,	0x0AE4,
        0x03EE,	0x0E55,	0x0D25,	0x0E34,	0x0EC3,	0x0431,	0xF386, 0xFEF0,	0xF2F9,	0xFCB0,	0xF18F,	0x049A,	0x0782,	0xF7B5,
        0xFE93,	0xF44C,	0x054E,	0xF6DE,	0xF6B6,	0xFBA5,	0x0E3C, 0xFDDD,	0x00AF,	0x02B3,	0xF4FD,	0xFC63,	0xF70C,	0xFD53,
        0xF2A7,	0xFB2C,	0xFE4C,	0x0434,	0x0E08,	0xFE3D,	0x0DAD, 0xFC9D,	0xF842,	0xF3F6,	0x004B,	0x0C51,	0xF7C4,	0xFE8E,
        0xFD51,	0x0748,	0xF47E,	0xF910,	0x05D1,	0xF9C0,	0x01DB, 0xFAA0,	0x088B,	0x09C8,	0xFE56,	0x0DCD,	0x053F,	0xFB13,
        0xF7A3,	0x0A38,	0xFF7B,	0x0323,	0xFF64,	0x0625,	0x0892, 0x036A,	0x0567,	0xFD00,	0x037D,	0x017E,	0xF9C5,	0x0295,
        0x0DBD,	0xF122,	0x0EB6,	0x0E8C,	0x04EF,	0xF593,	0xF334, 0xFFE3,	0x061D,	0xF23D,	0x01A4,	0xF5C1,	0x081D,	0x0C24,
        0x0A5B,	0xF969,	0x0066,	0x0B77,	0xFED6,	0xF932,	0x060D, 0xFEA7,	0x0B17,	0xFF1F,	0xF9AE,	0xF844,	0x0CA0,	0x0CCC,
        0x05EF,	0xFFA4,	0xF450,	0x00E9,	0xF403,	0xF307,	0xFCB3, 0x0B84,	0xFF94,	0xF145,	0xF517,	0xF537,	0x07D3,	0x0A49,
        0x0B82,	0x08C5,	0xFCA4,	0xF29C,	0xF6C2,	0xF31B,	0xF177, 0xFDD5,	0x0801,	0xFB97,	0xFA4A,	0x0557,	0x0BF6,	0x019C,
        0x03E2,	0x043C,	0xF64A,	0x0AEE,	0x0B6F,	0x0E34,	0x048F, 0xFFD0,	0xF432,	0x0C7B,	0x0E30,	0x0274,	0xF70E,	0x00E9,
        0xF67E,	0x0AFF,	0x0CF7,	0xFCE3,	0xFB85,	0xF861,	0x06D3, 0x089A,	0xF6E8,	0xF31D,	0xFC93,	0x0971,	0x089B,	0xF7CB,
        0xFAD6,	0x097B,	0x0379,	0x09C1,	0x0940,	0x0011,	0x068C, 0xF8B5,	0xF9AA,	0xF29C,	0x04FC,	0xFB56,	0xFA0A,	0x05D5,
        0xFA60,	0x0CD3,	0xF5DA,	0xF3EF,	0xF95E,	0x06E1,	0xFE12, 0x0157,	0x0845,	0xFBC4,	0xF3BA,	0xF494,	0x0387,	0x0902,
        0xF72B,	0x0BBF,	0xFED4,	0x0247,	0xFECA,	0xF4BF,	0x0458, 0x0EB1,	0x097E,	0xF826,	0x0018,	0x07FC,	0x0A9C,	0xFC70,
        0x010E,	0xFE10,	0x04CA,	0xF561,	0x0D64,	0xFDC9,	0xF958, 0x02A1,	0x0DBF,	0x0380,	0xF946,	0xF5EA,	0x03C3,	0x0790,
        0xFEB4,	0x0384,	0x0190,	0xF909,	0xF57B,	0xFD7D,	0xF275, 0x04C5,	0xF4C1,	0x0B4D,	0x05A4,	0xF6F3,	0x01E4,	0x099A,
        0x0CAF,	0x0D0F,	0xFBBC,	0x01C9,	0xF43B,	0xF565,	0xF78E, 0xFAA7,	0x06C9,	0x02E3,	0xF2E4,	0x0C3C,	0xFC84,	0xFAD4,
        0x029F,	0x0292,	0x0077,	0x0DB0,	0x0871,	0x0E3A,	0xF9B2, 0xF3B3,	0x0D29,	0x04C7,	0xF8E9,	0xFB4E,	0xF91F,	0x0320,
        0x06A5,	0x0312,	0xF132,	0xF277,	0xFAB1,	0x02AB,	0xFE37, 0x0909,	0xF111,	0xFDCD,	0xF355,	0x0D23,	0xFA2A,	0xF4AB,
        0x027B,	0x047D,	0x069A,	0x0DCA,	0xF19F,	0x0A53,	0x00CC, 0xF11B,	0x046A,	0x0E78,	0x0BF9,	0xF3AE,	0x0935,	0xFE4B,
        0xFC1F,	0xF70B,	0x06DF,	0xF6A0,	0x0CE2,	0x012B,	0xFB47, 0xFE96,	0x0347,	0x0CFC,	0xF7D4,	0x09F6,	0x0560,	0xF39C,
        0x0DE1,	0xFFC8,	0x01BF,	0x0D10,	0xFD23,	0x0472,	0x094B, 0x082D,	0xF75A,	0x09DA,	0xF93D,	0x0E56,	0x0708,	0x0DDF,
        0x0E81,	0x043B,	0xF97E,	0xF785,	0x0871,	0xF592,	0xFA20, 0xFD33,	0x08B3,	0xF6FE,	0x0D69,	0x0D11,	0xF1A3,	0x0638,
        0x023D,	0xF27E,	0x096A,	0xF3DD,	0x031C,	0xF494,	0x0B7F, 0xF609,	0x0358,	0xFE4D,	0x0366,	0xF869,	0x0312,	0x07F7,
        0x0468,	0x01F8,	0x0469,	0xFF2B,	0xFD29,	0x08AF,	0x029E, 0xF863,	0xF21B,	0xF888,	0xF292,	0x06C3,	0xF446,	0x0157,
        0xFEF3,	0xF903,	0xF608,	0xF757,	0x08AE,	0xF495,	0x08F4, 0x0D59,	0x0AE2,	0x0D4D,	0x0520,	0xFD24,	0x0D21,	0x0C6E,
        0x0520,	0xF9FC,	0x0531,	0xF65F,	0x0653,	0x03C4,	0xF6AD, 0x0A78,	0xFBAD,	0xFBD3,	0x0AD4,	0x06BE,	0xF49B,	0x0974,
        0xF69C,	0x0E9D,	0xFD1A,	0xFA51,	0x0DE2,	0x047D,	0x0716, 0x07E3,	0xFBCA,	0xFE6F,	0x0EA9,	0xFD2E,	0xF3A1,	0xF144,
        0xFCA8,	0x0A8A,	0xFBB4,	0xF239,	0x0C88,	0xF47D,	0x0DCC, 0x0E83,	0xF6A8,	0xFE37,	0x05AB,	0x0E75,	0xF99A,	0x0594,
        0x0BA2,	0xFBF9,	0x00C2,	0x00A9,	0x0D10,	0x045E,	0xFECF, 0xF9D3,	0xF983,	0x0101,	0xFBD5,	0xF9BC,	0x0288,	0x0CBF,
        0x074B,	0x0AF9,	0x0277,	0x0683,	0xF331,	0xF77B,	0xFDD0, 0xFAE9,	0x011B,	0x08A6,	0xF71F,	0x0939,	0x0AC3,	0xFA7D,
        0x0EB2,	0x0862,	0xF22B,	0x00E1,	0xFD6D,	0x0101,	0x0747, 0x0A55,	0x02E0,	0xFC4F,	0xFA61,	0x0553,	0x0E4C,	0x0D33,
        0x065A,	0x028C,	0xFB53,	0xF7A9,	0xF47F,	0x030F,	0x03C0, 0x08E5,	0x00B9,	0xF4FF,	0x0697,	0xF615,	0xFCE4,	0xF33F,
        0x0769,	0xF1D6,	0xF63F,	0xFB00,	0xF622,	0xFFC5,	0xF63D, 0xF9A0,	0xF77E,	0x0374,	0xF9CE,	0x0925,	0x053E,	0xF90A,
        0x07E8,	0x06E1,	0xF1FE,	0xFBCE,	0xFF01,	0xF941,	0xF695, 0xF35E,	0xFD1C,	0xF9C4,	0xF6C6,	0xF3F7,	0x08F5,	0xF2B4,
        0x0CC1,	0xFF57,	0x0E71,	0x0A6B,	0x0B64,	0xFE87,	0xF241, 0xFFD9,	0x0948,	0x093F,	0x0E95,	0xF482,	0x0079,	0xFAEC,
        0xFD77,	0x090B,	0x0E75,	0x0A8F,	0xF1B1,	0x07FA,	0xF285, 0xFB93,	0x01BD,	0x063C,	0x04E4,	0xFCB6,	0x0CEB,	0x0715,
        0xF736,	0x0BE7,	0xFDF7,	0x0570,	0x0B13,	0x0729,	0xF623, 0x05B9,	0xF4DE,	0xFCB9,	0x0796,	0xFCE5,	0x08DB,	0xF19E,
        0x018A,	0x0B19,	0xF436,	0xF188,	0xF8E5,	0xF3DB,	0xF40F, 0xF85B,	0x0373,	0x0878,	0xF306,	0xF974,	0x0A1F,	0xF3D9,
        0xFCDD,	0xFAA6,	0xF729,	0xF653,	0xF5AC,	0x02AC,	0x0CF3, 0x0D2C,	0xF4CB,	0xF9E5,	0x0CB9,	0xF3FA,	0xFFE0,	0xF3FC,
        0x08ED,	0xF674,	0x03C8,	0x0EBE,	0x064E,	0xF89E,	0xF111, 0xF226,	0xFDD4,	0xFE0C,	0xF305,	0xFBFC,	0x04D4,	0x0732,
        0x04D6,	0xF8F8,	0xFED5,	0x07F2,	0xF7A4,	0xF636,	0xFFEA, 0xF344,	0xFA2C,	0xFA4E,	0x0937,	0xFF55,	0xF857,	0x0892,
        0x0C8F,	0xFC68,	0xF251,	0xF31A,	0x0EBE,	0xF32D,	0xF78E, 0x03CB,	0x02AE,	0x0465,	0xF39C,	0x073D,	0xF361,	0xF9B5,
        0x0044,	0x0E20,	0x0ED7,	0x00FC,	0x0700,	0xFE7F,	0xFFE9, 0x072A,	0x078B,	0x0652,	0x0EEC,	0xF14C,	0xF261,	0x0CC9,
        0xF7A5,	0x0CA3,	0x08C3,	0x0C00,	0x0BE5,	0x03A0};

//oR4 = cR mod 4
    const std::vector<int> oR4Decrypt{0X64, 0X31, 0XA2, 0XCA, 0XAA, 0XD3, 0X69, 0XE1, 0X13, 0XA0, 0XF1,
                                       0XB3, 0XEB, 0XF6, 0XFD, 0X9B, 0XFB, 0X38, 0X0F, 0XF7, 0X1C, 0XFE,
                                       0XF9, 0XA0, 0X08, 0X4C, 0XA7, 0XCC, 0X34, 0XD8, 0XC3, 0X0C, 0X2E,
                                       0X82, 0X8A, 0XB0, 0X79, 0X5E, 0XF9, 0X99, 0X31, 0XB9, 0XA2, 0XBF,
                                       0XAB, 0XBD, 0X64, 0X4A, 0X66, 0X0B, 0X18, 0X7C, 0X29, 0XB4, 0X87,
                                       0XCB, 0X24, 0X2B, 0XDB, 0X7D, 0X31, 0X85, 0X9B, 0X4D, 0X32, 0X53,
                                       0X61, 0X3A, 0X72, 0XA4, 0X7D, 0XCF, 0X00, 0X56, 0XB4, 0X92, 0X13,
                                       0X32, 0X7F, 0X3C, 0X6B, 0X19, 0X5A, 0X3C, 0XD4, 0X53, 0X6E, 0X9F,
                                       0XE0, 0X30, 0X7F, 0X07, 0XF6, 0X42, 0XF5, 0XEE, 0X22, 0XB3, 0X2C,
                                       0X26, 0XFD, 0X78, 0X77, 0XED, 0X44, 0X60, 0XA4, 0XEE, 0X6D, 0X23,
                                       0XBC, 0XEC, 0X68, 0X02, 0X24, 0X47, 0X2B, 0X00, 0X75, 0X54, 0XCB,
                                       0XC7, 0X6D, 0XC0, 0X3B, 0X1A, 0XDD, 0XB1, 0XAD, 0XF5, 0X5E, 0XF6,
                                       0XBC, 0XE1, 0X9F, 0XF2, 0XFB, 0X08, 0X13, 0X3B, 0X69, 0X8D, 0XE5,
                                       0X8F, 0X97, 0X1A, 0X43, 0X46, 0X6C, 0X1D, 0XEF, 0X2E, 0XFC, 0XE4,
                                       0X64, 0X18, 0X1F, 0X11, 0XCB, 0X06, 0X66, 0XED, 0X90, 0X84, 0X4C,
                                       0XF6, 0X26, 0X4B, 0XF5, 0X0F, 0X7D, 0XC7, 0XB7, 0X6B, 0X57, 0X4D,
                                       0XCE, 0X37, 0XC5, 0XF4, 0XDB, 0X25, 0X22, 0X68, 0X69, 0X58, 0X2D,
                                       0X1D, 0XCD, 0X4D, 0X93, 0XDD, 0X9D, 0X0B, 0X6F, 0X37, 0X66, 0X7A,
                                       0X61, 0XFF, 0X23, 0X59, 0XC3, 0X35, 0X81, 0X0A, 0X98, 0X10, 0XA1,
                                       0X8A, 0X0B, 0X7B, 0X1A, 0X6E, 0X45, 0X43, 0X0D, 0XB8, 0X15, 0XF1, 0X00};

//mask = MGF (oR4)
    const std::vector<int> mask{-1, 1, -1,  0,  0,  0,  1,  1,  1, -1,  0, -1, -1, -1, -1, -1, -1,  1, -1,  1,  0,  0,  0, 1, 0, 0,
                1,  1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,  1,	 1,	-1,	-1,	-1,	 0,	 0,	 1,	-1,	 1,	-1,	 0,	 1,
                1,	 0,	 0,	-1,	-1,	 0,	 1,	-1,	-1,	 1,	 0,	 0,	-1,  1,	-1,	 0,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	 1,	-1,
                -1,	 0,	 0,	-1,	 1,	 0,	 1,	 1,	 0,	 1,	 1,	 1,	 0, -1,	-1,	-1,	 1,	 1,	 0,	 0,	 0,	 1,	 0,	 1,	 1,	 1,
                -1,	 0,	-1,	 1,	-1,	 0,	 0,	-1,	 1,	-1,	-1,	 1,	 0, -1,	 0,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 1,	-1,	-1,	-1,
                -1,	 0,	-1,	-1,	 0,	 0,	 0,	 0,	 1,	 1,	 1,	 0,	 0, -1,	 1,	 1,	 0,	 1,	 1,	 1,	 1,	 0,	 1,	-1,	 1,	 0,
                0,  1,	-1,	-1,	-1,	 1,	-1,	-1,	 1,	 1,	 0,	 1,	-1,  0,	 0,	-1,	 0,	-1,	 1,	 0,	 1,	-1,	 0,	-1,	 1,	-1,
                1,	-1,	 0,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,  0,	-1,	-1,	 0,	-1,	 1,	 1,	 0,	-1,	 1,	-1,	 0,	 0,
                1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	-1,	 0,	-1,	 0,	 0, -1,	-1,	 0,	 1,	 0,	 1,	-1,	-1,	 1,	 1,	-1,	-1,	 1,
                -1,	-1,	 0,	 1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	 1,	 1,  0,	 1,	 1,	 0,	 1,	-1,	 1,	-1,	-1,	 0,	 1,	 1,	 0,
                -1,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	 1,	 1,	 0,	 1,	-1,  1,	 0,	 0,	 0,	-1,	 1,	-1,	 1,	-1,	 0,	 0,	 0,	-1,
                1,	-1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	 0, -1,	 1,	-1,	-1,	 1,	 0,	 0,	 0,	 1,	 0,	-1,	 1,	 1,
                0,	-1,	-1,	 0,	 1,	 0,	 1,	 1,	-1,	 1,	-1,	 0,	-1,  1,	-1,	-1,	 1,	-1,	 0,	-1,	 1,	 1,	 1,	-1,	-1,	 1,
                0,	-1,	 1,	 0,	 1,	-1,	 1,	 0,	-1,	 0,	 1,	 0,	 0,  1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 0,	-1,	 1,
                1,	-1,	 0,	 1,	-1,	-1,	 0,	-1,	 0,	 1,	-1,	 1,	-1,  0,	-1,	 1,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 1,
                0,	 1,	 1,	 1,	-1,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	-1, -1,	 0,	-1,	-1,	 1,	-1,	 1,	-1,	-1,	-1,	-1,	 0,	 1,
                1,  1,	 0,	 1,	 1,	 0,	 0,	 0,	 1,	 1,	 0,	-1,	 0, -1,	 1,	 0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	 1,	 0,
                1,	 0,	 0,	 1,	 0,	-1,	-1,	-1,	 0,	-1,	 1,	 1,	 0, -1,	 0,	-1,	 0,	-1,	 1,	 0,	-1,	-1,	 1,	-1,	 0,	-1,
                0,  0,	-1,	 1,	-1,	 1,	 1,	 1,	 1,	-1,	-1,	 0,	-1, -1,	-1,	 1,	 1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 1,	 0,
                -1,	 1,	-1,	 0,	 1,	 1,	 0,	-1,	-1,	-1,	 1,	 1,	 1,  0,	 0,	-1,	 1,	 1,	 1,	 1,	 0,	-1,	-1,	 0,	-1,	 0,
                1,  1,	 0,	 0,	 1,	-1,	-1,	-1,	-1,	 0,	-1,	-1,	-1, -1,	 1,	-1,	 0,	-1,	 1,	 1,	-1,	 0,	-1,	 0,	 1,	 0,
                -1,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	-1,	 1,	-1,	 1,	-1, -1,	 1,	 0,	 1,	 1,	-1,	 1,	-1,	 1,	 1,	 1,	 1,	-1,
                1,	-1,	-1,	-1,	 1,	 1,	-1,	-1,	-1,	 1,	 1,	-1,	 0, -1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	-1,	 0	-1,
                1,	 1,	 1,	-1,	-1,	-1,	-1,	 1,	 1,	 0,	 1,	 1,	 1, -1,	 0,	-1,	 0,	-1,	 1,	 1,	 1,	-1,	 1,	-1,	-1,	 0,
                -1,	 0,	 0,	-1,	-1,	 0,	-1,	 1,	 1,	 0,	 1,	-1,	 0,  1,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	-1,	-1,	 0,	 1,
                -1,	-1,	 1,	-1,	 0,	-1,	 0,	-1,	-1,	 0,	 0,	 0,	-1, -1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	-1,	-1,	 1,	 0,	 0,
                0,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	-1,	-1,	-1,  1,	 1,	-1,	-1,	 0,	 0,	 1,	 0,	-1,	-1,	 1,	 1,	-1,
                1,	 0,	-1,	 1,	 0,	 0,	-1,	 1,	 0,	 1,	-1,	-1,	 1,  1,	 1,	 0,	-1,	 1,	 1,	 0,	-1,	 1,	-1,	 1,	 1,	-1,
                1,	 0,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	-1,	-1,	 0,  1,	 0,	 0,	 1,	 1,	 0,	 1,	 1,	 1,	 0,	 0,	-1,	 1,
                0,	-1,	-1,	-1,	 1,	 0,	 0,	-1,	 0,	-1,	 1,	 1,	 1,  1,	-1,	-1,	 0,	-1,	-1,	-1,	 0,	 0,	 0,	 0,	 1,	 0,
                0,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	-1,	 0,	-1,	-1,	 1, -1,	-1,	 0,	 1,	 1,	-1,	-1,	 0,	 0,	-1,	 1,	-1,	 1,
                1,	-1,	-1,	-1,	 0,	-1,	 0,	-1,	 0,	 1,	 1,	-1,	 0,  1,	-1,	 1,	 1,	 1,	 1,	 0,	 0,	 1,	 0,	-1,	-1,	-1,
                -1,	 0,	 1,	 1,	 1,	 0,	 0,	-1,	 0,	-1,	 1,	 0,	 0,  0,	-1,	 1,	 0,	-1,	 1,	 1,	-1,	 1,	-1,	 1,	 0,	 1,
                -1,	 0,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 1,	-1,  0, 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

//Mtrin’ = m' – maska
    const std::vector<int> MtrinDecrypt{0,  0,  0, 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 0,
                0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 1,	 0,
                0,	 1,	 0,	 1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,  0,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 1,	 0,	 0,
                0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 1,	 1,	 0,	 1, -1,  0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 0,
                0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	 1,  0,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	 0,	 0,	 1,	-1,	 0,
                -1,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	-1,	-1,	 1,	 0,	 0, -1,  0,	 0,	 0,	 0,	 1,	 1,	 1,	 1,	 1,	 1,	 0,	 0,
                -1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	-1,	 0,	 0,	 0,  1,	 0,	 1,	-1,	 0,	 0,	-1,	 1,	 1,	 1,	 0,	 1,	-1,
                1,	-1,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 1,	-1,	 0,	 0,  0,	 1,	 0,	-1,	 1,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,
                -1,	-1,	 0,	 0,	 1,	 1,	 1,	 0,	 0,	 1,	 0,	 0,	 1,  0,	 0,	-1,	 0,	 1,	 1,	 0,	 1,	 1,	-1,	 1,	 1,	 1,
                0,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	-1,	 0,	 1,	-1,	 1,  0,	 0,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,
                -1,	 0,	 0,	 1,	 1,	 1,	 1,	 0,	-1,	 0,	 1,	 0,	 0, -1,  0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	 1,	 1,	-1,	 0,
                1,	 0,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 1,	 1,	-1,  0,	 0,	 0,	 1,	 0,	-1,	 0,	-1,	 0,	-1,	 1,	-1,	 0,
                0,	 1,	-1,	 1,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 1,	 1,	 1,	-1,	-1,	 0,	 0,	 1,	 1,	 0,	-1,
                0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 1,  1,	 1,	 1,	 1,	 1,	 0,	 0,	 1,	 1,	 1,	-1,	 0,	 1,
                1,	 0,	 1,	 1,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0, -1,	 0,	-1,	 1,	 0,	 1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,
                1,	 1,	 1,	-1,	 1,	 0,	-1,	 0,	 1,	-1,	 0,	-1,	 0,  1,	 0,	-1,	 0,	 0,	 0,	-1,	 1,	 1,	-1,	 0,	 1,	-1,
                1,	 1,	 1,	 1,	 0,	-1,	 1,	 1,	-1,	 0,	 0,	 0,	 0,  0,	-1,	 0,	 0,	 0,	-1,	 1,	 1,	 0,	 1,	 0,	 1,	 0,
                0,	 1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	-1,  1,	-1,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	-1,	 0,	 1,
                1,	 1,	 1,	 0,	 1,	 0,	 1,	 0,	 1,	 0,	-1,	 0,	-1,  1,	 1,	 1,	 1,	 1,	-1,	 1,	-1,	 0,	 1,	 1,	 1,	 0,
                -1,	 1,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	 0,	 1,	 0,	 1, -1,	 1,	 0,	-1,	 1,	 1,	 0,	 0,	 1,	-1,	 0,	 0,	 1,
                -1,	 0,	-1,	 0,	-1,	 0,	-1,	 1,	 1,	-1,	 0,	 1,	-1,  0,	-1,	 0,	 1,	 0,	-1,	 1,	-1,	 0,	-1,	 1,	-1,	 1,
                1,	 1,	-1,	 1,	 0,	 1,	-1,	 1,	 0,	 0,	 0,	 0,	-1, -1,	 0,	 0,	-1,	 1,	-1,	 1,	-1,	 0,	 1,	 1,	 0,	 1,
                0,	 0,	-1,	-1,	 1,	 0,	 0,	 1,	-1,	-1,	 0,	 1,	-1,  1,	 0,	-1,	 0,	 0,	-1,	-1,	 1,	-1,	 0,	-1,	 0,	 0,
                0,	 0,	 1,	 1,	 1,	 0,	 1,	 1,	 0,	 0,	 0,	 1,	 1, -1,	 0,	 0,	 1,	 1,	-1,	 1,	 1,	 1,	 1,	 1,	 0,	 0,
                1,	 0,	-1,	-1,	 0,	 1,	 0,	 0,	 1,	 1,	 1,	-1,	 1,  1,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 1,	 1,	 1,	-1,	 1,
                -1,	 0,	-1,	 1,	 0,	 0,	-1,	-1,	 0,	-1,	 0,	-1,	 0,  0,	 1,	 1,	-1,	 1,	-1,	 1,	 0,	 1,	 0,	 1,	 1,	-1,
                0,	-1,	 1,	 1,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,	 1,  0,	-1,	-1,	 1,	 0,	 1,	 0,	 1,	-1,	 0,	 1,	 0,	 1,
                0,	 1,	-1,	 0,	 0,	-1,	 1,	 0,	-1,	 1,	-1,	-1,	 0, -1,	 0,	 1,	 0,	 1,	-1,	-1,	 0,	-1,	 1,	 1,	 1,	 0,
                1,	-1,	 1,	 0,	 1,	 1,	 0,	-1,	 0,	 1,	 1,	-1,	 1,  1,	-1,	 1,	-1,	-1,	 1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,
                -1,	-1,	 1,	-1,	 1,	 0,	 1,	-1,	 1,	-1,	 1,	 1,	 1,  0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,
                -1,	 1,	 1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,  0,	 0,	 1,	-1,	 1,	 1,	 0,	 1,	 1,	-1,	 0,	 0,	 1,
                0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	-1,	 1,	 0,  0,	 0,	 1,	-1,	 0,	-1,	 0,	 1,	 1,	 0,	 1,	 1,	 1,
                0,	 0,	 1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 1,	-1,	 0,  1,	 1,	 1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 0,
                -1,	 0,	 1,	 1,	 1,	 1,	 1,	 1,	-1,	 0,	 1,	 0,	 1, -1,	 0,	 0,	-1,	 1,	 1,	 1,	 1,	 1,	-1,	 1,	 0,	 0,
                1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0};

    const std::vector<int> Mbin{0X00,	0X01,	0X02,	0X03,	0X04,	0X05,	0X06,	0X07,	0X08,	0X09,	0X0A,
                                 0X0B,	0X0C,	0X0D,	0X0E,	0X0F,	0X10,	0X11,	0X12,	0X13,	0X14,	0X15,
                                 0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,	0X1F,	0X83,
                                 0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                                 0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,	0X27,	0X28,	0X29,
                                 0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,	0X32,	0X33,	0X34,
                                 0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,	0X3D,	0X3E,	0X3F,
                                 0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,	0X48,	0X49,	0X4A,
                                 0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,	0X53,	0X54,	0X55,
                                 0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,	0X5E,	0X5F,	0X60,
                                 0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,	0X69,	0X6A,	0X6B,
                                 0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,	0X74,	0X75,	0X76,
                                 0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,	0X7F,	0X80,	0X81,
                                 0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,	0X8A,	0X8B,	0X8C,
                                 0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,	0X95,	0X96,	0X00};

    const std::vector<int> M_{0X14,	0X15,	0X16,	0X17,	0X18,	0X19,	0X1A,	0X1B,	0X1C,	0X1D,	0X1E,
                               0X1F,	0X20,	0X21,	0X22,	0X23,	0X24,	0X25,	0X26,	0X27,	0X28,	0X29,
                               0X2A,	0X2B,	0X2C,	0X2D,	0X2E,	0X2F,	0X30,	0X31,	0X32,	0X33,	0X34,
                               0X35,	0X36,	0X37,	0X38,	0X39,	0X3A,	0X3B,	0X3C,	0X3D,	0X3E,	0X3F,
                               0X40,	0X41,	0X42,	0X43,	0X44,	0X45,	0X46,	0X47,	0X48,	0X49,	0X4A,
                               0X4B,	0X4C,	0X4D,	0X4E,	0X4F,	0X50,	0X51,	0X52,	0X53,	0X54,	0X55,
                               0X56,	0X57,	0X58,	0X59,	0X5A,	0X5B,	0X5C,	0X5D,	0X5E,	0X5F,	0X60,
                               0X61,	0X62,	0X63,	0X64,	0X65,	0X66,	0X67,	0X68,	0X69,	0X6A,	0X6B,
                               0X6C,	0X6D,	0X6E,	0X6F,	0X70,	0X71,	0X72,	0X73,	0X74,	0X75,	0X76,
                               0X77,	0X78,	0X79,	0X7A,	0X7B,	0X7C,	0X7D,	0X7E,	0X7F,	0X80,	0X81,
                               0X82,	0X83,	0X84,	0X85,	0X86,	0X87,	0X88,	0X89,	0X8A,	0X8B,	0X8C,
                               0X8D,	0X8E,	0X8F,	0X90,	0X91,	0X92,	0X93,	0X94,	0X95,	0X96};

    const std::vector<int> r_{ 0,  1, -1, -1,  0, -1,  0,  1, -1,  1,  0,  0,  1,  0,  0, -1,  1,  0,  0,  0, -1, 0, 0,  0,  0,	 1,
                0,	 0,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,	 0,  0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,
                0,	 0,	-1,	 0,	-1,	 1,	 1,	 0,	-1,	 0,	 1,	-1,	 0, -1,	 1,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 0,
                0,	 0,	 0,	 1,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	 0,  0,	 0,	 0,	-1,	-1,	-1,	-1,	 0,	 0,	 1,	 0,	 0,	 0,
                -1,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,  1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,
                0,	 0,	-1,	 0,	 0,	 0,	 0,	 1,	 0,	 1,	 0,	 1,	 0,  0,	 0,	 0,	-1,	 0,	-1,	 1,	-1,	 0,	 1,	 0,	 0,	 1,
                0,	 0,	-1,	 0,	 0,	-1,	-1,	 0,	 0,	 0,	 1,	 0,	 1,  0,	-1,	 0,	 1,	 0,	 0,	 1,	 0,	 0,	 1,	 1,	 0,	 1,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,	 1,	 1, -1,	-1,	 1,	 1,	 0,	 0,	 0,	-1,	 0,	-1,	-1,	 1,	 0,
                0,	 0,	 0,	 1,	 0,	-1,	 0,	-1,	 1,	 0,	 0,	-1,	 1,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,
                0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 1,	 1,	 0,	-1,	-1,  0,	-1,	-1,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,
                0,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	-1,	-1,	 0,	 0,  0,	 0,	 1,	-1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	-1,	 0,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 1, -1,	 0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	-1,	-1,	 1,
                -1,	 0,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	 0,	 1,  0,	 0,	 0,	 0,	-1,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	-1,
                0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	 0,	 0,  0,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 1,	 0,
                0,	-1,	-1,	 0,	 1,	 1,	 0,	 0,	 1,	 0,	 1,	-1,	-1,  0,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,
                0,	 1,	-1,	 0,	-1,	 0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,  0,	-1,	-1,	 0,	 1,	 1,	-1,	 0,	 0,	-1,	 1,	 0,	 0,
                0,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,  1,	 1,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,
                0,	 1,	 1,	 0,	-1,	 1,	 0,	 0,	 0,	-1,	 0,	 0,	-1,  0,	 0,	 1,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,
                1,	 1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,	-1,  1,	 0,	 0,	-1,	 0,	 0,	 1,	-1,	 1,	 0,	 0,	 1,	 0,
                0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,	-1, -1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,
                -1,	-1,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	-1,	 0,  0,	 0,	-1,	 0,	 1,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,
                -1,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	-1,	-1,	 0,	 0,	 1,  1,	-1,	 0,	 1,	 1,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,
                0,	 0,	 0,	 0,	-1,	-1,	 1,	 1,	-1,	 0,	-1,	 1,	 0,  1,	 1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 1,	 0,	 0,	 1,
                0,	-1,	 1,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	-1,	-1,	 0,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 0,
                0,	 0,	 0,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 0,	-1,	 0,  0,	 1,	 0,	 0,	 1,	 0,	 1,	 0,	 0,	 0,	-1,	 0,	 0,
                0,	 1,	 0,	-1,	-1,	 0,	 0,	 0,	 0,	 0,	 1,	 1,	 0,  1,	-1,	 1,	 1,	 1,	 0,	-1,	 1,	 0,	 0,	 0,	 1,	 0,
                0,	 0,	 1,	 0,	 1,	 0,	 0,	-1,	 1,	 1,	-1,	 1,	 0,  1,	 0,	-1,	 0,	 0,	 1,	-1,	-1,	 0,	 0,	 0,	-1,	 1,
                0,	 1,	-1,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	-1,  0,	 0,	 0,	 0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 0,	 1,
                0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,  0,	 0,	 0,	 0,	 0,	 1,	 0,	-1,	 0,	 0,	 0,	 0,	 0,
                0,	-1,	 0,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,  0,	 0,	 0,	 0,	 0,	 0,	 0,	 1,	 0,	 0,	 0,	 0,	-1,
                -1,	 0,	 0,	-1,	-1,	 1,	 1,	 0,	-1,	 0,	 0,	 0,	-1,  0,	 0,	-1,	 0,	-1,	 1,	 0,	 1,	 0,	-1,	 0,	 0,	-1,
                1,	 0,	 0,	-1,	 1,	 0,	 0,	 0,	 0,	 1,	 0,	 1,	-1,  0,	-1,	 0,	 1,	 0,	 0,	-1,	 0,	 1,	-1,	 0,	 1,	-1,
                0,	-1,	 0,	 1,	 0,	 0,	 0,	 0,	 0,	-1,	 0,	 0,	 1,  1,	 0,	-1,	 0,	 0,	-1,	 0,	 0,	 0,	 1,	 0,	 0,	 0,
                0,	 0,	 0,	 0,	 1,	 1,	 0,	 0,	 0,	 0,	 0,	 0,	-1,  0,	 0,	 0,	-1,	 0,	-1,	 0,	 0,	 0,	-1};

    const std::vector<int> RDecrypt{0x0AD1,	0xF7E6,	0x01E1,	0x0DB0,	0x0134,	0xF513,	0xFAF8,
        0x03CD,	0x0C82,	0x0DDE,	0x0680,	0xF1AA,	0x0E8F,	0x0338, 0x03F2,	0xFE76,	0x083A,	0x074A,	0xFA9A,	0x0096,	0x086F,
        0x081D,	0x0C88,	0xF2D7,	0xF83D,	0x02BE,	0xF3BE,	0x04E1, 0x036F,	0xFC86,	0xF3E8,	0x00A5,	0x0D94,	0x096D,	0xF978,
        0x0303,	0x0E72,	0xFB1E,	0xFB70,	0xFC64,	0x0B7B,	0xFBE7, 0x0CD0,	0xF6C1,	0x0D26,	0xF8B7,	0x05E0,	0xFD7B,	0xF4F3,
        0x046E,	0x0B86,	0xF673,	0x07FF,	0x0693,	0x060D,	0xFCDE, 0x0B3F,	0x00E7,	0xF953,	0xF9B5,	0xF6A6,	0x0179,	0xFF2A,
        0x0E17,	0x0103,	0xF1DB,	0xF202,	0xFA7B,	0xF2C8,	0xF957, 0x07AA,	0xF534,	0xF420,	0x0788,	0xF7D7,	0xFCD7,	0x0C1B,
        0xFAEB,	0x0CD1,	0x0867,	0x0A78,	0xF999,	0x0EB7,	0xFBF8, 0xF31F,	0xFE2F,	0x0913,	0xFF42,	0xFA13,	0xF73B,	0x07AE,
        0xF4C5,	0xF866,	0xF3BE,	0x0314,	0xF2C8,	0x01AC,	0xF4F4, 0xF876,	0xF930,	0x08F9,	0x082C,	0x0027,	0x0600,	0x0566,
        0xF96E,	0x0AAD,	0x0327,	0xFA8F,	0x0D68,	0xF55B,	0x03D8, 0x0CFC,	0xF4AB,	0xF63D,	0xFC58,	0xF3D7,	0x0EB5,	0x08E6,
        0x0E08,	0x0D33,	0x0058,	0x0840,	0xF1DF,	0x085C,	0xFE40, 0x06EB,	0x0EA8,	0x00E8,	0x055A,	0x0E67,	0xFAE6,	0x0196,
        0x0470,	0x0D94,	0xF2C2,	0xF2BE,	0xF6DC,	0xF7A6,	0xF79E, 0xF116,	0xF5F7,	0xF5C8,	0x0D28,	0x0C1D,	0x09F3,	0xF7C6,
        0x05D5,	0xFDE5,	0xF285,	0xF97B,	0x098A,	0xFAD3,	0xFBA3, 0x0106,	0x08B9,	0xF2EE,	0xFA19,	0x0C8A,	0xFC5D,	0xF938,
        0x002F,	0xF9BC,	0xF461,	0xF536,	0xF713,	0x090E,	0x08FD, 0xF786,	0x003A,	0x0C50,	0x021A,	0xF676,	0x01C7,	0x09BB,
        0xF4F7,	0xF1E6,	0x0E9E,	0x089A,	0x02FB,	0x01EE,	0xF39F, 0xF15B,	0xFA11,	0x061D,	0x077A,	0xF49D,	0xFB30,	0x01F5,
        0x05F4,	0x0CDE,	0x01BE,	0xF9C1,	0x0A66,	0x0181,	0x055A, 0xF948,	0xF50C,	0xF42E,	0xFB3B,	0x0E24,	0xF88D,	0x0456,
        0x0EA0,	0x01E1,	0x06B7,	0xFCB3,	0x0690,	0xFEF0,	0x00F6, 0x0696,	0xF411,	0xFA1E,	0x041B,	0x08BD,	0x0454,	0x09FA,
        0xF750,	0xF5FD,	0x04F7,	0x0133,	0xF2D0,	0xFC9A,	0xFBF3, 0x0158,	0xFF22,	0xF315,	0xF430,	0x0EAC,	0xF60A,	0x0D6A,
        0xF863,	0xF7DF,	0x0461,	0xF67E,	0x0B4F,	0x0809,	0x00A3, 0xF7F7,	0xF205,	0xF254,	0xF8A3,	0x0C40,	0xFA79,	0xF54E,
        0x0244,	0xFFF9,	0xFEF5,	0xFC96,	0xFABD,	0x0C9A,	0xF5B3, 0x04ED,	0xF7D4,	0xFC7B,	0x04A9,	0x00A0,	0xFD17,	0x0AE4,
        0x03EE,	0x0E55,	0x0D25,	0x0E34,	0x0EC3,	0x0431,	0xF386, 0xFEF0,	0xF2F9,	0xFCB0,	0xF18F,	0x049A,	0x0782,	0xF7B5,
        0xFE93,	0xF44C,	0x054E,	0xF6DE,	0xF6B6,	0xFBA5,	0x0E3C, 0xFDDD,	0x00AF,	0x02B3,	0xF4FD,	0xFC63,	0xF70C,	0xFD53,
        0xF2A7,	0xFB2C,	0xFE4C,	0x0434,	0x0E08,	0xFE3D,	0x0DAD, 0xFC9D,	0xF842,	0xF3F6,	0x004B,	0x0C51,	0xF7C4,	0xFE8E,
        0xFD51,	0x0748,	0xF47E,	0xF910,	0x05D1,	0xF9C0,	0x01DB, 0xFAA0,	0x088B,	0x09C8,	0xFE56,	0x0DCD,	0x053F,	0xFB13,
        0xF7A3,	0x0A38,	0xFF7B,	0x0323,	0xFF64,	0x0625,	0x0892, 0x036A,	0x0567,	0xFD00,	0x037D,	0x017E,	0xF9C5,	0x0295,
        0x0DBD,	0xF122,	0x0EB6,	0x0E8C,	0x04EF,	0xF593,	0xF334, 0xFFE3,	0x061D,	0xF23D,	0x01A4,	0xF5C1,	0x081D,	0x0C24,
        0x0A5B,	0xF969,	0x0066,	0x0B77,	0xFED6,	0xF932,	0x060D, 0xFEA7,	0x0B17,	0xFF1F,	0xF9AE,	0xF844,	0x0CA0,	0x0CCC,
        0x05EF,	0xFFA4,	0xF450,	0x00E9,	0xF403,	0xF307,	0xFCB3, 0x0B84,	0xFF94,	0xF145,	0xF517,	0xF537,	0x07D3,	0x0A49,
        0x0B82,	0x08C5,	0xFCA4,	0xF29C,	0xF6C2,	0xF31B,	0xF177, 0xFDD5,	0x0801,	0xFB97,	0xFA4A,	0x0557,	0x0BF6,	0x019C,
        0x03E2,	0x043C,	0xF64A,	0x0AEE,	0x0B6F,	0x0E34,	0x048F, 0xFFD0,	0xF432,	0x0C7B,	0x0E30,	0x0274,	0xF70E,	0x00E9,
        0xF67E,	0x0AFF,	0x0CF7,	0xFCE3,	0xFB85,	0xF861,	0x06D3, 0x089A,	0xF6E8,	0xF31D,	0xFC93,	0x0971,	0x089B,	0xF7CB,
        0xFAD6,	0x097B,	0x0379,	0x09C1,	0x0940,	0x0011,	0x068C, 0xF8B5,	0xF9AA,	0xF29C,	0x04FC,	0xFB56,	0xFA0A,	0x05D5,
        0xFA60,	0x0CD3,	0xF5DA,	0xF3EF,	0xF95E,	0x06E1,	0xFE12, 0x0157,	0x0845,	0xFBC4,	0xF3BA,	0xF494,	0x0387,	0x0902,
        0xF72B,	0x0BBF,	0xFED4,	0x0247,	0xFECA,	0xF4BF,	0x0458, 0x0EB1,	0x097E,	0xF826,	0x0018,	0x07FC,	0x0A9C,	0xFC70,
        0x010E,	0xFE10,	0x04CA,	0xF561,	0x0D64,	0xFDC9,	0xF958, 0x02A1,	0x0DBF,	0x0380,	0xF946,	0xF5EA,	0x03C3,	0x0790,
        0xFEB4,	0x0384,	0x0190,	0xF909,	0xF57B,	0xFD7D,	0xF275, 0x04C5,	0xF4C1,	0x0B4D,	0x05A4,	0xF6F3,	0x01E4,	0x099A,
        0x0CAF,	0x0D0F,	0xFBBC,	0x01C9,	0xF43B,	0xF565,	0xF78E, 0xFAA7,	0x06C9,	0x02E3,	0xF2E4,	0x0C3C,	0xFC84,	0xFAD4,
        0x029F,	0x0292,	0x0077,	0x0DB0,	0x0871,	0x0E3A,	0xF9B2, 0xF3B3,	0x0D29,	0x04C7,	0xF8E9,	0xFB4E,	0xF91F,	0x0320,
        0x06A5,	0x0312,	0xF132,	0xF277,	0xFAB1,	0x02AB,	0xFE37, 0x0909,	0xF111,	0xFDCD,	0xF355,	0x0D23,	0xFA2A,	0xF4AB,
        0x027B,	0x047D,	0x069A,	0x0DCA,	0xF19F,	0x0A53,	0x00CC, 0xF11B,	0x046A,	0x0E78,	0x0BF9,	0xF3AE,	0x0935,	0xFE4B,
        0xFC1F,	0xF70B,	0x06DF,	0xF6A0,	0x0CE2,	0x012B,	0xFB47, 0xFE96,	0x0347,	0x0CFC,	0xF7D4,	0x09F6,	0x0560,	0xF39C,
        0x0DE1,	0xFFC8,	0x01BF,	0x0D10,	0xFD23,	0x0472,	0x094B, 0x082D,	0xF75A,	0x09DA,	0xF93D,	0x0E56,	0x0708,	0x0DDF,
        0x0E81,	0x043B,	0xF97E,	0xF785,	0x0871,	0xF592,	0xFA20, 0xFD33,	0x08B3,	0xF6FE,	0x0D69,	0x0D11,	0xF1A3,	0x0638,
        0x023D,	0xF27E,	0x096A,	0xF3DD,	0x031C,	0xF494,	0x0B7F, 0xF609,	0x0358,	0xFE4D,	0x0366,	0xF869,	0x0312,	0x07F7,
        0x0468,	0x01F8,	0x0469,	0xFF2B,	0xFD29,	0x08AF,	0x029E, 0xF863,	0xF21B,	0xF888,	0xF292,	0x06C3,	0xF446,	0x0157,
        0xFEF3,	0xF903,	0xF608,	0xF757,	0x08AE,	0xF495,	0x08F4, 0x0D59,	0x0AE2,	0x0D4D,	0x0520,	0xFD24,	0x0D21,	0x0C6E,
        0x0520,	0xF9FC,	0x0531,	0xF65F,	0x0653,	0x03C4,	0xF6AD, 0x0A78,	0xFBAD,	0xFBD3,	0x0AD4,	0x06BE,	0xF49B,	0x0974,
        0xF69C,	0x0E9D,	0xFD1A,	0xFA51,	0x0DE2,	0x047D,	0x0716, 0x07E3,	0xFBCA,	0xFE6F,	0x0EA9,	0xFD2E,	0xF3A1,	0xF144,
        0xFCA8,	0x0A8A,	0xFBB4,	0xF239,	0x0C88,	0xF47D,	0x0DCC, 0x0E83,	0xF6A8,	0xFE37,	0x05AB,	0x0E75,	0xF99A,	0x0594,
        0x0BA2,	0xFBF9,	0x00C2,	0x00A9,	0x0D10,	0x045E,	0xFECF, 0xF9D3,	0xF983,	0x0101,	0xFBD5,	0xF9BC,	0x0288,	0x0CBF,
        0x074B,	0x0AF9,	0x0277,	0x0683,	0xF331,	0xF77B,	0xFDD0, 0xFAE9,	0x011B,	0x08A6,	0xF71F,	0x0939,	0x0AC3,	0xFA7D,
        0x0EB2,	0x0862,	0xF22B,	0x00E1,	0xFD6D,	0x0101,	0x0747, 0x0A55,	0x02E0,	0xFC4F,	0xFA61,	0x0553,	0x0E4C,	0x0D33,
        0x065A,	0x028C,	0xFB53,	0xF7A9,	0xF47F,	0x030F,	0x03C0, 0x08E5,	0x00B9,	0xF4FF,	0x0697,	0xF615,	0xFCE4,	0xF33F,
        0x0769,	0xF1D6,	0xF63F,	0xFB00,	0xF622,	0xFFC5,	0xF63D, 0xF9A0,	0xF77E,	0x0374,	0xF9CE,	0x0925,	0x053E,	0xF90A,
        0x07E8,	0x06E1,	0xF1FE,	0xFBCE,	0xFF01,	0xF941,	0xF695, 0xF35E,	0xFD1C,	0xF9C4,	0xF6C6,	0xF3F7,	0x08F5,	0xF2B4,
        0x0CC1,	0xFF57,	0x0E71,	0x0A6B,	0x0B64,	0xFE87,	0xF241, 0xFFD9,	0x0948,	0x093F,	0x0E95,	0xF482,	0x0079,	0xFAEC,
        0xFD77,	0x090B,	0x0E75,	0x0A8F,	0xF1B1,	0x07FA,	0xF285, 0xFB93,	0x01BD,	0x063C,	0x04E4,	0xFCB6,	0x0CEB,	0x0715,
        0xF736,	0x0BE7,	0xFDF7,	0x0570,	0x0B13,	0x0729,	0xF623, 0x05B9,	0xF4DE,	0xFCB9,	0x0796,	0xFCE5,	0x08DB,	0xF19E,
        0x018A,	0x0B19,	0xF436,	0xF188,	0xF8E5,	0xF3DB,	0xF40F, 0xF85B,	0x0373,	0x0878,	0xF306,	0xF974,	0x0A1F,	0xF3D9,
        0xFCDD,	0xFAA6,	0xF729,	0xF653,	0xF5AC,	0x02AC,	0x0CF3, 0x0D2C,	0xF4CB,	0xF9E5,	0x0CB9,	0xF3FA,	0xFFE0,	0xF3FC,
        0x08ED,	0xF674,	0x03C8,	0x0EBE,	0x064E,	0xF89E,	0xF111, 0xF226,	0xFDD4,	0xFE0C,	0xF305,	0xFBFC,	0x04D4,	0x0732,
        0x04D6,	0xF8F8,	0xFED5,	0x07F2,	0xF7A4,	0xF636,	0xFFEA, 0xF344,	0xFA2C,	0xFA4E,	0x0937,	0xFF55,	0xF857,	0x0892,
        0x0C8F,	0xFC68,	0xF251,	0xF31A,	0x0EBE,	0xF32D,	0xF78E, 0x03CB,	0x02AE,	0x0465,	0xF39C,	0x073D,	0xF361,	0xF9B5,
        0x0044,	0x0E20,	0x0ED7,	0x00FC,	0x0700,	0xFE7F,	0xFFE9, 0x072A,	0x078B,	0x0652,	0x0EEC,	0xF14C,	0xF261,	0x0CC9,
        0xF7A5,	0x0CA3,	0x08C3,	0x0C00,	0x0BE5,	0x03A0};
};
#endif //SKELYA_KEM_ENCRYPT_CONST_H
